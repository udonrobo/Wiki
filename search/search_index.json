{"config":{"lang":["ja"],"separator":"[\\s\\-\u3000\u3001\u3002\uff0c\uff0e]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u3053\u306e\u30da\u30fc\u30b8\u306b\u3064\u3044\u3066","text":"<p>\u9999\u5ddd\u9ad8\u5c02\u9ad8\u677e\u30ad\u30e3\u30f3\u30d1\u30b9\u6a5f\u68b0\u30b7\u30b9\u30c6\u30e0\u7814\u7a76\u90e8 (\u30ed\u30dc\u7814) \u306e wiki \u3067\u3059\u3002</p> <p>\u3053\u306e\u30da\u30fc\u30b8\u306f mkdocs \u3068 mkdocs-material \u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u3001GitHub Pages \u3067\u914d\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u5185\u5bb9\u306f\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u5f62\u5f0f\u3067\u3001udonrobo/wiki \u30ec\u30dd\u30b8\u30c8\u30ea\u3067\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>mkdocs \u3068\u306f</p> <p>\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u304b\u3089\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u3092\u751f\u6210\u3059\u308b\u9759\u7684\u30b5\u30a4\u30c8\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u3002mkdocs \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</p> <p>mkdocs-material \u3068\u306f</p> <p>mkdocs \u306e\u62e1\u5f35\u30c6\u30fc\u30de\u3067\u3059\u3002 mkdocs-material \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</p>"},{"location":"#_2","title":"\u74b0\u5883\u69cb\u7bc9","text":"<p>mkdocs \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</p> <pre><code>pip install mkdocs\npip install mkdocs-material\n</code></pre>"},{"location":"#_3","title":"\u7de8\u96c6\u65b9\u6cd5","text":"<p>udonrobo/wiki \u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3001VSCode \u7b49\u3067\u672c\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u958b\u304d\u307e\u3059\u3002</p> <pre><code>git clone https://github.com/udonrobo/wiki.git\ncode wiki/\n</code></pre> <p>wiki \u30ec\u30dd\u30b8\u30c8\u30ea\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e0b\u3067\u4ee5\u4e0b\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ed\u30fc\u30ab\u30eb\u30b5\u30fc\u30d0\u30fc\u3068\u30d6\u30e9\u30a6\u30b6\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002</p> <pre><code>python -m mkdocs serve --open\n</code></pre> <p>\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u4fdd\u5b58\u3059\u308b\u3068\u3001\u81ea\u52d5\u7684\u306b\u5909\u66f4\u304c\u53cd\u6620\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"#_4","title":"\u516c\u958b","text":"<p>GitHub \u3078\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u3068 GitHub Actions \u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u516c\u958b\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"actuator/brushless_motor/","title":"\u30d6\u30e9\u30b7\u30ec\u30b9\u30e2\u30fc\u30bf\u30fc","text":""},{"location":"actuator/motor/","title":"DC \u30e2\u30fc\u30bf\u30fc","text":""},{"location":"actuator/motor/#_1","title":"\ud83c\udf1f \u6982\u8981","text":"<p>\u76f4\u6d41\u96fb\u6e90\u3092\u4f9b\u7d66\u3059\u308b\u3053\u3068\u3067\u56de\u8ee2\u3057\u307e\u3059\u3002\u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u3092\u4ecb\u3057\u3066\u5236\u5fa1\u3057\u307e\u3059\u3002</p>"},{"location":"actuator/motor/#_2","title":"\ud83c\udf1f \u914d\u7dda","text":"<p>\u30de\u30d6\u30c1 385 \u30e2\u30fc\u30bf\u306e\u5834\u5408\u306e\u914d\u7dda\u56f3\u3067\u3059\u3002\u30e2\u30fc\u30bf\u30fc\u306b\u3088\u3063\u3066\u5b9a\u683c\u96fb\u5727\u304c\u7570\u306a\u308b\u306e\u3067\u3001\u9069\u5207\u306a\u96fb\u5727\u3092\u4f9b\u7d66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u5834\u5408\u306f 24V \u3067\u3059\u3002</p> \u5c0f\u96fb\u6d41\u7528\u5927\u96fb\u6d41\u7528\u5236\u5fa1\u7dda\u304c 2 \u7dda\u306e\u30bf\u30a4\u30d7 <p></p> <p></p> <p>DIR \u7dda\u3068 PWM \u7dda\u306e 2 \u7dda\u306e\u30bf\u30a4\u30d7\u3067\u3059\u3002\u3042\u307e\u308a\u4f7f\u308f\u306a\u3044\u306e\u3067\u914d\u7dda\u56f3\u306f\u5272\u611b\u3057\u307e\u3059\u3002</p> <p></p> <p></p>"},{"location":"actuator/motor/#3","title":"\ud83c\udf1f \u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2 / \u5236\u5fa1\u7dda 3 \u7dda","text":"<p>\u30d4\u30f3\u756a\u53f7\u306f\u57fa\u677f\u4e0a\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> \u6700\u5c0f\u69cb\u6210Udon::Motor3 \u30af\u30e9\u30b9\u3092\u4f7f\u3046 <pre><code>const int pinA = 0;\nconst int pinB = 2;\nconst int pinP = 1;\n\nvoid setup()\n{\n    pinMode(pinA, OUTPUT);\n    pinMode(pinB, OUTPUT);\n}\n\nvoid loop()\n{\n    digitalWrite(pinA, HIGH);\n    digitalWrite(pinB, LOW);\n    analogWrite(pinP, 100);  // 0~255 \u306e\u7bc4\u56f2\u3067PWM\u51fa\u529b\n}\n</code></pre> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::Motor3 motor{ 0, 2, 1 };\n\nvoid setup()\n{\n    motor.begin();\n}\n\nvoid loop()\n{\n    motor.move(100);\n}\n</code></pre>"},{"location":"actuator/motor/#2","title":"\ud83c\udf1f \u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2 / \u5236\u5fa1\u7dda 2 \u7dda","text":"\u6700\u5c0f\u69cb\u6210Udon::Motor2 \u30af\u30e9\u30b9\u3092\u4f7f\u3046 <pre><code>const int pinA = 0;\nconst int pinP = 1;\n\nvoid setup()\n{\n    pinMode(pinA, OUTPUT);\n}\n\nvoid loop()\n{\n    digitalWrite(pinA, HIGH);\n    analogWrite(pinP, 100);  // 0~255 \u306e\u7bc4\u56f2\u3067PWM\u51fa\u529b\n}\n</code></pre> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::Motor2 motor{ 0, 1 };\n\nvoid setup()\n{\n    motor.begin();\n}\n\nvoid loop()\n{\n    motor.move(100);\n}\n</code></pre>"},{"location":"actuator/power/","title":"\u96fb\u6e90","text":""},{"location":"actuator/robomaster_motor/","title":"\u30ed\u30dc\u30de\u30b9\u30e2\u30fc\u30bf\u30fc","text":""},{"location":"actuator/robomaster_motor/#_2","title":"\ud83c\udf1f \u6982\u8981","text":"<p>CAN \u901a\u4fe1\u7d4c\u7531\u3067\u5236\u5fa1\u3067\u304d\u308b\u30d6\u30e9\u30b7\u30ec\u30b9\u30e2\u30fc\u30bf\u30fc\u3067\u3059\u3002\u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u3068 CAN \u901a\u4fe1\u3067\u63a5\u7d9a\u3057\u307e\u3059\u3002</p> <p>\u96fb\u6d41\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u52d5\u4f5c\u3057\u3001\u307e\u305f\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc\u3092\u642d\u8f09\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u56de\u8ee2\u6570\u3084\u56de\u8ee2\u89d2\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p>\u30e2\u30fc\u30bf\u30fc\u306f ID \u3067\u8b58\u5225\u3057\u30011 ~ 8 \u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002</p>"},{"location":"actuator/robomaster_motor/#_3","title":"\ud83c\udf1f \u914d\u7dda","text":"<p>\u96fb\u6e90\u306f 24V \u3067\u3059\u3002M3508 (\u30c7\u30ab\u3044\u65b9) \u3082\u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u4ee5\u5916\u306f\u540c\u3058\u914d\u7dda\u3067\u3059\u3002</p> <p></p>"},{"location":"actuator/robomaster_motor/#id","title":"\ud83c\udf1f ID \u8a2d\u5b9a\u65b9\u6cd5","text":""},{"location":"actuator/robomaster_motor/#id_1","title":"\u5168\u30e2\u30fc\u30bf\u30fc\u306e ID \u3092\u4e00\u5ea6\u306b\u8a2d\u5b9a","text":"<ol> <li>\u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u306b\u96fb\u6e90\u3092\u5165\u308c\u308b</li> <li>\u30c9\u30e9\u30a4\u30d0\u306e SET \u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3001\u3082\u3046\u4e00\u5ea6\u9577\u62bc\u3057\u3059\u308b (LED \u304c\u9ec4\u7dd1\u8272\u306b\u70b9\u706f)</li> <li>CAN \u30d0\u30b9\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u30e2\u30fc\u30bf\u30fc\u3092\u624b\u3067\u56de\u3059\u3068\u3001\u56de\u3057\u305f\u9806\u306b 1, 2, 3, ... \u3068 ID \u304c\u8a2d\u5b9a\u3055\u308c\u308b</li> </ol>"},{"location":"actuator/robomaster_motor/#id_2","title":"\u500b\u5225\u306b ID \u3092\u8a2d\u5b9a","text":"<ol> <li>\u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u306b\u96fb\u6e90\u3092\u5165\u308c\u308b</li> <li>\u30c9\u30e9\u30a4\u30d0\u306e SET \u30dc\u30bf\u30f3\u3092\u62bc\u3059</li> <li>\u30c9\u30e9\u30a4\u30d0\u306e ID \u56de\u30dc\u30bf\u30f3\u3092\u62bc\u3059</li> <li>\u30c9\u30e9\u30a4\u30d0\u306e LED \u304c ID \u56de\u70b9\u6ec5\u3059\u308b</li> </ol>"},{"location":"actuator/robomaster_motor/#_4","title":"\ud83c\udf1f \u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2","text":"<p>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u304c\u8f09\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>https://github.com/udonrobo/UdonLibrary/blob/master/docs/Driver/RoboMasterMotor.md</p> C620 \u30c9\u30e9\u30a4\u30d0 &amp; Teensy4.0 \u3067\u96fb\u6d41\u5236\u5fa1\u3059\u308b\u4f8b<pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::CanBusTeensy&lt;CAN2&gt; bus;  // CAN2 \u30dd\u30fc\u30c8\u3092\u4f7f\u7528\n\nstatic Udon::RoboMasterC620 motor{ bus, 1 };  // \u30e2\u30fc\u30bf\u30fcID: 1\n\nvoid setup()\n{\n    bus.begin();\n}\n\nvoid loop()\n{\n    bus.update();\n\n    motor.setCurrent(1000);  // 1000 mA \u3067\u52d5\u4f5c\n}\n</code></pre>"},{"location":"actuator/robomaster_motor/#_5","title":"\ud83c\udf1f \u6c17\u3092\u4ed8\u3051\u308b\u70b9","text":"<ul> <li>\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u5bfe\u5fdc\u3057\u305f ID \u304c\u30e2\u30fc\u30bf\u30fc\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b</li> <li>\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u5bfe\u5fdc\u3057\u305f CAN \u30dd\u30fc\u30c8\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u304b (\u5199\u771f\u306e\u57fa\u677f\u306e\u5834\u5408\u3001CAN2)</li> <li>CAN \u901a\u4fe1\u306e\u7d42\u7aef\u62b5\u6297\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b</li> </ul>"},{"location":"actuator/servo/","title":"\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u30fc","text":""},{"location":"actuator/servo/#_2","title":"\ud83c\udf1f \u6982\u8981","text":"<p>PWM \u3067\u5236\u5fa1\u4fe1\u53f7\u3092\u9001\u308b\u3053\u3068\u3067\u3001\u6307\u5b9a\u3057\u305f\u89d2\u5ea6\u306b\u56de\u8ee2\u3059\u308b\u30e2\u30fc\u30bf\u30fc\u3067\u3059\u3002</p>"},{"location":"actuator/servo/#_3","title":"\ud83c\udf1f \u914d\u7dda","text":"<p>\u90e8\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u30b5\u30fc\u30dc\u306e\u5b9a\u683c\u96fb\u5727\u306f 5V \u306a\u306e\u3067\u3001DCDC \u30b3\u30f3\u30d0\u30fc\u30bf\u30fc\u3092\u4ecb\u3057\u3066\u964d\u5727\u3057\u3066\u304b\u3089\u4f9b\u7d66\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"actuator/servo/#_4","title":"\ud83c\udf1f \u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2","text":"<p>\u30d4\u30f3\u756a\u53f7\u306f\u57fa\u677f\u4e0a\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u6307\u5b9a\u53ef\u80fd\u306a\u89d2\u5ea6\u306f\u30b5\u30fc\u30dc\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002\u3088\u304f\u3042\u308b\u30bf\u30a4\u30d7\u306f 0 \u301c 180 \u5ea6\u3067\u3059\u3002</p> Raspberry Pi Pico \u3067\u5236\u5fa1Arduino \u30de\u30a4\u30b3\u30f3\u3067\u5236\u5fa1 <p><code>Udon::Servo</code> \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u5236\u5fa1\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::Servo servo;\n\nvoid setup()\n{\n    servo.attach(3);\n}\n\nvoid loop()\n{\n    servo.write(0);\n    delay(500);\n    servo.write(45);\n    delay(500);\n}\n</code></pre> <p>Arduino \u306e Servo \u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u306e\u9055\u3044</p> <p>Raspberry Pi Pico \u7528 <code>Servo</code> \u30e9\u30a4\u30d6\u30e9\u30ea\u306f PIO \u3092\u4f7f\u3063\u3066 PWM \u3092\u51fa\u529b\u3057\u307e\u3059\u3002</p> <p>Raspberry Pi Pico (RP2040) \u306b\u306f\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u304c 8 \u3064\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u30019 \u3064\u4ee5\u4e0a\u306e\u30b5\u30fc\u30dc\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u305b\u3093\u3002</p> <p><code>Udon::Servo</code> \u30af\u30e9\u30b9\u306f PIO \u3092\u4f7f\u308f\u305a\u306b PWM \u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u3001\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u6570\u306e\u5236\u9650\u3092\u53d7\u3051\u307e\u305b\u3093\u3002</p> <p><code>Servo</code> \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u5236\u5fa1\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;Servo.h&gt;\n\nstatic Servo servo;\n\nvoid setup()\n{\n    servo.attach(3);\n}\n\nvoid loop()\n{\n    servo.write(0);\n    delay(500);\n    servo.write(45);\n    delay(500);\n}\n</code></pre>"},{"location":"actuator/solenoid/","title":"\u30bd\u30ec\u30ce\u30a4\u30c9","text":""},{"location":"actuator/solenoid/#_2","title":"\ud83c\udf1f \u6982\u8981","text":"<p>\u96fb\u78c1\u77f3\u3092\u7528\u3044\u3066\u6a5f\u68b0\u7684\u306a\u52d5\u4f5c\u3092\u884c\u3046\u30a2\u30af\u30c1\u30e5\u30a8\u30fc\u30bf\u3067\u3059\u3002</p>"},{"location":"actuator/solenoid/#_3","title":"\ud83c\udf1f \u914d\u7dda","text":"<p>\u753b\u50cf\u306e\u30bd\u30ec\u30ce\u30a4\u30c9\u306f\u5b9a\u683c\u96fb\u5727 12V \u306a\u306e\u3067 DCDC \u30b3\u30f3\u30d0\u30fc\u30bf\u30fc\u3067\u964d\u5727\u3057\u4f9b\u7d66\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u6975\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p></p>"},{"location":"actuator/solenoid/#_4","title":"\ud83c\udf1f \u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2","text":"<pre><code>const int pin = 2;\n\nvoid setup()\n{\n    pinMode(pin, OUTPUT);\n}\n\nvoid loop()\n{\n    digitalWrite(pin, HIGH);\n    delay(100);\n    digitalWrite(pin, LOW);\n    delay(1000);\n}\n</code></pre> <p>Warning</p> <p>\u9577\u6642\u9593\u96fb\u6d41\u3092\u6d41\u3059\u3068\u767a\u71b1\u3059\u308b\u305f\u3081\u30011 \u79d2\u4ee5\u4e0a\u9023\u7d9a\u3067 ON \u306b\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"actuator/valve/","title":"\u96fb\u78c1\u5f01","text":""},{"location":"actuator/valve/#_2","title":"\ud83c\udf1f \u6982\u8981","text":"<p>\u30a8\u30a2\u30b7\u30ea\u30f3\u30c0\u30fc\u306a\u3069\u306e\u7a7a\u6c17\u5727\u6a5f\u5668\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u90e8\u54c1\u3067\u3059\u3002\u96fb\u78c1\u77f3\u3092\u7528\u3044\u3066\u5f01\u3092\u958b\u9589\u3059\u308b\u3053\u3068\u3067\u3001\u7a7a\u6c17\u306e\u6d41\u308c\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002</p>"},{"location":"actuator/valve/#_3","title":"\ud83c\udf1f \u914d\u7dda","text":"<p>\u5b9a\u683c\u96fb\u5727\u306f 12V \u306a\u306e\u3067 DCDC \u30b3\u30f3\u30d0\u30fc\u30bf\u30fc\u3067\u964d\u5727\u3057\u4f9b\u7d66\u3057\u307e\u3059\u3002\u6975\u6027\u304c\u3042\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p>"},{"location":"actuator/valve/#_4","title":"\ud83c\udf1f \u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2","text":"<pre><code>const int pin = 2;\n\nvoid setup()\n{\n    pinMode(pin, OUTPUT);\n}\n\nvoid loop()\n{\n    digitalWrite(pin, HIGH);\n    delay(1000);\n    digitalWrite(pin, LOW);\n    delay(1000);\n}\n</code></pre>"},{"location":"communication/controller/","title":"PS5 \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3068\u306e\u901a\u4fe1","text":"<p>\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u5074\u306e Raspberry Pi Pico \u306b udonrobo/ControllerUnit \u30ec\u30dd\u30b8\u30c8\u30ea\u306e Firmware/Firmware.ino \u3092\u66f8\u304d\u3053\u307f\u307e\u3059\u3002</p>"},{"location":"pcb/jlcpcb/","title":"JLCPCB \u6ce8\u6587\u624b\u9806","text":""},{"location":"pcb/jlcpcb/#_1","title":"\u901a\u5e38\u57fa\u677f\u306e\u767a\u6ce8","text":""},{"location":"pcb/jlcpcb/#_2","title":"\ud83c\udf1f \u767a\u6ce8\u306e\u6d41\u308c","text":"<ol> <li> <p>Fusion360 \u304b\u3089\u30ac\u30fc\u30d0\u30fc\u30d5\u30a1\u30a4\u30eb(.zip)\u3092\u51fa\u529b</p> </li> <li> <p>JLCPCB \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u652f\u6255\u3044</p> </li> </ol>"},{"location":"pcb/jlcpcb/#_3","title":"\ud83c\udf1f \u767a\u6ce8\u624b\u9806","text":""},{"location":"pcb/jlcpcb/#1-cam","title":"1. CAM \u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u8d77\u52d5","text":"<p>\u30dc\u30fc\u30c9\u30a8\u30c7\u30a3\u30bf &gt; \u88fd\u9020\u30bf\u30d6 &gt; CAM \u30d7\u30ed\u30bb\u30c3\u30b5</p> <p></p>"},{"location":"pcb/jlcpcb/#2-cam","title":"2. CAM \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u9078\u629e","text":""},{"location":"pcb/jlcpcb/#3","title":"3. \u30b8\u30e7\u30d6\u3092\u51e6\u7406","text":""},{"location":"pcb/jlcpcb/#4","title":"4. \u51fa\u529b\u5148\u3092\u6307\u5b9a\u3057\u3001\u30ac\u30fc\u30d0\u30fc\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b","text":""},{"location":"pcb/jlcpcb/#5-jlcpcb","title":"5. JLCPCB \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9","text":"<p>JLCPCB \u3092\u958b\u304f &gt; <code>Add gerber file</code> \u306b 4 \u3067\u4f5c\u6210\u3057\u305f zip \u30d5\u30a1\u30a4\u30eb\u3092\u6295\u3052\u308b</p> <p></p>"},{"location":"pcb/jlcpcb/#6","title":"6. \u30ab\u30fc\u30c8\u306b\u8ffd\u52a0","text":"<p>\u57fa\u677f\u306e\u8272\u306a\u3069\u3092\u9078\u629e\u3057\u30ab\u30fc\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\u57fa\u677f\u306e\u679a\u6570\u306f\u3053\u3053\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"pcb/jlcpcb/#7","title":"7. \u652f\u6255\u3044","text":"<p>\u30ab\u30fc\u30c8\u306b\u79fb\u52d5\u3057\u30c1\u30a7\u30c3\u30af\u30a2\u30a6\u30c8\u3057\u307e\u3059\u3002</p> <p>Note</p> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u914d\u9001\u696d\u8005\u306f\u9001\u6599\u304c\u9ad8\u3044\u306e\u3067\u6ce8\u610f</p> <p>ANA \u5098\u4e0b\u306e OSC Express, NEP \u3092\u4f7f\u7528\u3059\u308b\u306e\u304c\u304a\u3059\u3059\u3081\u3067\u3059\u3002 (1~2$)</p> <p></p>"},{"location":"pcb/jlcpcb/#pcb","title":"PCB \u30a2\u30bb\u30f3\u30d6\u30ea\u306e\u767a\u6ce8","text":""},{"location":"pcb/jlcpcb/#_4","title":"\ud83c\udf1f \u4e88\u5099\u77e5\u8b58","text":"<ul> <li>\u5b9f\u88c5\u3059\u308b\u90e8\u54c1\u306f\u306a\u308b\u3079\u304f\u57fa\u672c\u90e8\u54c1\u3092\u9078\u3076\u3002</li> </ul> <p>\u62e1\u5f35\u90e8\u54c1\u306f\u5b9f\u88c5\u88c5\u7f6e\u306b\u90e8\u54c1\u3092\u30bb\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001\u57fa\u677f 1 \u7a2e\u985e\u306b\u3064\u304d 3$ \u306e\u521d\u671f\u8cbb\u7528\u304c\u639b\u304b\u308a\u307e\u3059\u3002</p> <p>\u57fa\u672c\u90e8\u54c1\u306f\u5e38\u306b\u5b9f\u88c5\u88c5\u7f6e\u306b\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u521d\u671f\u8cbb\u7528\u306f\u639b\u304b\u308a\u307e\u305b\u3093\u3002</p> <ul> <li> <p>\u57fa\u677f\u8a2d\u8a08\u6642\u306b JLCPCB \u306b\u90e8\u54c1\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u3001\u5728\u5eab\u304c\u5341\u5206\u304b\u78ba\u8a8d\u3059\u308b\u3002</p> </li> <li> <p>\u4e21\u9762\u5b9f\u88c5\u306f\u9ad8\u4fa1\u306a\u306e\u3067\u306a\u308b\u3079\u304f\u7247\u9762\u5b9f\u88c5\u306b\u3059\u308b\u3002</p> </li> <li> <p>\u90e8\u54c1\u306e\u8a2d\u7f6e\u4f4d\u7f6e\u3084\u8a2d\u7f6e\u89d2\u5ea6\u304c\u30ba\u30ec\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3001\u6ce8\u6587\u6642\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u753b\u9762\u3092\u3088\u304f\u78ba\u8a8d\u3059\u308b\u3002</p> </li> </ul>"},{"location":"pcb/jlcpcb/#_5","title":"\ud83c\udf1f \u767a\u6ce8\u306e\u6d41\u308c","text":"<ol> <li> <p>\u5404\u90e8\u54c1\u306b LCSC \u90e8\u54c1\u756a\u53f7\u5c5e\u6027\u3092\u4ed8\u4e0e</p> </li> <li> <p>Fusion360 \u304b\u3089\u30ac\u30fc\u30d0\u30fc\u30d5\u30a1\u30a4\u30eb(.zip), BOM(.csv), CPL(.csv) \u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b</p> </li> <li> <p>JLCPCB \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u652f\u6255\u3044</p> </li> </ol>"},{"location":"pcb/jlcpcb/#_6","title":"\ud83c\udf1f \u767a\u6ce8\u624b\u9806","text":""},{"location":"pcb/jlcpcb/#1","title":"1. \u5c5e\u6027\u30a8\u30c7\u30a3\u30bf\u3092\u958b\u304f","text":"<p>\u90e8\u54c1\u3092\u53f3\u30af\u30ea\u30c3\u30af &gt; \u5c5e\u6027</p> <p></p>"},{"location":"pcb/jlcpcb/#2","title":"2. \u90e8\u54c1\u756a\u53f7\u5c5e\u6027\u3092\u4ed8\u4e0e","text":"<p><code>LCSC</code> \u3068\u3044\u3046\u540d\u524d\u306e\u5c5e\u6027\u3092\u65b0\u898f\u4f5c\u6210\u3057\u3001\u5bfe\u5fdc\u3059\u308b LCSC \u90e8\u54c1\u756a\u53f7\u3092\u5024\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> <p>\u90e8\u54c1\u756a\u53f7\u306f JLCPCB \u306e\u30b5\u30a4\u30c8\u3067\u691c\u7d22\u3067\u304d\u307e\u3059\u3002</p> <p>1 &gt; 2 \u306e\u6d41\u308c\u3092\u3001\u5b9f\u88c5\u3057\u3066\u307b\u3057\u3044\u90e8\u54c1\u5168\u3066\u306b\u5bfe\u3057\u3066\u884c\u3046\u3002</p> <p></p>"},{"location":"pcb/jlcpcb/#3-ulp","title":"3. ULP \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9","text":"<p>\u30bf\u30fc\u30df\u30ca\u30eb\u7b49\u3092\u7528\u3044\u3066\u9069\u5f53\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b https://github.com/oxullo/jlcpcb-eagle \u3092\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3059\u3002</p> <pre><code>git clone https://github.com/oxullo/jlcpcb-eagle.git\n</code></pre> <p>\u3053\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u308b ULP \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067 BOM, CPL \u30d5\u30a1\u30a4\u30eb\u304c\u5f97\u3089\u308c\u307e\u3059\u3002BOM \u30d5\u30a1\u30a4\u30eb\u306f\u90e8\u54c1\u8868\u3001CPL \u30d5\u30a1\u30a4\u30eb\u306f\u5404\u90e8\u54c1\u306e\u914d\u7f6e\u5ea7\u6a19\u3092\u8a18\u9332\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>Note</p> <p>\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u4f7f\u7528\u3057\u306a\u3044\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u3067 zip \u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u53ef\u80fd\u3067\u3059\u3002</p> <p></p>"},{"location":"pcb/jlcpcb/#4-ulp","title":"4. ULP \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c","text":"<p>\u30dc\u30fc\u30c9\u30a8\u30c7\u30a3\u30bf\u3092\u8d77\u52d5 &gt; \u81ea\u52d5\u5316 &gt; ULP &gt; \u53c2\u7167</p> <p>3 \u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f <code>jlcpcb-eagle</code> \u306b\u3042\u308b <code>jlcpcb-eagle/ulps/jlcpcb_smta_exporter.ulp</code> \u3092\u9078\u629e</p> <p>\u203b\u30dc\u30fc\u30c9\u30a8\u30c7\u30a3\u30bf\u5185\u3067\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u5b9f\u884c\u5f8c\u3001\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b BOM \u30d5\u30a1\u30a4\u30eb (*_bom.csv), CPL \u30d5\u30a1\u30a4\u30eb(*_cpl.csv) \u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\u3002</p> <p></p>"},{"location":"pcb/jlcpcb/#5-jlcpcb_1","title":"5. \u30ac\u30fc\u30d0\u30fc\u30d5\u30a1\u30a4\u30eb\u3092 JLCPCB \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b","text":"<p>\u901a\u5e38\u57fa\u677f\u306e\u767a\u6ce8\u306e\u624b\u9806 1~5 \u3068\u540c\u3058\u3067\u3059\u3002\u307e\u3060\u30ab\u30fc\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u305b\u3093\u3002</p>"},{"location":"pcb/jlcpcb/#6-pcb","title":"6. PCB \u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u9078\u629e\u3059\u308b","text":"<p>\u90e8\u54c1\u3092\u5b9f\u88c5\u3059\u308b\u9762\u3092\u9078\u629e</p> <p></p>"},{"location":"pcb/jlcpcb/#7-bom-cpl","title":"7. BOM, CPL \u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9","text":"<p>4 \u3067\u4f5c\u6210\u3057\u305f BOM, CPL \u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9</p> <p></p> <p></p>"},{"location":"pcb/jlcpcb/#8","title":"8. \u5b9f\u88c5\u90e8\u54c1\u78ba\u8a8d","text":"<p>\u90e8\u54c1\u8868\u304c\u8868\u793a\u3055\u308c\u308b\u305f\u3081\u78ba\u8a8d\u3057\u307e\u3059\u3002LCSC \u90e8\u54c1\u756a\u53f7\u3092\u767b\u9332\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u8b66\u544a\u3055\u308c\u307e\u3059\u3002</p> <p>Note</p> <p>Fusion \u5074\u3067 <code>DNP</code> \u5c5e\u6027\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\u3001\u90e8\u54c1\u3092\u767b\u9332\u3057\u306a\u3044\u3053\u3068\u3092\u660e\u793a\u3067\u304d\u307e\u3059\u3002</p> <p>oxullo/jlcpcb-eagle README.md \u3088\u308a</p> <p>In case a part should not be exported into the BOM/CPL, add an attribute called \"DNP\" (the value is not relevant and can be an annotation for the reason for the exclusion). The POPULATE flag is also taken into consideration for filtering out parts that shouldn't be part of a specific variant.</p> <p>\u90e8\u54c1\u304c BOM/CPL \u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3055\u308c\u308b\u3079\u304d\u3067\u306f\u306a\u3044\u5834\u5408\u3001\"DNP\" \u3068\u3044\u3046\u5c5e\u6027\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff08\u5024\u306f\u95a2\u4fc2\u306a\u304f\u3001\u9664\u5916\u306e\u7406\u7531\u306e\u6ce8\u91c8\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff09\u3002POPULATE \u30d5\u30e9\u30b0\u3082\u3001\u7279\u5b9a\u306e\u30d0\u30ea\u30a2\u30f3\u30c8\u306e\u4e00\u90e8\u3067\u3042\u308b\u3079\u304d\u3067\u306a\u3044\u90e8\u54c1\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306b\u8003\u616e\u3055\u308c\u307e\u3059\u3002</p> <p></p> <p></p>"},{"location":"pcb/jlcpcb/#9","title":"9. \u5b9f\u88c5\u5f8c\u30d7\u30ec\u30d3\u30e5\u30fc\u78ba\u8a8d","text":"<p>\u5b9f\u88c5\u5f8c\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u304c\u8868\u793a\u3055\u308c\u308b\u305f\u3081\u78ba\u8a8d\u3057\u307e\u3059\u3002\u914d\u7f6e\u89d2\u5ea6\u304c\u9055\u3046\u5834\u5408\u304c\u3042\u308b\u305f\u3081\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>Warning</p> <p>\u4f4d\u7f6e\u304c\u305a\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30dc\u30fc\u30c9\u306a\u3069\u3092\u4fdd\u5b58\u305b\u305a BOM, CPL \u3092\u51fa\u529b\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u89d2\u5ea6\u306e\u305a\u308c\u306f <code>JLC_ROTATION</code> \u5c5e\u6027\u3092\u4ed8\u4e0e\u3057\u3001\u5024\u306b\u30aa\u30d5\u30bb\u30c3\u30c8\u89d2\u5ea6\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u4fee\u6b63\u53ef\u80fd\u3067\u3059\u3002</p> <p>oxullo/jlcpcb-eagle README.md \u3088\u308a</p> <p>The ULP can also manually rotate the angle in the CPL output file. The attribute must be named JLC_ROTATION. For example, if a part's angle in set to 90 and it's attribute JLC_ROTATION is set to 180, the angle in the final CPL file will be set to 270.</p> <p>ULP \u306f\u3001CPL \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306e\u89d2\u5ea6\u3092\u624b\u52d5\u3067\u56de\u8ee2\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\u5c5e\u6027\u306e\u540d\u524d\u306f JLC_ROTATION \u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u305f\u3068\u3048\u3070\u3001\u30d1\u30fc\u30c4\u306e\u89d2\u5ea6\u304c 90 \u306b\u8a2d\u5b9a\u3055\u308c\u3001\u5c5e\u6027\u306e JLC_ROTATION \u304c 180 \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u6700\u7d42\u7684\u306a CPL \u30d5\u30a1\u30a4\u30eb\u306e\u89d2\u5ea6\u306f 270 \u306b\u8a2d\u5b9a\u3055\u308c\u308b\u3002</p> <p></p> <p>\u4f7f\u7528\u7528\u9014\u3092\u6307\u5b9a\u3057\u30ab\u30fc\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"pcb/jlcpcb/#10","title":"10. \u652f\u6255\u3044","text":"<p>\u901a\u5e38\u57fa\u677f\u306e\u767a\u6ce8\u306e 7 \u3068\u540c\u3058\u304f\u652f\u6255\u3044\u3092\u884c\u3044\u307e\u3059\u3002</p>"},{"location":"practice/","title":"\u5236\u5fa1\u73ed\u306e\u5f79\u5272","text":""},{"location":"practice/#_2","title":"\u4ed5\u4e8b","text":"<p>\u57fa\u677f\u306e\u4f5c\u88fd\u3084\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u914d\u7dda</p>"},{"location":"practice/#_3","title":"\u76ee\u6a19","text":"<p>\u8a2d\u8a08\u73ed\u304c\u7d44\u307f\u7acb\u3066\u3092\u7d42\u308f\u3089\u305b\u308b\u524d\u306b\u8a66\u4f5c\u56de\u8def\u3084\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b8c\u6210\u3055\u305b\u3066\u304a\u304f</p> <p>\u6a5f\u69cb\u3092\u52d5\u304b\u305b\u306a\u304f\u3068\u3082\u3001\u57fa\u677f\u9593\u3067\u901a\u4fe1\u304c\u3067\u304d\u3066\u3044\u308b\u304b\u3084\u3001\u8a08\u7b97\u5024\u304c\u3042\u3063\u3066\u3044\u308b\u304b\u306e\u691c\u8a3c\u306a\u3069\u3001\u51fa\u6765\u308b\u3053\u3068\u306f\u7d50\u69cb\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"practice/#_4","title":"\u7fd2\u5f97\u3059\u308b\u3053\u3068","text":"<p>\ud83c\udf1f \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e (C++)</p> <p>\ud83c\udf1f \u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u306e\u4f7f\u3044\u65b9</p> <p>\ud83c\udf1f \u30de\u30a4\u30b3\u30f3\u3001\u30bb\u30f3\u30b5\u30fc\u3001\u30a2\u30af\u30c1\u30e5\u30a8\u30fc\u30bf\u306e\u52d5\u304b\u3057\u65b9</p> <p>\ud83c\udf1f \u7406\u8ad6</p> <p>\u306f\u3093\u3060\u4ed8\u3051\u3001\u914d\u7dda</p> <p>\u90e8\u54c1\u306e\u8cfc\u5165\u65b9\u6cd5</p>"},{"location":"practice/command/","title":"\u30b3\u30de\u30f3\u30c9","text":"<p>Windows \u306e\u5834\u5408\u3001\u30b3\u30de\u30f3\u30c9\u306f\u30bf\u30fc\u30df\u30ca\u30eb\u4e0a\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002</p> <p>\u4eca\u307e\u3067\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u3067\u884c\u3063\u3066\u3044\u305f\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u3092\u3001\u30b3\u30de\u30f3\u30c9\u3067\u3082\u3067\u304d\u307e\u3059\u3002</p> <p>\u2192 \u6163\u308c\u308c\u3070\u901f\u304f\u3001\u6587\u5b57\u306a\u306e\u3067\u4f1d\u3048\u3084\u3059\u3044\uff01</p> <p></p> <p>\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3059\u308b\u3068\u3001\u4eca\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p> <pre><code>~/Desktop/dev\n$\n</code></pre> <p>Note</p> <p>\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u304b\u3089\u3082\u8d77\u52d5\u3067\u304d\u307e\u3059\u3002(\u958b\u304d\u305f\u3044\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53f3\u30af\u30ea\u30c3\u30af)</p> <p>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u305f\u72b6\u614b\u3067\u8d77\u52d5\u3057\u3066\u304f\u308c\u307e\u3059\uff01</p> <p></p>"},{"location":"practice/command/#_2","title":"\u4f7f\u3048\u308b\u3068\u71b1\u3044\u30b3\u30de\u30f3\u30c9\u305f\u3061","text":"<ul> <li>\ud83c\udf1f ls</li> <li>\ud83c\udf1f cd</li> <li>\ud83c\udf1f start</li> <li>\ud83c\udf1f code</li> <li>\ud83c\udf1f winget</li> <li>\ud83c\udf1f git</li> <li>mv (\u79fb\u52d5\u3001\u540d\u524d\u5909\u66f4)</li> <li>cp (\u30b3\u30d4\u30fc)</li> <li>touch (\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210)</li> <li>mkdir (\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210)</li> <li>...</li> </ul> <p>\u4f7f\u3044\u3064\u3064\u899a\u3048\u3066\u3044\u3051\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u3067\u306e\u64cd\u4f5c\u306b\u5bfe\u5fdc\u3057\u305f\u30b3\u30de\u30f3\u30c9\u304c\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308c\u3070\u3001\u30b0\u30fc\u30b0\u30eb\u30cb\u30ad\u304c\u6559\u3048\u3066\u304f\u308c\u307e\u3059\uff01</p>"},{"location":"practice/command/#ls","title":"\ud83c\udf1f ls \u30b3\u30de\u30f3\u30c9","text":"<p>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5217\u6319\u3059\u308b</p> <pre><code>ls\n</code></pre> <p>\u7d50\u679c</p> <pre><code>~/Desktop/dev\nls\n\nAA/                   ConsoleApplication3/  Harurobo2023-Ateam/  OpenSiv3D_0.6.141/  rust-test/         WeatherApp-1/\naddlinenum/           ConsoleApplication4/  IRRemoteControl/     OpenSiv3D_0.6.142/  SortAlgorithm/     Website/\napptest/              ControllerUnit/       ...\n</code></pre>"},{"location":"practice/command/#cd","title":"\ud83c\udf1f cd \u30b3\u30de\u30f3\u30c9","text":"<p>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u9593\u3092\u79fb\u52d5\u3059\u308b</p> <pre><code>cd &lt;\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d&gt;\n</code></pre> <p>\u7d50\u679c</p> <pre><code>~/Desktop\ncd dev/\n\n~/Desktop/dev\n</code></pre> <p><code>cd ..</code> \u3067\u4e00\u3064\u4e0a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002</p> <pre><code>~/Desktop/dev\ncd ..\n\n~/Desktop\n</code></pre> <p><code>cd -</code> \u3067\u3082\u3068\u5c45\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u623b\u308c\u307e\u3059\u3002</p> <pre><code>~/Desktop/dev/Robocon2024-Bteam\ncd ../../\n\n~/Desktop\ncd -\n\n~/Desktop/dev/Robocon2024-Bteam\n</code></pre> <p>Note</p> <p>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306f\u5168\u3066\u5165\u529b\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u9014\u4e2d\u307e\u3067\u6253\u3061 Tab \u30ad\u30fc\u3092\u62bc\u3059\u3053\u3068\u3067\u88dc\u5b8c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>cd robo\n</code></pre> <p>\u2193 Tab \u30ad\u30fc</p> <pre><code>cd Robocon2024-Bteam/\n</code></pre>"},{"location":"practice/command/#_3","title":"\ud83c\udf1f \u7279\u6b8a\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea","text":"<pre><code>~/Desktop/dev\nls -la\n\ntotal 130022\ndrwxr-xr-x 1 user 197609         0 12\u6708 15 23:25 ./     \u2190 \u30b3\u30ec\ndrwxr-xr-x 1 user 197609         0 12\u6708 15 01:14 ../    \u2190 \u30b3\u30ec\ndrwxr-xr-x 1 user 197609         0 12\u6708 15 23:14 AA/\n</code></pre> <p><code>.</code> \u4eca\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea</p> <p><code>..</code> \u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \ud83c\udf1f</p> <p><code>~</code> \u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea (C:/Users/\u30e6\u30fc\u30b6\u30fc\u540d)</p> <p><code>/</code> \u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea (C:/)</p>"},{"location":"practice/command/#start","title":"\ud83c\udf1f start \u30b3\u30de\u30f3\u30c9","text":"<p>\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u65e2\u5b9a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u958b\u304f</p> <p>\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u4e0a\u3067\u30af\u30ea\u30c3\u30af\u3059\u308b\u306e\u3068\u540c\u3058\u3002\u7d50\u69cb\u4f7f\u3044\u307e\u3059\uff01</p> <pre><code>start &lt;\u30d5\u30a1\u30a4\u30eb\u540d or \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d&gt;\n</code></pre> <p></p>"},{"location":"practice/command/#code","title":"\ud83c\udf1f code \u30b3\u30de\u30f3\u30c9","text":"<p>VSCode \u3092\u958b\u304f\u30b3\u30de\u30f3\u30c9</p> <pre><code>~/Desktop/dev/Robocon2024-Bteam\ncode .\n</code></pre> <p>\u7d50\u679c</p> <p></p>"},{"location":"practice/command/#winget","title":"\ud83c\udf1f winget \u30b3\u30de\u30f3\u30c9","text":"<p>Window \u7528\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc</p> <p>\u30b3\u30de\u30f3\u30c9\u4e00\u3064\u3067\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u306e\u3067\u8d85\u697d\u3002</p> <p>\u4f8b) Git \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb https://git-scm.com/downloads/win</p> <pre><code>winget install --id Git.Git -e --source winget\n</code></pre>"},{"location":"practice/communication/","title":"\u901a\u4fe1\u306b\u3064\u3044\u3066","text":"<p>\u30de\u30a4\u30b3\u30f3\u9593\u3067\u30c7\u30fc\u30bf\u306e\u53d7\u3051\u6e21\u3057\u3092\u884c\u3046\u969b\u306b\u7528\u3044\u307e\u3059\u3002</p> <p>I2C, SPI, CAN, UART, USB, Ethernet \u306a\u3069\u306e\u901a\u4fe1\u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u90e8\u3067\u306f 2022 \u5e74\u307e\u3067 I2C \u901a\u4fe1\u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u901a\u4fe1\u30a8\u30e9\u30fc\u306b\u60a9\u307e\u3055\u308c\u305f\u672b\u30012023 \u5e74\u304b\u3089\u306f CAN \u901a\u4fe1\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"practice/communication/#_2","title":"\u5177\u4f53\u7684\u306b\u4f55\u3092\u884c\u3046\u304b","text":"<p>\u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2\u306e\u4e16\u754c\u304b\u3089\u901a\u4fe1\u304b\u3089\u898b\u308b\u3068\u3001\u901a\u4fe1\u3068\u306f\u30d0\u30a4\u30c8\u5217\u306e\u9001\u53d7\u4fe1\u3067\u3059\u3002</p> <p>\u203b\u7269\u7406\u4e16\u754c\u304b\u3089\u898b\u308b\u3068\u3001\u901a\u4fe1\u3068\u306f 0 \u3068 1 \u306e\u96fb\u6c17\u4fe1\u53f7\u306e\u3084\u308a\u53d6\u308a\u3067\u3059\u3002</p> \u9001\u4fe1\u5074\u30a4\u30e1\u30fc\u30b8<pre><code>uint8_t data[3] = { 0x00, 0x01, 0x02 };\n\nwrite(data);\n</code></pre> \u53d7\u4fe1\u5074\u30a4\u30e1\u30fc\u30b8<pre><code>uint8_t data[3];\n\nread(data);\n\n// data == { 0x00, 0x01, 0x02 }\n</code></pre>"},{"location":"practice/communication/#i2c","title":"I2C \u901a\u4fe1","text":"<ul> <li>\u57fa\u677f\u5185\u7528\u306e\u901a\u4fe1</li> <li>\u4e00\u5bfe\u591a\u30fb\u30d0\u30b9\u65b9\u5f0f</li> <li>\u30a2\u30c9\u30ec\u30b9\u306b\u3088\u3063\u3066\u901a\u4fe1\u76f8\u624b\u3092\u8b58\u5225</li> <li>\u4e3b\u5f93\u95a2\u4fc2\u304c\u3042\u308b</li> <li>\u5927\u62b5\u306e\u30de\u30a4\u30b3\u30f3\u306b\u306f I2C \u306e\u56de\u8def\u304c\u5185\u8535\u3055\u308c\u3066\u304a\u308a\u3001\u30d4\u30f3\u540c\u58eb\u3092\u7e4b\u3052\u308b\u3060\u3051\u3067\u901a\u4fe1\u3067\u304d\u308b\u70ba\u3001\u56de\u8def\u306f\u7c21\u5358</li> </ul>"},{"location":"practice/communication/#_3","title":"\ud83c\udf1f \u30ed\u30dc\u30b3\u30f3\u3067\u306e\u69cb\u6210","text":"<p>\u30de\u30a4\u30b3\u30f3 1 \u53f0\u304c\u30de\u30b9\u30bf\u30fc\u3001\u4ed6\u306e\u30de\u30a4\u30b3\u30f3\u304c\u30b9\u30ec\u30fc\u30d6\u3068\u306a\u308a\u307e\u3059\u3002</p> <p>\u30de\u30b9\u30bf\u30fc\u3067\u4e3b\u8981\u306a\u51e6\u7406\u3092\u884c\u3044\u3001\u30b9\u30ec\u30fc\u30d6\u306b\u306f\u30e2\u30fc\u30bf\u30fc\u306e\u5236\u5fa1\u306a\u3069\u88dc\u52a9\u7684\u306a\u51e6\u7406\u3092\u884c\u308f\u305b\u307e\u3059\u3002</p> <p>I2C \u306e\u6027\u8cea\u4e0a\u3001\u30de\u30a4\u30b3\u30f3 1 \u53f0\u306b 1 \u3064\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u5272\u308a\u5f53\u3066\u307e\u3059 (\u6b21\u3067\u7d39\u4ecb\u3059\u308b CAN \u901a\u4fe1\u3067\u306f\u8907\u6570\u306e ID \u3092\u5272\u308a\u632f\u308c\u307e\u3059)</p> <p></p>"},{"location":"practice/communication/#_4","title":"\ud83c\udf1f \u30de\u30b9\u30bf\u30fc\u304b\u3089\u30b9\u30ec\u30fc\u30d6\u3078\u9001\u4fe1\u3059\u308b\u5834\u5408","text":"<p>\u30b9\u30ec\u30fc\u30d6\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\u3057\u3001\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002</p> <p></p> <p>\u30de\u30b9\u30bf\u30fc\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9</p> <pre><code>#include &lt;Wire.h&gt;\n\nvoid setup()\n{\n    Wire.begin(); // \u901a\u4fe1\u958b\u59cb\n}\n\nvoid loop()\n{\n    uint8_t data[3] = { 0x00, 0x01, 0x02 };\n\n    Wire.beginTransmission(0x49);  // 0x49 \u3078\u9001\u4fe1\u958b\u59cb\n    Wire.write(data, sizeof data); // \u30d0\u30a4\u30c8\u5217\u3092\u9001\u4fe1\n    Wire.endTransmission();        // \u9001\u4fe1\u7d42\u4e86\n\n    delay(10);\n}\n</code></pre> <p>\u30b9\u30ec\u30fc\u30d6\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9</p> <pre><code>#include &lt;Wire.h&gt;\n\nuint8_t data[3];\n\n// \u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\nvoid onReceive(int)\n{\n    while (Wire.available())  // \u30c7\u30fc\u30bf\u304c\u3042\u308b\u9593\n    {\n        for (uint8_t&amp; d : data)\n        {\n            d = Wire.read();  // \u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\n        }\n    }\n}\n\nvoid setup()\n{\n    Wire.begin(0x49);           // 0x49 \u306e\u30a2\u30c9\u30ec\u30b9\u3067\u901a\u4fe1\u958b\u59cb\n    Wire.onReceive(onReceive);  // \u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u3001onReceive \u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u8a2d\u5b9a\n}\n\nvoid loop()\n{\n    // \u4f55\u3082\u3057\u306a\u3044\n}\n</code></pre> <p>\u901a\u4fe1\u904e\u7a0b\u306e\u30a4\u30e1\u30fc\u30b8</p> <pre><code>sequenceDiagram\n\n    Note left of \u30de\u30b9\u30bf\u30fc: Wire.beginTransmission(0x49)\n    Note left of \u30de\u30b9\u30bf\u30fc: Wire.write(data, sizeof data)\n    \u30de\u30b9\u30bf\u30fc --&gt;&gt; \u30b9\u30ec\u30fc\u30d6: \u30c7\u30fc\u30bf\n    \u30de\u30b9\u30bf\u30fc --&gt;&gt; \u30b9\u30ec\u30fc\u30d6: \u30c7\u30fc\u30bf\n    \u30de\u30b9\u30bf\u30fc --&gt;&gt; \u30b9\u30ec\u30fc\u30d6: \u30c7\u30fc\u30bf\n    Note right of \u30b9\u30ec\u30fc\u30d6: \u30c7\u30fc\u30bf\u306f\u81ea\u52d5\u7684\u306b\u53d7\u4fe1\u30d0\u30c3\u30d5\u30a1\u30fc\u306b\u6e9c\u307e\u308a\u307e\u3059\n\n    Note left of \u30de\u30b9\u30bf\u30fc: Wire.endTransmission()\n    \u30de\u30b9\u30bf\u30fc --&gt;&gt; \u30b9\u30ec\u30fc\u30d6: \u901a\u4fe1\u7d42\u4e86\n\n    Note right of \u30b9\u30ec\u30fc\u30d6: \u81ea\u52d5\u7684\u306b onReceive \u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n    Note right of \u30b9\u30ec\u30fc\u30d6: Wire.read()\n    Note right of \u30b9\u30ec\u30fc\u30d6: Wire.read()\n    Note right of \u30b9\u30ec\u30fc\u30d6: Wire.read()</code></pre>"},{"location":"practice/communication/#_5","title":"\ud83c\udf1f \u30b9\u30ec\u30fc\u30d6\u304b\u3089\u30de\u30b9\u30bf\u30fc\u3078","text":"<p>\u30b9\u30ec\u30fc\u30d6\u306f\u81ea\u767a\u7684\u306b\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3057\u307e\u305b\u3093\u3002\u30de\u30b9\u30bf\u30fc\u304c\u30c7\u30fc\u30bf\u3092\u8981\u6c42\u3057\u3001\u30b9\u30ec\u30fc\u30d6\u304c\u305d\u308c\u306b\u5fdc\u3058\u3066\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002</p> <p></p> <p>\u30de\u30b9\u30bf\u30fc\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9</p> <pre><code>#include &lt;Wire.h&gt;\n\nvoid setup()\n{\n    Wire.begin(); // \u901a\u4fe1\u958b\u59cb\n}\n\nvoid loop()\n{\n    uint8_t data[3];\n\n    Wire.requestFrom(0x50, sizeof data); // 0x50 \u3078\u30c7\u30fc\u30bf\u3092\u8981\u6c42\n\n    // \u3053\u306e\u9593\u306b\u30b9\u30ec\u30fc\u30d6\u304b\u3089\u30c7\u30fc\u30bf\u304c\u9001\u3089\u308c\u308b\n\n    while (Wire.available())  // \u30c7\u30fc\u30bf\u304c\u3042\u308b\u9593\n    {\n        for (uint8_t&amp; d : data)\n        {\n            d = Wire.read();  // \u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\n        }\n    }\n\n    delay(10);\n}\n</code></pre> <p>\u30b9\u30ec\u30fc\u30d6\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9</p> <pre><code>#include &lt;Wire.h&gt;\n\nuint8_t data[3] = { 0x00, 0x01, 0x02 };\n\nvoid onRequest()\n{\n    Wire.write(data, sizeof data); // \u30c7\u30fc\u30bf\u3092\u9001\u4fe1\n}\n\nvoid setup()\n{\n    Wire.begin(0x50);           // 0x50 \u306e\u30a2\u30c9\u30ec\u30b9\u3067\u901a\u4fe1\u958b\u59cb\n    Wire.onRequest(onRequest);  // \u30c7\u30fc\u30bf\u8981\u6c42\u6642\u3001onRequest \u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u8a2d\u5b9a\n}\n\nvoid loop()\n{\n    // \u4f55\u3082\u3057\u306a\u3044\n}\n</code></pre> <p>\u901a\u4fe1\u904e\u7a0b\u306e\u30a4\u30e1\u30fc\u30b8</p> <pre><code>sequenceDiagram\n\n    Note left of \u30de\u30b9\u30bf\u30fc: Wire.requestFrom(0x50, sizeof data)\n    \u30de\u30b9\u30bf\u30fc --&gt;&gt; \u30b9\u30ec\u30fc\u30d6: \u30c7\u30fc\u30bf\u8981\u6c42\n    Note right of \u30b9\u30ec\u30fc\u30d6: onRequest \u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n    Note right of \u30b9\u30ec\u30fc\u30d6: Wire.write(data, sizeof data)\n\n    \u30b9\u30ec\u30fc\u30d6 --&gt;&gt; \u30de\u30b9\u30bf\u30fc: \u30c7\u30fc\u30bf\n    \u30b9\u30ec\u30fc\u30d6 --&gt;&gt; \u30de\u30b9\u30bf\u30fc: \u30c7\u30fc\u30bf\n    \u30b9\u30ec\u30fc\u30d6 --&gt;&gt; \u30de\u30b9\u30bf\u30fc: \u30c7\u30fc\u30bf\n\n    Note left of \u30de\u30b9\u30bf\u30fc: Wire.read()\n    Note left of \u30de\u30b9\u30bf\u30fc: Wire.read()\n    Note left of \u30de\u30b9\u30bf\u30fc: Wire.read()</code></pre>"},{"location":"practice/communication/#_6","title":"\ud83c\udf1f \u6ce8\u610f\u70b9","text":"<p>\u5272\u308a\u8fbc\u307f\u95a2\u6570\u5185\u3067\u306e\u51e6\u7406\u306f\u77ed\u304f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u30b9\u30ec\u30fc\u30d6\u304b\u3089\u30de\u30b9\u30bf\u30fc\u3078\u306e\u9001\u4fe1\u306e\u969b\u3001\u30b9\u30ec\u30fc\u30d6\u306e <code>onRequest</code> \u95a2\u6570\u5185\u306e\u51e6\u7406\u306b\u6642\u9593\u3092\u304b\u3051\u3066\u3044\u308b\u3068\u3001\u30de\u30b9\u30bf\u30fc\u304c\u305d\u306e\u9593\u5f85\u3061\u7d9a\u3051\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>sequenceDiagram\n\n    Note left of \u30de\u30b9\u30bf\u30fc: Wire.requestFrom(...)\n    \u30de\u30b9\u30bf\u30fc --&gt;&gt; \u30b9\u30ec\u30fc\u30d6: \u30c7\u30fc\u30bf\u8981\u6c42\n\n    Note right of \u30b9\u30ec\u30fc\u30d6: delay(1000);\n\n    Note left of \u30de\u30b9\u30bf\u30fc: \u65e2\u8aad\u7121\u8996\u2753\n    \u30b9\u30ec\u30fc\u30d6 --&gt;&gt; \u30de\u30b9\u30bf\u30fc: \u30c7\u30fc\u30bf</code></pre> <p>\u901a\u4fe1\u30a8\u30e9\u30fc\u306e\u5bfe\u51e6\u6cd5</p> <p>\u901a\u4fe1\u30a8\u30e9\u30fc\u306b\u3088\u3063\u3066\u30de\u30a4\u30b3\u30f3\u304c\u843d\u3061\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u8133\u7b4b\u5bfe\u7b56\uff1a\u4e00\u5b9a\u9593\u9694\u3067\u901a\u4fe1\u304c\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u901a\u4fe1\u306e\u518d\u8d77\u52d5\u3092\u884c\u3046 (Wire.end() \u3068 Wire.begin() \u3092\u4f7f\u3046)</p> <p>\u90e8\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u518d\u8d77\u52d5\u306e\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"practice/communication/#can","title":"CAN \u901a\u4fe1","text":"<ul> <li>\u57fa\u677f\u9593\u7528\u306e\u901a\u4fe1\u30fb\u9577\u8ddd\u96e2\u901a\u4fe1</li> <li>\u591a\u5bfe\u591a\u30fb\u30d0\u30b9\u65b9\u5f0f</li> <li>ID \u306b\u3088\u3063\u3066\u901a\u4fe1\u76f8\u624b\u3092\u8b58\u5225</li> <li>\u4e3b\u5f93\u95a2\u4fc2\u304c\u306a\u3044</li> <li>\u30de\u30a4\u30b3\u30f3\u306b\u306f CAN \u901a\u4fe1\u7528\u306e\u56de\u8def\u304c\u5185\u8535\u3055\u308c\u3066\u3044\u306a\u3044\u70ba\u3001\u5916\u4ed8\u3051\u306e CAN \u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5fc5\u8981</li> <li>\u7d42\u7aef\u62b5\u6297\u304c\u5fc5\u8981</li> </ul> <p>\u898f\u683c\u306b\u3064\u3044\u3066</p> <p>CAN \u306b\u306f\u69d8\u3005\u306a\u898f\u683c\u304c\u3042\u308a\u307e\u3059\u3002\u90e8\u3067\u306f CAN 2.0A \u3092\u4f7f\u3044\u307e\u3059\u3002</p> \u898f\u683c\u540d\u79f0 ID \u306e\u7bc4\u56f2 \u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba \u6700\u5927\u901a\u4fe1\u901f\u5ea6 CAN 2.0A 11bit (0x000 ~ 0x7FF) 0 ~ 8 \u30d0\u30a4\u30c8 1 Mbps CAN 2.0B 29bit (0x00000000 ~ 0x1FFFFFFF) 0 ~ 8 \u30d0\u30a4\u30c8 1 Mbps CAN FD \u6a19\u6e96 11bit (0x000 ~ 0x7FF) 0 ~ 64 \u30d0\u30a4\u30c8 5 Mbps CAN FD \u62e1\u5f35 29bit (0x00000000 ~ 0x1FFFFFFF) 0 ~ 64 \u30d0\u30a4\u30c8 5 Mbps <ul> <li>\u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba : \u4e00\u5ea6\u306b\u9001\u4fe1\u3067\u304d\u308b\u30c7\u30fc\u30bf\u306e\u30b5\u30a4\u30ba</li> <li>\u901a\u4fe1\u901f\u5ea6(bps) : 1 \u79d2\u9593\u306b\u9001\u4fe1\u3067\u304d\u308b\u30d3\u30c3\u30c8\u6570</li> </ul>"},{"location":"practice/communication/#_7","title":"\ud83c\udf1f \u30ed\u30dc\u30b3\u30f3\u3067\u306e\u69cb\u6210","text":"<p>CAN \u901a\u4fe1\u306f\u4e3b\u5f93\u95a2\u4fc2\u304c\u306a\u3044\u305f\u3081\u3001\u5404\u30de\u30a4\u30b3\u30f3\u304c\u597d\u304d\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30c7\u30fc\u30bf\u3092\u9001\u53d7\u4fe1\u3067\u304d\u307e\u3059\u3002</p> <p>\u307e\u305f\u4e00\u3064\u306e\u30de\u30a4\u30b3\u30f3\u306b\u8907\u6570\u306e ID \u3092\u5272\u308a\u632f\u3066\u3089\u308c\u308b\u305f\u3081\u3001\u90e8\u3067\u306f ID \u3054\u3068\u306b\u30e2\u30fc\u30bf\u30fc\u3084\u30bb\u30f3\u30b5\u30fc\u306a\u3069\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u5272\u308a\u5f53\u3066\u3066\u3044\u307e\u3059\u3002</p> <p></p>"},{"location":"practice/communication/#udonlibrary","title":"\ud83c\udf1f UdonLibrary \u3092\u4f7f\u3063\u305f\u901a\u4fe1","text":"<p>UdonLibrary \u3067\u306f\u30d0\u30a4\u30c8\u5217\u306e\u3084\u308a\u53d6\u308a\u3067\u306f\u306a\u304f\u578b\u3092\u7528\u3044\u3066\u901a\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002(\u5185\u90e8\u3067\u306f\u30d0\u30a4\u30c8\u5217\u306b\u5909\u63db\u3055\u308c\u3066\u9001\u53d7\u4fe1\u3055\u308c\u307e\u3059)</p> <p>\u901a\u4fe1\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u3088\u3089\u305a\u3001\u540c\u3058\u3088\u3046\u306a\u66f8\u304d\u65b9\u3067\u901a\u4fe1\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3057\u3066\u3044\u307e\u3059\u3002I2C \u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306e\u66f8\u304d\u65b9\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>https://github.com/udonrobo/UdonLibrary/blob/master/docs/Communication/I2C.md</p> \u9001\u4fe1\u5074\u30a4\u30e1\u30fc\u30b8<pre><code>int value = 1234;\n\nwriter.setMessage(value);\n</code></pre> \u53d7\u4fe1\u5074\u30a4\u30e1\u30fc\u30b8<pre><code>if (auto message = reader.getMessage())\n{\n    int value = message.value(); // 1234\n}\nelse\n{\n    // \u53d7\u4fe1\u30a8\u30e9\u30fc\n}\n</code></pre>"},{"location":"practice/communication/#1-1","title":"\ud83c\udf1f 1 \u30ce\u30fc\u30c9\u5bfe 1 \u30ce\u30fc\u30c9\u3067\u901a\u4fe1\u3057\u3066\u307f\u308b","text":"<p>\u9001\u4fe1\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9</p> <pre><code>#include &lt;Udon.hpp&gt;\n\n// \u901a\u4fe1\u30d0\u30b9\u3092\u8868\u3059\u30d0\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\nstatic Udon::CanBusTeensy&lt;CAN1&gt; bus;\n\n// int \u578b\u3092 0x001 \u3067\u9001\u4fe1\u3059\u308b\u9001\u4fe1\u8005\u3092\u4f5c\u6210\nstatic Udon::CanWriter&lt;int&gt; writer{ bus, 0x001 };\n\nvoid setup()\n{\n    bus.begin();  // \u901a\u4fe1\u958b\u59cb\n}\n\nvoid loop()\n{\n    bus.update();  // \u901a\u4fe1\u51e6\u7406\n\n    writer.setMessage(200);  // 200 \u3092\u9001\u4fe1\n}\n</code></pre> <p>\u53d7\u4fe1\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::CanBusTeensy&lt;CAN1&gt; bus;\n\n// int \u578b\u3092 0x001 \u304b\u3089\u53d7\u4fe1\u3059\u308b\u53d7\u4fe1\u8005\u3092\u4f5c\u6210\nstatic Udon::CanReader&lt;int&gt; reader{ bus, 0x001 };\n\nvoid setup()\n{\n    Serial.begin(115200);\n    bus.begin();\n}\n\nvoid loop()\n{\n    bus.update();\n\n    if (const auto message = reader.getMessage())\n    {\n        int value = message.value();  // 200\n\n        Serial.println(value);\n    }\n    else\n    {\n        // \u53d7\u4fe1\u30a8\u30e9\u30fc\n    }\n}\n</code></pre> <p>reader.getMessage() \u306e\u623b\u308a\u5024</p> <p><code>reader.getMessage()</code> \u306f <code>Udon::Optional&lt;T&gt;</code> \u578b\u3092\u8fd4\u3057\u307e\u3059\u3002T \u306b\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u6642\u306b\u6307\u5b9a\u3057\u305f\u578b\u304c\u5165\u308a\u307e\u3059\u3002</p> <p>auto \u3068\u7701\u7565\u305b\u305a\u306b\u66f8\u304f\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>if (const Udon::Optional&lt;int&gt; message = reader.getMessage())\n{\n    int value = message.value();  // 200\n}\n</code></pre>"},{"location":"practice/communication/#2-2","title":"\ud83c\udf1f 2 \u30ce\u30fc\u30c9\u5bfe 2 \u30ce\u30fc\u30c9\u3067\u901a\u4fe1\u3059\u308b","text":"<p>\u9001\u4fe1\u8005\u3068\u53d7\u4fe1\u8005\u3092\u8907\u6570\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001\u30de\u30a4\u30b3\u30f3\u5185\u306b\u8907\u6570\u306e\u30ce\u30fc\u30c9\u3092\u7acb\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>\u9001\u4fe1\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::CanBusTeensy&lt;CAN1&gt; bus;\n\nstatic Udon::CanWriter&lt;int&gt; writer1{ bus, 0x001 };\nstatic Udon::CanWriter&lt;int&gt; writer2{ bus, 0x002 };\n\nvoid setup()\n{\n    bus.begin();\n}\n\nvoid loop()\n{\n    bus.update();\n\n    writer1.setMessage(100);\n    writer2.setMessage(200);\n}\n</code></pre> <p>\u53d7\u4fe1\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::CanBusTeensy&lt;CAN1&gt; bus;\n\nstatic Udon::CanReader&lt;int&gt; reader1{ bus, 0x001 };\nstatic Udon::CanReader&lt;int&gt; reader2{ bus, 0x002 };\n\nvoid setup()\n{\n    Serial.begin(115200);\n    bus.begin();\n}\n\nvoid loop()\n{\n    bus.update();\n\n    if (const auto message1 = reader1.getMessage())\n    {\n        int value = message1.value();  // 100\n        Serial.print(value);\n        Serial.print('\\t');\n    }\n    else\n    {\n        // \u53d7\u4fe1\u30a8\u30e9\u30fc\n    }\n\n    if (const auto message2 = reader2.getMessage())\n    {\n        int value = message2.value();  // 200\n        Serial.println(value);\n    }\n    else\n    {\n        // \u53d7\u4fe1\u30a8\u30e9\u30fc\n    }\n}\n</code></pre>"},{"location":"practice/communication/#_8","title":"\ud83c\udf1f \u30e1\u30c3\u30bb\u30fc\u30b8\u578b","text":"<p>int \u578b\u3067\u306f\u306a\u304f\u3001\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u305f\u69cb\u9020\u4f53\u3084\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002UdonLibrary \u306b\u306f\u3088\u304f\u4f7f\u3046\u578b\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u69cb\u9020\u4f53\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u3084\u308a\u53d6\u308a\u3057\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u610f\u5473\u304c\u578b\u540d\u3084\u30e1\u30f3\u30d0\u30fc\u540d\u304b\u3089\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u8907\u6570\u306e\u5024\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p>https://github.com/udonrobo/UdonLibrary/blob/master/docs/Communication/Message.md</p> <p>\u9001\u4fe1\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::CanBusTeensy&lt;CAN1&gt; bus;\n\nstatic Udon::CanWriter&lt;Udon::Message::Motor&gt; motor{ bus, 0x001 };\n\nvoid setup()\n{\n    bus.begin();\n}\n\nvoid loop()\n{\n    bus.update();\n\n    Udon::Message::Motor message {\n        .power = 100,\n    };\n\n    motor.setMessage(message);\n}\n</code></pre> <p>\u53d7\u4fe1\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::CanBusTeensy&lt;CAN1&gt; bus;\n\nstatic Udon::CanReader&lt;Udon::Message::Motor&gt; motor{ bus, 0x001 };\n\nvoid setup()\n{\n    Serial.begin(115200);\n    bus.begin();\n}\n\nvoid loop()\n{\n    bus.update();\n\n    if (const auto message = motor.getMessage())\n    {\n        int16_t power = message-&gt;power;\n        Serial.println(power);\n    }\n    else\n    {\n        // \u53d7\u4fe1\u30a8\u30e9\u30fc\n    }\n}\n</code></pre>"},{"location":"practice/communication/#_9","title":"\ud83c\udf1f \u7df4\u7fd2 (\u5b9f\u969b\u306e\u69cb\u6210)","text":"\u4ed5\u69d8\u7b54\u3048 <p>\u4ee5\u4e0b\u306e\u69cb\u6210\u3067\u901a\u4fe1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01</p> <p>\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u306f <code>Udon::Message::Motor</code> \u3067\u3001\u30a8\u30f3\u30b3\u30fc\u30c0\u306e\u5024\u306f <code>Udon::Message::Encoder</code> \u3067\u3084\u308a\u53d6\u308a\u3059\u308b\u3068\u3057\u307e\u3059\u3002</p> <p></p> <p>\u30e1\u30a4\u30f3\u30de\u30a4\u30b3\u30f3</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::CanBusTeensy&lt;CAN1&gt; bus;\n\nstatic Udon::CanWriter&lt;Udon::Message::Motor&gt; motor1{ bus, 0x001 };\nstatic Udon::CanWriter&lt;Udon::Message::Motor&gt; motor2{ bus, 0x002 };\n\nstatic Udon::CanReader&lt;Udon::Message::Encoder&gt; encoder1{ bus, 0x003 };\nstatic Udon::CanReader&lt;Udon::Message::Encoder&gt; encoder2{ bus, 0x004 };\n\nvoid setup()\n{\n    Serial.begin(115200);\n    bus.begin();\n}\n\nvoid loop()\n{\n    bus.update();\n\n    motor1.setMessage({ .power = 100 });\n    motor2.setMessage({ .power = 200 });\n\n    if (const auto message = encoder1.getMessage())\n    {\n        int32_t count = message-&gt;count;  // 300\n        Serial.print(count);\n        Serial.print('\\t');\n    }\n    else\n    {\n        // \u53d7\u4fe1\u30a8\u30e9\u30fc\n    }\n\n    if (const auto message = encoder2.getMessage())\n    {\n        int32_t count = message-&gt;count;  // 400\n        Serial.println(count);\n    }\n    else\n    {\n        // \u53d7\u4fe1\u30a8\u30e9\u30fc\n    }\n}\n</code></pre> <p>\u30b5\u30d6\u30de\u30a4\u30b3\u30f3 (\u30e2\u30fc\u30bf\u30fc)</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::CanBusSpi bus;\n\nstatic Udon::CanReader&lt;Udon::Message::Motor&gt; motor1{ bus, 0x001 };\nstatic Udon::CanReader&lt;Udon::Message::Motor&gt; motor2{ bus, 0x002 };\n\nvoid setup()\n{\n    Serial.begin(115200);\n    bus.begin();\n}\n\nvoid loop()\n{\n    bus.update();\n\n    if (const auto message = motor1.getMessage())\n    {\n        int16_t power = message-&gt;power;  // 100\n        Serial.print(power);\n        Serial.print('\\t');\n    }\n    else\n    {\n        // \u53d7\u4fe1\u30a8\u30e9\u30fc\n    }\n\n    if (const auto message = motor2.getMessage())\n    {\n        int16_t power = message-&gt;power;  // 200\n        Serial.println(power);\n    }\n    else\n    {\n        // \u53d7\u4fe1\u30a8\u30e9\u30fc\n    }\n}\n</code></pre> <p>\u30b5\u30d6\u30de\u30a4\u30b3\u30f3 (\u30a8\u30f3\u30b3\u30fc\u30c0)</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::CanBusSpi bus;\n\nstatic Udon::CanWriter&lt;Udon::Message::Encoder&gt; encoder1{ bus, 0x003 };\nstatic Udon::CanWriter&lt;Udon::Message::Encoder&gt; encoder2{ bus, 0x004 };\n\nvoid setup()\n{\n    bus.begin();\n}\n\nvoid loop()\n{\n    bus.update();\n\n    encoder1.setMessage({ .power = 300 });\n    encoder2.setMessage({ .power = 400 });\n}\n</code></pre>"},{"location":"practice/cpp/","title":"C++","text":""},{"location":"practice/cpp/#c_1","title":"C++ \u3068\u306f &amp; \u4f7f\u7528\u7528\u9014","text":"<ul> <li> <p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e</p> </li> <li> <p>\u30b3\u30f3\u30d1\u30a4\u30eb\u8a00\u8a9e\u3067\u3042\u308a\u3001\u751f\u6210\u3055\u308c\u305f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c CPU \u4e0a\u3067\u76f4\u63a5\u52d5\u4f5c\u3059\u308b\u305f\u3081\u9ad8\u901f</p> </li> <li> <p>C \u8a00\u8a9e\u306e\u8d85\u62e1\u5f35\u8a00\u8a9e\u30023 \u5e74\u3054\u3068\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u304c\u884c\u308f\u308c\u3001\u6b21\u306f C++26</p> </li> <li> <p>\u8eab\u8fd1\u306a\u3068\u3053\u3067\u4f7f\u308f\u308c\u3066\u308b\u3002\u8eab\u8fd1\u904e\u304e\u3066\u4f7f\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u3059\u3089\u6c17\u3065\u304b\u306a\u3044</p> </li> </ul> <p>\u4f7f\u7528\u4f8b</p> <ul> <li> <p>Windows, \u5bb6\u96fb, Web \u30b5\u30fc\u30d0\u30fc \u2026</p> </li> <li> <p>Chromium https://github.com/chromium/chromium</p> </li> <li> <p>\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u7d20 (LLVM) https://github.com/llvm/llvm-project</p> </li> </ul>"},{"location":"practice/cpp/#visual-studio","title":"Visual Studio \u306e\u4f7f\u3044\u65b9","text":"<p>Microsoft \u793e\u304c\u63d0\u4f9b\u3059\u308b\u7d71\u5408\u958b\u767a\u74b0\u5883 (IDE)</p> <p>\u30c7\u30d0\u30c3\u30b0\u6a5f\u80fd (\u5909\u6570\u306e\u4e2d\u3092\u8997\u304f\u3001\u30b9\u30c6\u30c3\u30d7\u52d5\u4f5c) \u304c\u5f37\u529b</p>"},{"location":"practice/cpp/#_1","title":"\ud83c\udf1f \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210","text":"<p>Visual Studio \u3092\u8d77\u52d5</p> <p></p> <p></p> <p>\u4fdd\u5b58\u5834\u6240\u3092\u9078\u629e\u3057\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3092\u5165\u529b (\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u540d\u306f\u540c\u3058\u3067\u826f\u3044)</p> <p></p> <p>\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u95a2\u4fc2</p> <p>\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\uff1a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96c6\u307e\u308a</p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff1a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u96c6\u307e\u308a</p> <p>\u4e0a\u8a18\u306e\u5199\u771f\u306e\u4f8b\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u968e\u5c64\u69cb\u9020\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>Desktop/                \u2190 \u4fdd\u5b58\u5834\u6240\n|\n\u2514\u2500 Test/                \u2190 \u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30d5\u30a9\u30eb\u30c0\n   |\n   \u251c\u2500 Test.sln          \u2190 \u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\n   \u2514\u2500 Test/             \u2190 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\n      |\n      \u251c\u2500 ...\n      \u2514\u2500 main.cpp\n</code></pre> <p>\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u304d\u65b9</p> <p>\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30d5\u30a9\u30eb\u30c0\u306b\u542b\u307e\u308c\u308b\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb (.sln) \u3092\u958b\u304f\u3068\u3001\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u304c\u958b\u304b\u308c\u307e\u3059\u3002</p>"},{"location":"practice/cpp/#_2","title":"\ud83c\udf1f \u5b9f\u884c","text":"<p>\u518d\u751f\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u304c\u884c\u308f\u308c\u307e\u3059\u3002</p> <p></p>"},{"location":"practice/cpp/#_3","title":"\ud83c\udf1f \u30b9\u30c6\u30c3\u30d7\u5b9f\u884c","text":"<p>\u884c\u5358\u4f4d\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3001\u5909\u6570\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p> <p>F10 \u30ad\u30fc\u3092\u62bc\u3059\u3068\u3001\u30b9\u30c6\u30c3\u30d7\u5b9f\u884c\u30e2\u30fc\u30c9\u306b\u5165\u308a\u307e\u3059\u3002F10 \u30ad\u30fc\u3092\u62bc\u3059\u305f\u3073\u306b\u3001\u6b21\u306e\u884c\u306b\u9032\u307f\u307e\u3059\u3002</p> <p></p> <p>\u5909\u6570\u306e\u4e0a\u306b\u30ab\u30fc\u30bd\u30eb\u3092\u5408\u308f\u305b\u308b\u3068\u3001\u305d\u306e\u5909\u6570\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p> <p></p>"},{"location":"practice/cpp/#_4","title":"\u8d85\u5165\u9580\u7de8","text":"<ul> <li> <p>\ud83c\udf1f main \u95a2\u6570\u306b\u3064\u3044\u3066</p> </li> <li> <p>\ud83c\udf1f \u5909\u6570</p> </li> <li> <p>\ud83c\udf1f \u578b</p> </li> <li> <p>\ud83c\udf1f \u914d\u5217</p> </li> <li> <p>\ud83c\udf1f \u914d\u5217\u306e\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9</p> </li> <li> <p>\ud83c\udf1f \u6a19\u6e96\u51fa\u529b</p> </li> <li> <p>\ud83c\udf1f \u7b97\u8853\u6f14\u7b97\u3001\u6bd4\u8f03\u6f14\u7b97\u3001\u8ad6\u7406\u6f14\u7b97\u3001\u30d3\u30c3\u30c8\u6f14\u7b97</p> </li> </ul>"},{"location":"practice/cpp/#main","title":"\ud83c\udf1fmain \u95a2\u6570\u306b\u3064\u3044\u3066","text":"<p>C++\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u59cb\u5730\u70b9\u3001\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8</p> <pre><code>int main()\n{\n    return 0;\n}\n</code></pre> <p>main \u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u5b9f\u884c\u74b0\u5883\u5074\u304c\u53d7\u3051\u53d6\u308b\u3002</p> <p></p> <p>\u8c46\u77e5\u8b58</p> <p>\u5b9f\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8d77\u70b9\u306f main \u95a2\u6570\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>\u5b9f\u884c\u74b0\u5883\u3092\u610f\u8b58\u305b\u305a\u66f8\u3051\u308b\u3088\u3046\u306b\u3001main\u304b\u3089\u59cb\u307e\u308b\u3068\u6c7a\u3081\u3089\u308c\u3066\u3044\u308b\u3060\u3051\u3067\u3059\uff01</p> <p>\u2193 main\u307e\u3067\u306e\u547c\u3073\u51fa\u3057\u5c65\u6b74\u3000\u74b0\u5883\uff1aMSVC(Visual Studio)</p> <p></p>"},{"location":"practice/cpp/#_5","title":"\ud83c\udf1f \u5909\u6570","text":"<p>\u5024\u3092\u4fdd\u6301\u3057\u3066\u304a\u304f\u6a5f\u80fd\u3002\u30e1\u30e2\u30ea\u4e0a\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002</p> <pre><code>int value = 100;\n</code></pre> <p>\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3068\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306e\u9055\u3044</p> <pre><code>int global;  // global == 0\n\nint main()\n{\n    int local;  // local == \u672a\u5b9a\u7fa9\n}\n</code></pre> <p>\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\uff1a0 \u306b\u521d\u671f\u5316\u3055\u308c\u308b</p> <p>\u30ed\u30fc\u30ab\u30eb\u5909\u6570\uff1a\u521d\u671f\u5316\u3055\u308c\u306a\u3044(\u30b4\u30df\u306e\u5024\u304c\u5165\u3063\u3066\u308b) \u2192 \u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306f\u5fc5\u305a\u521d\u671f\u5316\uff01\uff01\uff01</p>"},{"location":"practice/cpp/#_6","title":"\ud83c\udf1f \u578b","text":"<p>\u5909\u6570\u306e\u4ed5\u69d8\u3092\u6c7a\u3081\u308b\u3082\u306e\u3002</p> <pre><code>int main()\n{\n    int   i = 3;     // \u6574\u6570\n    float f = 2.1;   // \u6d6e\u52d5\u5c0f\u6570\n    bool  b = true;  // \u771f\u507d\u5024\n    char  c = 'a';   // \u6587\u5b57\n}\n</code></pre> <p>auto \u578b</p> <p>\u521d\u671f\u5316\u5024\u3092\u898b\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u578b\u3092\u63a8\u8ad6\u3057\u3066\u304f\u308c\u308b\u6a5f\u80fd\u3002</p> <pre><code>auto i = 3;     // i: int\nauto f = 2.1;   // f: double\nauto b = true;  // b: bool\nauto c = 'a';   // c: char\n</code></pre> <p>uintx_t, intx_t \u578b</p> <p><code>int</code> \u578b\u3084 <code>long</code> \u578b\u306a\u3069\u306e\u578b\u306f\u5b9f\u884c\u74b0\u5883\u306b\u3088\u3063\u3066\u30b5\u30a4\u30ba\u304c\u5909\u308f\u308a\u307e\u3059\u3002\u30b5\u30a4\u30ba\u304c\u5909\u308f\u308b\u3068\u6271\u3048\u308b\u5024\u306e\u7bc4\u56f2\u3082\u5909\u308f\u308a\u30d0\u30b0\u306e\u7d20\u306a\u306e\u3067\u3001\u5e38\u306b\u30b5\u30a4\u30ba\u304c\u4e00\u5b9a\u306a\u578b\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> \u30d3\u30c3\u30c8\u6570 \u7b26\u53f7\u7121\u3057\u6574\u6570 \u7b26\u53f7\u4ed8\u304d\u6574\u6570 8 uint8_t int8_t 16 uint16_t int16_t 32 uint32_t int32_t 64 uint64_t int64_t"},{"location":"practice/cpp/#_7","title":"\ud83c\udf1f \u914d\u5217","text":"<pre><code>int array[5] = { 1, 2, 3, 4, 5 };\n\nint array[5] = {};  // \u30bc\u30ed\u30af\u30ea\u30a2\n</code></pre> <ul> <li> <p>\u5909\u6570\u306e\u96c6\u307e\u308a</p> </li> <li> <p>\ud83c\udf1f \u540c\u3058\u578b\u306e\u5024\u306e\u307f \u30b5\u30a4\u30ba\u56fa\u5b9a</p> </li> <li> <p>\ud83c\udf1f {} (\u96c6\u6210\u4f53\u521d\u671f\u5316)\u306b\u3088\u3063\u3066\u30bc\u30ed\u30af\u30ea\u30a2\u3067\u304d\u308b</p> </li> </ul> <p>\u3088\u304f\u3042\u308b\u30bc\u30ed\u30af\u30ea\u30a2\u306e\u30a2\u30f3\u30c1\u30d1\u30bf\u30fc\u30f3</p> <p>memset \u3092\u7528\u3044\u305f\u30bc\u30ed\u30af\u30ea\u30a2(\u975e\u52b9\u7387)</p> <p>\u30af\u30e9\u30b9\u3067\u3053\u308c\u3092\u3059\u308b\u3068\u554f\u984c\u306b\u306a\u308b</p> <pre><code>int array[5];\nmemset(array, 0, sizeof array);\n</code></pre> <p>C\u8a00\u8a9e\u98a8 (\u30c0\u30e1\u3067\u306f\u306a\u3044)</p> <pre><code>int array[5] = { 0 };\n</code></pre>"},{"location":"practice/cpp/#_8","title":"\ud83c\udf1f \u914d\u5217\u306e\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9","text":"<p>\u5148\u982d\u306e\u8981\u7d20\u3092\u8aad\u3080</p> <pre><code>int head = array[0];\n</code></pre> <p>\u672b\u5c3e\u306e\u8981\u7d20\u306b\u66f8\u304d\u8fbc\u3080</p> <p>\u203b0 \u756a\u76ee\u304b\u3089\u59cb\u307e\u308b\u306e\u3067\u3001\u672b\u5c3e\u306f(\u8981\u7d20\u6570-1)\u756a\u76ee\u3068\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f</p> <pre><code>array[4] = 1234;\n</code></pre>"},{"location":"practice/cpp/#_9","title":"\ud83c\udf1f \u6a19\u6e96\u51fa\u529b","text":"<pre><code>#include &lt;iostream&gt;\n\nint main()\n{\n    int value = 1;\n\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"practice/cpp/#_10","title":"\ud83c\udf1f \u7b97\u8853\u6f14\u7b97","text":"<p><code>+</code> <code>-</code> <code>*</code> <code>/</code> <code>%</code></p> <p>\u5270\u4f59\u7b97</p> <pre><code>int mod = 100 % 3;  // mod == 1\n</code></pre> <p>\u304b\u3063\u3053</p> <pre><code>int result = 2 * (3 + 4);\n</code></pre> <p>\u6574\u6570\u540c\u58eb\u306e\u9664\u7b97\u306b\u6ce8\u610f</p> <p>\u6574\u6570\u540c\u58eb\u306e\u5272\u308a\u7b97\u306f\u5c0f\u6570\u304c\u5207\u308a\u6368\u3066\u3089\u308c\u308b\u305f\u3081\u3001\u671f\u5f85\u3057\u305f\u7b54\u3048\u3068\u9055\u3046\u5024\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>int result = 3 / 2;   // result == 1 \u2716\n</code></pre> <p>\u6b21\u306e\u3088\u3046\u306b\u5de6\u8fba\u304b\u53f3\u8fba\u306e\u3069\u3061\u3089\u304b\u3092\u5c0f\u6570\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>double result = 3.0 / 2;   // result == 1.5 \u3007\n</code></pre> <p>\u56e0\u307f\u306b\u6b21\u306e\u3088\u3046\u306b\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\u3067\u7d50\u679c\u3092\u53d7\u305f\u3068\u3057\u3066\u3082\u3001\u53f3\u8fba\u304c\u5148\u306b\u8a55\u4fa1\u3055\u308c\u308b\u305f\u3081\u3001\u5272\u308a\u7b97\u306e\u8a55\u4fa1\u306b\u5f71\u97ff\u305b\u305a\u7121\u610f\u5473\u3067\u3059\u3002</p> <pre><code>double result = 3 / 2;   // result == 1 \u2716\n</code></pre>"},{"location":"practice/cpp/#_11","title":"\ud83c\udf1f \u6bd4\u8f03\u6f14\u7b97","text":"<p>\u4e3b\u306b if \u6587\u3067\u4f7f\u308f\u308c\u307e\u3059\u3002</p> <p><code>==</code> <code>!=</code> <code>&lt;</code> <code>&gt;</code> <code>&lt;=</code> <code>&gt;=</code></p> <pre><code>int value = 1;\n\nif (value == 1)\n{\n    // \u3053\u3053\u306b\u5165\u308b\n}\n</code></pre>"},{"location":"practice/cpp/#_12","title":"\ud83c\udf1f \u8ad6\u7406\u6f14\u7b97","text":"<p>\u4e3b\u306b if \u6587\u3067\u4f7f\u308f\u308c\u3001\u8907\u6570\u306e\u6761\u4ef6\u3092\u5224\u5b9a\u3057\u305f\u3044\u5834\u5408\u306b\u7528\u3044\u307e\u3059\u3002</p> <p><code>&amp;&amp;</code> <code>||</code> <code>!</code></p> \u8ad6\u7406\u6f14\u7b97\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u8ad6\u7406\u6f14\u7b97\u3092\u4f7f\u3046\u5834\u5408 <pre><code>int a = 1;\nint b = 2;\n\nif (a == 1)\n{\n    if (b == 2)\n    {\n    }\n}\n</code></pre> <pre><code>int a = 1;\nint b = 2;\n\nif (a == 1 &amp;&amp; b == 2)\n{\n}\n</code></pre>"},{"location":"practice/cpp/#_13","title":"\ud83c\udf1f \u30d3\u30c3\u30c8\u6f14\u7b97","text":"<p><code>&amp;</code> <code>|</code> <code>^</code> <code>~</code> <code>&lt;&lt;</code> <code>&gt;&gt;</code></p> <p>\u5404\u30d3\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u8ad6\u7406\u6f14\u7b97\u3092\u884c\u3044\u307e\u3059\u3002</p> <p>\u8ad6\u7406\u6f14\u7b97\u6f14\u7b97\u306f bool \u578b\u540c\u58eb\u306e\u6f14\u7b97\u306a\u306e\u306b\u5bfe\u3057\u3001\u30d3\u30c3\u30c8\u6f14\u7b97\u306f\u6574\u6570\u578b\u540c\u58eb\u306e\u6f14\u7b97\u3067\u3059\u3002</p> <p>\u30dd\u30fc\u30c8\u306e\u5236\u5fa1\u3084\u3001\u30d0\u30a4\u30c8\u5217\u3078\u306e\u5909\u63db\u306a\u3069\u3067\u4f7f\u308f\u308c\u307e\u3059\u3002</p> <pre><code>uint8_t a = 0b1010;\nuint8_t b = 0b1100;\n\nuint8_t AND = a &amp; b;  // AND == 0b1000\nuint8_t OR  = a | b;  // OR  == 0b1110\nuint8_t XOR = a ^ b;  // XOR == 0b0110\nuint8_t NOT = ~a;     // NOT == 0b0101\nuint8_t LSH = a &lt;&lt; 1; // LSH == 0b10100\nuint8_t RSH = a &gt;&gt; 1; // RSH == 0b0101\n</code></pre> <p>\u6f14\u7b97\u306f\u7b46\u7b97\u3092\u601d\u3044\u51fa\u3059\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002</p> <pre><code>  1010       1010       1010\n&amp; 1100     | 1100     ^ 1100     ~ 1010\n------     ------     ------     ------\n  1000       1110       0110       0101\n</code></pre> <p>\u30b7\u30d5\u30c8\u6f14\u7b97\u306f\u30d3\u30c3\u30c8\u3092\u5de6\u53f3\u306b\u305a\u3089\u3059\u6f14\u7b97\u3067\u3059\u3002\u5909\u6570\u306e\u8868\u73fe\u7bc4\u56f2\u304b\u3089\u306f\u307f\u51fa\u305f\u30d3\u30c3\u30c8\u306f\u6368\u3066\u3089\u308c\u307e\u3059\u3002</p> <pre><code>&lt;&lt; 1  1010      &gt;&gt; 1  1010\n----------      -----------\n     10100            01010\n</code></pre>"},{"location":"practice/cpp/#_14","title":"\u521d\u7d1a\u7de8 (\u5236\u5fa1\u69cb\u6587)","text":"<ul> <li>\ud83c\udf1f if \u6587</li> <li>\ud83c\udf1f while \u6587</li> <li>\ud83c\udf1f for \u6587</li> <li>\ud83c\udf1f \u53c2\u7167\u578b</li> <li>\ud83c\udf1f \u7bc4\u56f2 for \u6587</li> <li>\ud83c\udf1f break \u6587</li> <li>\ud83c\udf1f continue \u6587</li> <li>\ud83c\udf1f switch \u6587</li> <li>\ud83c\udf1f enum class</li> </ul>"},{"location":"practice/cpp/#if","title":"\ud83c\udf1f if \u6587","text":"<p>\u6761\u4ef6\u5206\u5c90\u3092\u3059\u308b\u6a5f\u80fd\u3002</p> <pre><code>int value = 1;\n\nif (value == 1)\n{\n    // value \u304c 1 \u306e\u5834\u5408\n}\nelse\n{\n    // value \u304c 1 \u4ee5\u5916\u306e\u5834\u5408\n}\n</code></pre> <p>if \u6587\u81ea\u4f53\u304c\u6761\u4ef6\u5f0f\u3092\u8a55\u4fa1\u3059\u308b\u305f\u3081\u3001\u6bd4\u8f03\u6f14\u7b97\u3092\u4f7f\u308f\u306a\u3044 if \u6587\u3082\u66f8\u3051\u307e\u3059\u3002</p> <pre><code>int value = 1;\n\nif (value)\n{\n    // value \u304c 0 \u4ee5\u5916\u306e\u5834\u5408\n}\nelse\n{\n    // value \u304c 0 \u306e\u5834\u5408\n}\n</code></pre> <p>else if \u6587\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u6761\u4ef6\u3092\u6b21\u3005\u7d5e\u3063\u3066\u3044\u304f\u3088\u3046\u306b\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int value = 1;\n\nif (value == 1)\n{\n    // value \u304c 1 \u306e\u5834\u5408\n}\nelse if (value &lt; 10)\n{\n    // value \u304c 1 \u3067\u306a\u304f\u3001value \u304c 10 \u672a\u6e80\u306e\u5834\u5408\n}\n</code></pre> <p>Note</p> <p>\u4ed6\u306e\u8a00\u8a9e\u306b\u306f <code>elif</code> \u306e\u3088\u3046\u306a\u69cb\u6587\u304c\u3042\u308a\u307e\u3059\u304c\u3001C\u3001C++ \u306b\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>\u5b9f\u306f else if \u6587\u3068\u3044\u3046\u3082\u306e\u306f\u5b58\u5728\u305b\u305a\u3001<code>else</code> \u3068 <code>if</code> \u6587\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3042\u308b\u3088\u3046\u306b\u898b\u305b\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002</p> <pre><code>int value = 1;\n\nif (value == 1)\n{\n    // value \u304c 1 \u306e\u5834\u5408\n}\nelse\n    if (value &lt; 10)\n    {\n        // value \u304c 10 \u672a\u6e80\u306e\u5834\u5408 (1\u306f\u542b\u307e\u306a\u3044)\n    }\n</code></pre> <p>if \u6587\u306e\u30cd\u30b9\u30c8\u3092\u6df1\u304f\u3057\u306a\u3044\u30b3\u30c4</p> <p>\u5b9f\u969b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u6761\u4ef6\u5206\u5c90\u304c\u8907\u96d1\u306b\u306a\u308a\u3001\u30cd\u30b9\u30c8\u304c\u6df1\u304f\u306a\u308a\u304c\u3061\u3067\u3059\u3002</p> <p>\u8ad6\u7406\u6f14\u7b97\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u65e9\u671f\u30ea\u30bf\u30fc\u30f3\u3092\u4f7f\u3046\u3068\u8907\u96d1\u306a\u51e6\u7406\u306e\u5834\u5408\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002</p> <p>\u65e9\u671f\u30ea\u30bf\u30fc\u30f3\u306f\u6761\u4ef6\u306b\u5408\u308f\u306a\u3044\u5834\u5408\u3092\u5148\u306b\u51e6\u7406\u3057\u3001\u6761\u4ef6\u306b\u5408\u3046\u5834\u5408\u306e\u51e6\u7406\u3092\u5f8c\u306b\u66f8\u304f\u65b9\u6cd5\u3067\u3059\u3002</p> \u30cd\u30b9\u30c8\u304c\u6df1\u3044\u4f8b\u65e9\u671f\u30ea\u30bf\u30fc\u30f3\u3092\u4f7f\u3063\u305f\u5834\u5408 <pre><code>int main()\n{\n    int left = 0;\n    if (std::cin &gt;&gt; left)\n    {\n        int right = 0;\n        if (std::cin &gt;&gt; right)\n        {\n            if (right)\n            {\n                std::cout &lt;&lt; left / right &lt;&lt; std::endl;\n            }\n            else\n            {\n                std::cout &lt;&lt; \"[ERROR] right is zero\" &lt;&lt; std::endl;\n            }\n        }\n        else\n        {\n            std::cout &lt;&lt; \"[ERROR] invalid right\" &lt;&lt; std::endl;\n        }\n    }\n    else\n    {\n        std::cout &lt;&lt; \"[ERROR] invalid left\" &lt;&lt; std::endl;\n    }\n}\n</code></pre> <pre><code>int main()\n{\n    int left = 0;\n    if (!(std::cin &gt;&gt; left))\n    {\n        std::cout &lt;&lt; \"[ERROR] invalid left\" &lt;&lt; std::endl;\n        return 1;\n    }\n\n    int right = 0;\n    if (!(std::cin &gt;&gt; right))\n    {\n        std::cout &lt;&lt; \"[ERROR] invalid right\" &lt;&lt; std::endl;\n        return 1;\n    }\n\n    if (right == 0)\n    {\n        std::cout &lt;&lt; \"[ERROR] right is zero\" &lt;&lt; std::endl;\n    }\n\n    std::cout &lt;&lt; left / right &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"practice/cpp/#while","title":"\ud83c\udf1f while \u6587","text":"<p>\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3092\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002</p> <pre><code>while (true)\n{\n    // \u7121\u9650\u30eb\u30fc\u30d7\n}\n</code></pre> <p>\u30ed\u30dc\u30b3\u30f3\u3067\u306f\u901a\u4fe1\u306e\u53d7\u4fe1\u51e6\u7406\u306b\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002</p> <pre><code>while (\u30c7\u30fc\u30bf\u304c\u6b8b\u3063\u3066\u3044\u308b())\n{\n    \u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3057\u3066\u51e6\u7406\u3059\u308b();\n}\n</code></pre> <p>while \u6587\u3067\u3084\u308a\u304c\u3061\u306a\u30d0\u30b0</p> <p>\u30eb\u30fc\u30d7\u6bce\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5834\u5408\u3001\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u9593\u9055\u3048\u308b\u3068\u5024\u306e\u5909\u5316\u304c\u4e88\u671f\u3057\u306a\u3044\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u6b21\u306b\u7d39\u4ecb\u3059\u308b for \u6587\u3092\u4f7f\u3046\u3053\u3068\u3067\u3053\u306e\u3088\u3046\u306a\u30d0\u30b0\u3092\u9632\u3052\u307e\u3059\u3002</p> \u5148\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u5834\u5408<pre><code>int i = 0;\n\nwhile (i &lt; 3)\n{\n    i++;\n    std::cout &lt;&lt; i &lt;&lt; std::endl;\n}\n\n// 1\n// 2\n// 3\n</code></pre> \u5f8c\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u5834\u5408<pre><code>int i = 0;\n\nwhile (i &lt; 3)\n{\n    std::cout &lt;&lt; i &lt;&lt; std::endl;\n    i++;\n}\n\n// 0\n// 1\n// 2\n</code></pre>"},{"location":"practice/cpp/#for","title":"\ud83c\udf1f for \u6587","text":"<p>\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3092\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\u4e3b\u306b\u914d\u5217\u3092\u64cd\u4f5c\u3059\u308b\u969b\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002</p> <p>\u69cb\u6587\u3084\u52d5\u4f5c\u304c\u5c11\u3005\u8907\u96d1\u3067\u3059\u304c\u3001\u30ab\u30a6\u30f3\u30bf i \u306e\u5024\u306e\u5909\u5316\u306e\u4ed5\u65b9\u304c\u5206\u304b\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3002</p> <pre><code>for (int i = 0; i &lt; 3; i++)\n{\n    std::cout &lt;&lt; i &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>0\n1\n2\n</code></pre> <p>i \u306f\u6b21\u306e\u3088\u3046\u306b\u5909\u5316\u3057\u307e\u3059\u3002</p> <pre><code>{\n    i == 0\n}\n</code></pre> <p>\u2193</p> <pre><code>{\n    i == 1\n}\n</code></pre> <p>\u2193</p> <pre><code>{\n    i == 2\n}\n</code></pre> <p>\u914d\u5217\u306e\u5168\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002</p> <pre><code>int array[3] = { 10 , 20, 30 };\n\nfor (int i = 0; i &lt; 3; i++)\n{\n    std::cout &lt;&lt; array[i] &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>10\n20\n30\n</code></pre> <p>\u30af\u30a4\u30ba</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7d50\u679c <pre><code>int array[3] = {};\n\nfor (int i = 0; i &lt; 3; i++)\n{\n    array[i] = i * 10;\n}\n\nfor (int i = 0; i &lt; 3; i++)\n{\n    std::cout &lt;&lt; array[i] &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>0\n10\n20\n</code></pre>"},{"location":"practice/cpp/#_15","title":"\ud83c\udf1f \u53c2\u7167\u578b","text":"<p>\u6b21\u306e\u7bc4\u56f2 for \u6587\u3067\u53c2\u7167\u3092\u4f7f\u3046\u306e\u3067\u3001\u3053\u3053\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002</p> <p>\u53c2\u7167\u306f\u5909\u6570\u306b\u5225\u540d\u3092\u3064\u3051\u308b\u6a5f\u80fd\u3067\u3059\u3002\u53c2\u7167\u578b\u306e\u5909\u6570\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\u3068\u3001\u53c2\u7167\u5148\u306e\u5909\u6570\u306e\u5024\u3082\u5909\u308f\u308a\u307e\u3059\u3002</p> <pre><code>int value = 100;\n\nint&amp; ref = value;\n\nref = 200;  // value == 200\n</code></pre> <p>\u914d\u5217\u306e\u8981\u7d20\u306b\u5bfe\u3057\u3066\u3082\u540c\u3058\u304f\u53c2\u7167\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int array[3] = { 10 , 20, 30 };\n\nint&amp; headRef = array[0];\n\nheadRef = 0;  // array[0] == 0\n</code></pre>"},{"location":"practice/cpp/#for_1","title":"\ud83c\udf1f \u7bc4\u56f2 for \u6587","text":"<p>\u901a\u5e38\u306e for \u6587\u306e\u9032\u5316\u7cfb\u3067\u3001\u914d\u5217\u306e\u5168\u8981\u7d20\u306b\u7c21\u5358\u306b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u307e\u3059\u3002</p> <pre><code>int array[3] = { 10 , 20, 30 };\n\nfor (int value : array)\n{\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>10\n20\n30\n</code></pre> <p>\u7bc4\u56f2 for \u6587\u306f\u914d\u5217\u306e\u8981\u7d20\u3092\u30b3\u30d4\u30fc\u3057\u3066\u53d6\u308a\u51fa\u3059\u305f\u3081\u3001\u3053\u306e\u307e\u307e\u3067\u306f\u914d\u5217\u306e\u8981\u7d20\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p> <pre><code>int array[3] = { 10 , 20, 30 };\n\nfor (int value : array)\n{\n    value = 0;\n}\n\nfor (int value : array)\n{\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>10\n20\n30\n</code></pre> <p>\u53c2\u7167\u3092\u4f7f\u3046\u3068\u914d\u5217\u306e\u8981\u7d20\u3092\u66f8\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002</p> <pre><code>int array[3] = { 10 , 20, 30 };\n\nfor (int&amp; value : array)\n{\n    value = 0;\n}\n\nfor (int value : array)\n{\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>0\n0\n0\n</code></pre> <p>\u901a\u5e38 for \u6587\u3068\u7bc4\u56f2 for \u6587\u306e\u4f7f\u3044\u5206\u3051</p> <p>\u7bc4\u56f2 for \u6587\u306f\u914d\u5217\u306e\u5168\u8981\u7d20\u306b\u540c\u3058\u3088\u3046\u306a\u51e6\u7406\u3092\u3059\u308b\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u901a\u5e38\u306e for \u6587\u3068\u306f\u9055\u3044\u3001\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u5909\u6570\u304c\u306a\u3044\u305f\u3081\u3001\u4e8c\u3064\u306e\u914d\u5217\u3092\u540c\u6642\u306b\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u901a\u5e38\u306e for \u6587\u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code>int array1[3] = { 10 , 20, 30 };\nint array2[3] = { 100 , 200, 300 };\n\nint results[3] = {};\n\nfor (int i = 0; i &lt; 3; i++)\n{\n    results[i] = array1[i] + array2[i];\n}\n</code></pre> <p>\u7bc4\u56f2 for \u6587\u306e\u6b63\u4f53</p> <p>\u7bc4\u56f2 for \u6587\u306f\u5b9f\u306f\u901a\u5e38\u306e for \u6587\u306e\u7cd6\u8863\u69cb\u6587\u3067\u3059\u3002</p> <p>\u203b \u7cd6\u8863\u69cb\u6587\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u697d\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3001\u672c\u8cea\u7684\u306a\u90e8\u5206\u3092\u96a0\u853d\u3057\u305f\u69cb\u6587</p> <pre><code>int array[3] = { 10 , 20, 30 };\n\nfor (int value : array)\n{\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n}\n</code></pre> <p>\u2193 \u5909\u63db\u5f8c\u306e\u30a4\u30e1\u30fc\u30b8</p> <pre><code>int array[3] = { 10 , 20, 30 };\n\nfor (int i = 0; i &lt; 3; i++)\n{\n    int value = array[i];\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n}\n</code></pre> <p>\u203b\u5b9f\u969b\u306f\u6b21\u306e\u3088\u3046\u306b\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002</p> <pre><code>int array[3] = { 10 , 20, 30 };\n\nauto&amp;&amp; __range = array;\nfor (auto __begin = std::begin(__range), __end = std::end(__range); __begin != __end; ++__begin)\n{\n    int value = *__begin;\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"practice/cpp/#break","title":"\ud83c\udf1f break \u6587","text":"<p>\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3092\u9014\u4e2d\u3067\u7d42\u4e86\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code>int array[3] = { 10 , 20, 30, 40, 50 };\n\nfor (int value : array)\n{\n    if (value == 40)\n    {\n        break;\n    }\n\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>10\n20\n30\n</code></pre>"},{"location":"practice/cpp/#continue","title":"\ud83c\udf1f continue \u6587","text":"<p>\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code>int array[3] = { 10 , 20, 30, 40, 50 };\n\nfor (int value : array)\n{\n    if (value == 40)\n    {\n        continue;  // \u6b21\u306e\u30eb\u30fc\u30d7\u3078\n    }\n\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>10\n20\n30\n50  // 40 \u304c\u30b9\u30ad\u30c3\u30d7\u3055\u308c\u3066\u3044\u308b\n</code></pre>"},{"location":"practice/cpp/#switch","title":"\ud83c\udf1f switch \u6587","text":"<p>\u6761\u4ef6\u5206\u5c90\u3092\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002if \u6587\u306b\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001\u6761\u4ef6\u304c\u6574\u6570\u578b\u306e\u307f\u3067\u3059\u3002\u30e2\u30fc\u30c9\u5207\u66ff\u3084\u3001\u72b6\u614b\u9077\u79fb(\u81ea\u52d5\u5236\u5fa1)\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002</p> <pre><code>int mode = 1;\n\nswitch (mode)\n{\ncase 0:\n    // mode \u304c 0 \u306e\u5834\u5408\n    break;\n\ncase 1:\n    // mode \u304c 1 \u306e\u5834\u5408\n    break;\n\ndefault:\n    // mode \u304c 0 \u3067\u3082 1 \u3067\u3082\u306a\u3044\u5834\u5408\n    break;\n}\n</code></pre> <p>break \u5fd8\u308c\u306b\u6ce8\u610f</p> <p>break \u3092\u66f8\u304b\u306a\u3044\u3068\u3001\u6b21\u306e case \u306b\u9032\u3093\u3067\u3057\u307e\u3044\u307e\u3059\u3002</p> <pre><code>int mode = 1;\n\nswitch (mode)\n{\ncase 0:\n    // mode \u304c 0 \u306e\u5834\u5408\n\ncase 1:\n    // mode \u304c 0 \u304b 1 \u306e\u5834\u5408 (case 0 \u306b break \u304c\u306a\u3044\u305f\u3081 0 \u306e\u5834\u5408\u3082\u5b9f\u884c\u3055\u308c\u308b)\n    break;\n\ndefault:\n    // mode \u304c 0 \u3067\u3082 1 \u3067\u3082\u306a\u3044\u5834\u5408\n    break;\n}\n</code></pre>"},{"location":"practice/cpp/#enum-class","title":"\ud83c\udf1f enum class","text":"<p>\u5217\u6319\u578b\u3068\u547c\u3070\u308c\u3001\u5024\u306b\u540d\u524d\u3092\u3064\u3051\u308b\u6a5f\u80fd\u3067\u3059\u3002switch \u6587\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\u5024\u306b\u540d\u524d\u3092\u3064\u3051\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u53ef\u8aad\u6027\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002</p> <p>\u203b enum class \u3068 class \u306f\u5225\u7269\u3067\u3059\u3002</p> <pre><code>enum class Mode\n{\n    Start,\n    PickFruit,\n    GotoNext,\n};\n\nint main()\n{\n    Mode mode = Mode::PickFruit;\n\n    switch (mode)\n    {\n    case Mode::Start:\n        // mode \u304c Start \u306e\u5834\u5408\n        break;\n\n    case Mode::Mode1:\n        // mode \u304c Mode1 \u306e\u5834\u5408\n        break;\n\n    case Mode::GotoNext:\n        // mode \u304c GotoNext \u306e\u5834\u5408\n        break;\n    }\n}\n</code></pre>"},{"location":"practice/cpp/#_16","title":"\u4e2d\u7d1a\u7de8","text":"<ul> <li>\ud83c\udf1f \u95a2\u6570</li> <li>\ud83c\udf1f \u69cb\u9020\u4f53 \uff01\u8d85\u5927\u4e8b\uff01</li> <li>\ud83c\udf1f \u30af\u30e9\u30b9</li> <li>\ud83c\udf1f \u540d\u524d\u7a7a\u9593</li> <li>\ud83c\udf1f \u30a4\u30f3\u30af\u30eb\u30fc\u30c9</li> <li>\ud83c\udf1f \u30de\u30af\u30ed</li> <li>\ud83c\udf1f \u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\u6642\u6761\u4ef6\u5206\u5c90</li> </ul>"},{"location":"practice/cpp/#_17","title":"\ud83c\udf1f \u95a2\u6570","text":"<p>\u51e6\u7406\u3092\u307e\u3068\u3081\u3066\u540d\u524d\u3092\u3064\u3051\u308b\u6a5f\u80fd\u3067\u3059\u3002\u540c\u3058\u51e6\u7406\u3092\u4f55\u5ea6\u3082\u66f8\u3044\u3066\u3044\u308b\u5834\u5408\u3001\u95a2\u6570\u306b\u307e\u3068\u3081\u308b\u3053\u3068\u3067\u30b3\u30fc\u30c9\u306e\u91cd\u8907\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u304b\u3063\u3053 <code>()</code> \u306e\u4e2d\u306f\u5f15\u6570\u3068\u547c\u3070\u308c\u3001\u95a2\u6570\u306b\u6e21\u3059\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <p>\u51e6\u7406\u7d50\u679c\u306f\u623b\u308a\u5024\u3068\u547c\u3070\u308c\u3001<code>return</code> \u3067\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code>int add(int a, int b)\n{\n    return a + b;\n}\n\nint main()\n{\n    int result = add(1, 2);  // result == 3\n}\n</code></pre> <p>\u623b\u308a\u5024\u304c\u5c11\u3057\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u304c\u3001\u8a08\u7b97\u306e\u9806\u756a\u3092\u610f\u8b58\u3059\u308b\u3068\u7406\u89e3\u3057\u3084\u3059\u3044\u3067\u3059\u3002</p> <p>\u898f\u683c\u3067\u521d\u671f\u5316\u5b50 (=) \u306e\u53f3\u8fba\u304c\u5148\u306b\u8a08\u7b97\u3055\u308c\u308b\u3068\u6c7a\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002</p> <pre><code>int result = add(1, 2);\n\n// \u2193\n// add\u95a2\u6570\u306b 1, 2 \u3092\u6e21\u3057\u3001\u623b\u308a\u5024 3 \u3092\u5f97\u308b\n// \u2193\n\nint result = 3;\n</code></pre> <p>\u8907\u6570\u306e\u5024\u3092\u623b\u308a\u5024\u306b\u3057\u305f\u3044\u5834\u5408</p> <p>\u203b\u4eca\u306f\u5206\u304b\u3089\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002</p> <p>\u95a2\u6570\u306f\u4e00\u3064\u306e\u5024\u3057\u304b\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u8907\u6570\u306e\u5024\u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u306f\u69cb\u9020\u4f53\u3092\u4f7f\u3063\u3066\u4e00\u3064\u306e\u5024\u306b\u307e\u3068\u3081\u308b\u304b\u3001\u53c2\u7167\u3092\u4f7f\u3046\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002</p> <p>C++ \u3067\u306f\u69cb\u9020\u4f53\u3092\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\u53c2\u7167\u578b\u306e\u65b9\u304c\u7406\u89e3\u3057\u3084\u3059\u3044\u3067\u3059\u304c\u3001\u95a2\u6570\u306f\u51e6\u7406\u304c\u4e00\u65b9\u5411\u306b\u306a\u308b\u3088\u3046\u306a\u8a2d\u8a08\u304c\u671b\u307e\u3057\u3044\u305f\u3081\u3001\u53c2\u7167\u578b\u306f\u907f\u3051\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002</p> \u53c2\u7167\u578b\u69cb\u9020\u4f53 <pre><code>void divide(int a, int b, int&amp; result, bool&amp; success)\n{\n    if (b == 0)\n    {\n        success = false;\n        return;\n    }\n\n    result = a / b;\n    success = true;\n}\n\nint main()\n{\n    int result = 0;\n    bool success = false;\n    divide(10, 2, result, success);\n\n    if (success)\n    {\n        std::cout &lt;&lt; result &lt;&lt; std::endl;\n    }\n    else\n    {\n        std::cout &lt;&lt; \"divide by zero\" &lt;&lt; std::endl;\n    }\n}\n</code></pre> <pre><code>struct Result\n{\n    int value;\n    bool success;\n};\n\nResult divide(int a, int b)\n{\n    if (b == 0)\n    {\n        return { 0, false };\n    }\n\n    return { a / b, true };\n}\n\nint main()\n{\n    Result result = divide(10, 2);\n\n    if (result.success)\n    {\n        std::cout &lt;&lt; result.value &lt;&lt; std::endl;\n    }\n    else\n    {\n        std::cout &lt;&lt; \"divide by zero\" &lt;&lt; std::endl;\n    }\n}\n</code></pre>"},{"location":"practice/cpp/#_18","title":"\ud83c\udf1f \u69cb\u9020\u4f53","text":"<p>\u5909\u6570\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\u5ea7\u6a19\u3084\u3001\u30d4\u30f3\u756a\u53f7\u306a\u3069\u3001\u95a2\u9023\u3059\u308b\u5909\u6570\u3092\u307e\u3068\u3081\u308b\u3068\u304d\u306b\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u578b\u3092\u81ea\u5206\u3067\u4f5c\u308b\u6a5f\u80fd\u3068\u3082\u8a00\u3048\u307e\u3059\u3002(\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578b)</p> <p>\u5909\u6570\u540d\u3092\u5358\u7d14\u306b\u3067\u304d\u308b\u306a\u3069\u3001\u30c7\u30ab\u3059\u304e\u308b\u30e1\u30ea\u30c3\u30c8\u304c\u6570\u591a\u304f\u3042\u308a\u307e\u3059\u3002\u69cb\u9020\u4f53\u3092\u9032\u5316\u3055\u305b\u308b\u3068\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002</p> \u5909\u6570\u3060\u3051\u306e\u5834\u5408<pre><code>int main()\n{\n    int a_x = 10;\n    int a_y = 20;\n\n    int b_x = 30;\n    int b_y = 40;\n}\n</code></pre> \u69cb\u9020\u4f53\u3092\u4f7f\u3063\u305f\u5834\u5408<pre><code>struct Vec2  // \u2190 \u69cb\u9020\u4f53\u540d\n{\n    int x;  // \u2190 \u30e1\u30f3\u30d0\u5909\u6570\n    int y;\n};\n\nint main()\n{\n    Vec2 a{ 10, 20 };  // \u2190 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\n    Vec2 b{ 30, 40 };\n}\n</code></pre> <p>\u30e1\u30f3\u30d0\u5909\u6570\u306b\u306f <code>.</code> \u3067\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002</p> <pre><code>int main()\n{\n    Vec2 a{ 10, 20 };\n\n    std::cout &lt;&lt; a.x &lt;&lt; \", \" &lt;&lt; a.y &lt;&lt; std::endl;  // 10, 20\n}\n</code></pre> <p>\u66f8\u304d\u63db\u3048\u3082\u5909\u6570\u540c\u69d8\u306b\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int main()\n{\n    Vec2 a{ 10, 20 };\n\n    a.x = 30;\n\n    std::cout &lt;&lt; a.x &lt;&lt; std::endl;  // 30\n}\n</code></pre> <p>std::cout \u306b\u69cb\u9020\u4f53\u3092\u6e21\u3059</p> <p>\u203b\u4eca\u306f\u5206\u304b\u3089\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002</p> <p>\u69cb\u9020\u4f53\u306e\u5024\u3092\u51fa\u529b\u3059\u308b\u969b\u3001\u6bce\u5ea6\u30e1\u30f3\u30d0\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u306e\u306f\u9762\u5012\u3067\u3059\u3002\u69cb\u9020\u4f53\u306b\u6a19\u6e96\u51fa\u529b\u3078\u306e <code>&lt;&lt;</code> \u6f14\u7b97\u5b50\u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3067\u3001\u69cb\u9020\u4f53\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>struct Vec2\n{\n    int x;\n    int y;\n\n    friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const Vec2&amp; vec)\n    {\n        return os &lt;&lt; vec.x &lt;&lt; \", \" &lt;&lt; vec.y;\n    }\n};\n\nint main()\n{\n    Vec2 a{ 10, 20 };\n\n    std::cout &lt;&lt; a &lt;&lt; std::endl;  // 10, 20\n}\n</code></pre>"},{"location":"practice/cpp/#_19","title":"\ud83c\udf1f \u30af\u30e9\u30b9","text":"<p>\u6b21\u7ae0\u3067\u8aac\u660e\u3057\u307e\u3059\uff01</p>"},{"location":"practice/cpp/#_20","title":"\ud83c\udf1f \u540d\u524d\u7a7a\u9593","text":"<p>\u540d\u524d\u7a7a\u9593\u306f\u5909\u6570\u3084\u95a2\u6570\u306e\u540d\u524d\u306e\u885d\u7a81\u3092\u9632\u3050\u6a5f\u80fd\u3067\u3059\u3002\u4e3b\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u3067\u4f7f\u308f\u308c\u307e\u3059\u3002</p> <p>:: \u3067\u540d\u524d\u7a7a\u9593\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002<code>std::cout</code> \u306e <code>std</code> \u304c\u540d\u524d\u7a7a\u9593\u3067\u3059\u3002</p> <pre><code>namespace Robocon\n{\n    int value = 100;\n}\n\nint main()\n{\n    std::cout &lt;&lt; Robocon::value &lt;&lt; std::endl;  // 100\n}\n</code></pre>"},{"location":"practice/cpp/#_21","title":"\ud83c\udf1f \u30a4\u30f3\u30af\u30eb\u30fc\u30c9","text":"<p><code>#</code> \u304c\u982d\u306b\u3064\u304f\u547d\u4ee4\u306f\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u547d\u4ee4\u3068\u547c\u3070\u308c\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u524d\u306b\u5b9f\u884c\u3055\u308c\u308b\u547d\u4ee4\u3067\u3059\u3002\u4e3b\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u7f6e\u63db\u3092\u884c\u3046\u6a5f\u80fd\u3067\u3059\u3002</p> <p>\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u6587\u306f\u4ed6\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u53d6\u308a\u8fbc\u3080\u6a5f\u80fd\u3067\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u5206\u5272\u3057\u305f\u969b\u3084\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u901a\u5e38\u306f\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb(.h, .hpp)\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\u3002</p> \u7f6e\u63db\u524d<pre><code>#include &lt;iostream&gt;\n\nint main()\n{\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\n}\n</code></pre> \u7f6e\u63db\u5f8c<pre><code>// iostream standard header\n\n// Copyright (c) Microsoft Corporation.\n// SPDX-License-Identifier: Apache-2.0\n\n#ifndef _IOSTREAM_\n#define _IOSTREAM_\n\n#pragma pack(push, _CRT_PACKING)\n#pragma warning(push, _STL_WARNING_LEVEL)\n#pragma warning(disable : _STL_DISABLED_WARNINGS)\n...\n\nint main()\n{\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\n}\n</code></pre> <p>\u8981\u3089\u3093\u77e5\u8b58</p> <p>\u305f\u3060\u306e\u6587\u5b57\u5217\u7f6e\u304d\u63db\u3048\u306e\u70ba\u3001\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u4ee5\u5916\u3082\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int data[] {\n    #include \"data.txt\"\n};\n</code></pre> data.txt<pre><code>1, 2, 3, 4, 5\n</code></pre> <p>\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3001data.txt \u306e\u5185\u5bb9\u304c data \u914d\u5217\u306b\u5c55\u958b\u3055\u308c\u307e\u3059\u3002</p> <pre><code>int data[] {\n    1, 2, 3, 4, 5\n};\n</code></pre>"},{"location":"practice/cpp/#_22","title":"\ud83c\udf1f \u30de\u30af\u30ed","text":"<p>\u4e3b\u306b\u5b9a\u6570\u306e\u5b9a\u7fa9(C \u8a00\u8a9e\u306e\u307f)\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002</p> \u7f6e\u63db\u524d<pre><code>#define VALUE 100\n\nint main()\n{\n    int value = VALUE;\n}\n</code></pre> \u7f6e\u63db\u5f8c<pre><code>int main()\n{\n    int value = 100;\n}\n</code></pre> <p>\u30de\u30af\u30ed\u306f\u5b9a\u6570\u3060\u3051\u3067\u306a\u304f\u3001\u95a2\u6570\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3082\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u578b\u306e\u30c1\u30a7\u30c3\u30af\u304c\u3055\u308c\u306a\u304b\u3063\u305f\u308a\u3001\u4e88\u671f\u3057\u306a\u3044\u7f6e\u63db\u304c\u8d77\u3053\u308b\u305f\u3081\u3001\u30de\u30af\u30ed\u306f\u5acc\u308f\u308c\u3066\u3044\u307e\u3059\u3002</p> \u7f6e\u63db\u524d<pre><code>#define ADD(a, b) ((a) + (b))\n\nint main()\n{\n    int value = ADD(1, 2);\n}\n</code></pre> \u7f6e\u63db\u5f8c<pre><code>int main()\n{\n    int value = ((1) + (2));\n}\n</code></pre>"},{"location":"practice/cpp/#_23","title":"\ud83c\udf1f \u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\u6642\u6761\u4ef6\u5206\u5c90","text":"<p>\u6761\u4ef6\u306b\u3088\u3063\u3066\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5207\u308a\u66ff\u3048\u308b\u6a5f\u80fd\u3067\u3059\u3002\u4e3b\u306b\u30c7\u30d0\u30c3\u30b0\u7528\u306e\u30ed\u30b0\u51fa\u529b\u3084\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u3088\u3063\u3066\u51e6\u7406\u3092\u5909\u3048\u308b\u5834\u5408\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002</p> <p>\u30de\u30af\u30ed\u306e\u5b9a\u7fa9\u3001\u672a\u5b9a\u7fa9\u306b\u3088\u3063\u3066\u51e6\u7406\u3092\u5909\u3048\u308b\u5834\u5408</p> \u7f6e\u63db\u524d<pre><code>#define DEBUG\n\nint main()\n{\n#ifdef DEBUG\n    std::cout &lt;&lt; \"Debug Mode\" &lt;&lt; std::endl;\n#endif\n}\n</code></pre> DEBUG \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bDEBUG \u304c\u672a\u5b9a\u7fa9 <pre><code>int main()\n{\n    std::cout &lt;&lt; \"Debug Mode\" &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>int main()\n{\n}\n</code></pre> <p>\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u3088\u3063\u3066\u51e6\u7406\u3092\u5909\u3048\u308b\u5834\u5408</p> \u7f6e\u63db\u524d<pre><code>#ifdef _WIN32\n#   include &lt;windows.h&gt;\n#elif __linux__\n#   include &lt;unistd.h&gt;\n#endif\n\nint main()\n{\n#ifdef _WIN32\n    Sleep(1000);\n#elif __linux__\n    sleep(1);\n#endif\n}\n</code></pre> \u7f6e\u63db\u5f8c (Windows)\u7f6e\u63db\u5f8c (Linux) <pre><code>#   include &lt;windows.h&gt;\n\nint main()\n{\n    Sleep(1000);\n}\n</code></pre> <pre><code>#   include &lt;unistd.h&gt;\n\nint main()\n{\n    sleep(1);\n}\n</code></pre>"},{"location":"practice/file_splitting/","title":"\u30d5\u30a1\u30a4\u30eb\u5206\u5272\u7de8","text":"<p>\u958b\u767a\u304c\u9032\u3080\u3068\u30e1\u30a4\u30f3\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304c\u80a5\u5927\u5316\u3057\u3001\u898b\u901a\u3057\u304c\u60aa\u304f\u306a\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u5272\u3057\u307e\u3059\u3002</p> <p>\u5206\u5272\u3057\u3084\u3059\u3044\u306e\u306f\u30af\u30e9\u30b9\u3067\u3001\u5b9a\u7fa9\u5834\u6240\u3092\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002</p> <p>\u203b\u4e00\u822c\u7684\u306b\u306f\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3068\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u5206\u5272\u3057\u307e\u3059\u304c\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u9806\u5e8f\u3092\u826f\u304f\u7406\u89e3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u304b\u306a\u308a\u3084\u3084\u3053\u3057\u3044\u305f\u3081\u3001\u90e8\u3067\u306f\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u306b\u5206\u5272\u3057\u3066\u3044\u307e\u3059\u3002</p> Main.ino<pre><code>#include \"Motor.hpp\"\n\nMotor motor1{ 2, 3, 4 };\nMotor motor2{ 5, 6, 7 };\n\nvoid setup()\n{\n    motor1.begin();\n    motor2.begin();\n}\n\nvoid loop()\n{\n    motor1.move(-128);\n    motor2.move(128);\n}\n</code></pre> Motor.hpp<pre><code>#pragma once\n\nclass Motor\n{\n    int pinA;\n    int pinB;\n    int pinP;\n\npublic:\n\n    Motor(int pinA, int pinB, int pinP)\n        : pinA(pinA)\n        , pinB(pinB)\n        , pinP(pinP)\n    {\n    }\n\n    void begin()\n    {\n        pinMode(pinA, OUTPUT);\n        pinMode(pinB, OUTPUT);\n    }\n\n    void move(int power)\n    {\n        digitalWrite(pinA, (power &gt;= 0) ? HIGH : LOW);\n        digitalWrite(pinB, (power &lt;= 0) ? HIGH : LOW);\n        analogWrite(pinP, abs(power));\n    }\n};\n</code></pre>"},{"location":"practice/file_splitting/#_2","title":"\ud83c\udf1f \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9","text":"<p><code>#pragma once</code> \u306f\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u3068\u547c\u3070\u308c\u308b\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u547d\u4ee4\u3067\u3059\u3002</p> <p>\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u6587\u306f\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u8907\u6570\u56de\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3068\u591a\u91cd\u5b9a\u7fa9\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002</p> Main.ino<pre><code>#include \"Motor.hpp\"\n#include \"Motor.hpp\"\n</code></pre> Motor.hpp<pre><code>class Motor\n{\n};\n</code></pre> \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u5c55\u958b\u5f8c\u306eMain.ino<pre><code>class Motor\n{\n};\n\nclass Motor  // \ud83d\udc80 \u591a\u91cd\u5b9a\u7fa9\u30a8\u30e9\u30fc\n{\n};\n</code></pre> <p>\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u3092\u4f7f\u3046\u3068\u3001\u4e00\u5ea6\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u518d\u5ea6\u5c55\u958b\u3055\u308c\u307e\u305b\u3093\u3002</p> Main.ino<pre><code>#include \"Motor.hpp\"\n#include \"Motor.hpp\"\n</code></pre> Motor.hpp<pre><code>#pragma once\n\nclass Motor\n{\n};\n</code></pre> \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u5c55\u958b\u5f8c\u306eMain.ino<pre><code>class Motor\n{\n};\n\n// \u30b9\u30eb\u30fc\n</code></pre> <p>\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002C \u8a00\u8a9e\u3067\u306f\u4e3b\u6d41\u3067\u3059\u304c\u3001C++ \u3067\u3082\u4f7f\u3044\u307e\u3059\u3002<code>#pragma once</code> \u304c\u6a19\u6e96\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3067\u3059(\u4e8b\u5b9f\u4e0a\u306e\u6a19\u6e96\u3068\u3044\u3046\u3084\u3064\u3067\u3059)\u3002</p> Motor.hpp<pre><code>#ifndef MOTOR_HPP\n#define MOTOR_HPP\n\nclass Motor\n{\n};\n\n#endif\n</code></pre> \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u5c55\u958b\u5f8c\u306eMain.ino<pre><code>#ifndef MOTOR_HPP\n#define MOTOR_HPP\n\nclass Motor\n{\n};\n\n#endif\n\n#ifndef MOTOR_HPP\n// MOTOR_HPP \u306f\u65e2\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u4ee5\u964d\u306f\u30b9\u30eb\u30fc\n#define MOTOR_HPP\n\nclass Motor\n{\n};\n\n#endif\n</code></pre> \u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\u5f8c\u306eMain.ino<pre><code>class Motor\n{\n};\n</code></pre>"},{"location":"practice/file_splitting/#_3","title":"\ud83c\udf1f \u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2\u306e\u30d3\u30eb\u30c9\u9806\u5e8f","text":"<p>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306f\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3078\u3068\u5909\u63db\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u5de5\u7a0b\u306f\u30d3\u30eb\u30c9\u3068\u3082\u547c\u3070\u308c\u307e\u3059\u3002</p> <pre><code>graph LR\n    source(Main.cpp) --\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9--&gt; pre\n    pre(Main.i) --\u30b3\u30f3\u30d1\u30a4\u30eb--&gt; object\n    object[[Main.o]] --\u30ea\u30f3\u30af--&gt; exe\n    lib[[Library.o]] --\u30ea\u30f3\u30af--&gt; exe\n    exe[(\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb)]</code></pre> <p>\u62e1\u5f35\u5b50</p> <ul> <li><code>.cpp</code> : \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb</li> <li><code>.hpp</code> : \u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb</li> <li><code>.i</code> : \u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb (\u307b\u307c\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb)</li> <li><code>.o</code> : \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb</li> <li><code>.exe</code> : \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb (Windows)</li> </ul>"},{"location":"practice/file_splitting/#_4","title":"\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u5834\u5408","text":"<p>\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\u306f\u305f\u3060\u306e\u7d50\u5408\u306a\u306e\u3067\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p> <pre><code>graph LR\n    source(Main.cpp) --\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9--&gt; pre\n    header[Motor.hpp] --\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9--&gt; pre\n    pre(Main.i) --\u30b3\u30f3\u30d1\u30a4\u30eb--&gt; object\n    object[[Main.o]] --\u30ea\u30f3\u30af--&gt; exe\n    lib[[Library.o]] --\u30ea\u30f3\u30af--&gt; exe\n    exe[(\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb)]</code></pre>"},{"location":"practice/file_splitting/#_5","title":"\u8907\u6570\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u5834\u5408","text":"<p>\u3053\u306e\u5834\u5408\u3069\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\u6b21\u306e\u3088\u3046\u306b\u7d50\u5408\u3055\u308c\u3066\u304b\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305d\u3046\u3067\u3059\u3088\u306d\u3002</p> <pre><code>graph LR\n    source1(Main.cpp) --\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9--&gt; pre\n    source2(Motor.cpp) --\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9--&gt; pre\n    pre(Main.i) --\u30b3\u30f3\u30d1\u30a4\u30eb--&gt; object\n    object[[Main.o]] --\u30ea\u30f3\u30af--&gt; exe\n    lib[[Library.o]] --\u30ea\u30f3\u30af--&gt; exe\n    exe[(\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb)]</code></pre> <p>\u5b9f\u306f\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306f\u5225\u3005\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3001\u6700\u5f8c\u306b\u7d50\u5408\u3055\u308c\u307e\u3059\u3002</p> <pre><code>graph LR\n    source1(Main.cpp) --\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9--&gt; pre1\n    source2(Motor.cpp) --\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9--&gt; pre2\n    pre1(Main.i) --\u30b3\u30f3\u30d1\u30a4\u30eb--&gt; object1\n    pre2(Motor.i) --\u30b3\u30f3\u30d1\u30a4\u30eb--&gt; object2\n    object1[[Main.o]] --\u30ea\u30f3\u30af--&gt; exe\n    object2[[Motor.o]] --\u30ea\u30f3\u30af--&gt; exe\n    lib[[Library.o]] --\u30ea\u30f3\u30af--&gt; exe\n    exe[(\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb)]</code></pre> <p>\u3053\u306e\u3088\u3046\u306a\u9806\u5e8f\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u5909\u66f4\u3057\u3066\u3044\u306a\u3044\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u518d\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u3001\u30d3\u30eb\u30c9\u6642\u9593\u306e\u77ed\u7e2e\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u3002</p> <p>\u3057\u304b\u3057\u3053\u308c\u306b\u8d77\u56e0\u3057\u305f\u8907\u96d1\u602a\u5947\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059 \ud83e\udd22\ud83e\udd22</p>"},{"location":"practice/file_splitting/#_6","title":"\ud83c\udf1f \u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u7406\u7531","text":"<p>\u5b9f\u306f\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002</p> <p>\u4e00\u65e6 Motor \u30af\u30e9\u30b9\u306f\u5fd8\u308c\u3066\u3001\u95a2\u6570\u3092\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u5b9a\u7fa9\u3057\u3001\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305f\u3068\u3057\u307e\u3059\u3002\u3057\u3063\u304b\u308a\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u3082\u3057\u3066\u307e\u3059\u3002</p> <p>\u5b9f\u306f\u30a8\u30e9\u30fc\u304c\u96a0\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u5834\u5408\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u305b\u3093\u3002</p> Main.ino<pre><code>#include \"Division.hpp\"\n\nint main()\n{\n    double result = divide(10, 2);\n}\n</code></pre> Division.hpp<pre><code>#pragma once\n\ndouble divide(double a, double b)\n{\n    return a / b;\n}\n</code></pre> <p>\u8907\u6570\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3068\u3001\u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002</p> Main.ino<pre><code>#include \"Division.hpp\"\n// \u4ee5\u4e0b\u7565\n</code></pre> F.cpp<pre><code>#include \"Division.hpp\"\n// \u4ee5\u4e0b\u7565\n</code></pre> <pre><code>1&gt;\u30bd\u30fc\u30b9.obj : error LNK2005: \"double __cdecl divide(double,double)\" (?divide@@YANNN@Z) \u306f\u65e2\u306b Main.obj \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n1&gt;C:\\Users\\xxxxxxxxxx\\Main.exe : fatal error LNK1169: 1 \u3064\u4ee5\u4e0a\u306e\u8907\u6570\u56de\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30b7\u30f3\u30dc\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\n1&gt;\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \"Main.vcxproj\" \u306e\u30d3\u30eb\u30c9\u304c\u7d42\u4e86\u3057\u307e\u3057\u305f -- \u5931\u6557\u3002\n</code></pre>"},{"location":"practice/file_splitting/#_7","title":"\u30a8\u30e9\u30fc\u539f\u56e0","text":"<p>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306f\u5225\u3005\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u305f\u3081\u3001\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u3092\u7a81\u7834\u3057\u3066\u95a2\u6570\u304c\u8907\u6570\u5b9a\u7fa9\u3055\u308c\u3001\u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002</p> <pre><code>graph LR\n    source1(Main.cpp) --\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9--&gt; pre1\n    source2(F.cpp) --\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9--&gt; pre2\n    pre1(Main.i) --\u30b3\u30f3\u30d1\u30a4\u30eb--&gt; object1\n    pre2(F.i) --\u30b3\u30f3\u30d1\u30a4\u30eb--&gt; object2\n    object1[[Main.o]] --\u30ea\u30f3\u30af--&gt; exe\n    object2[[F.o]] --\u30ea\u30f3\u30af--&gt; exe\n    lib[[Library.o]] --\u30ea\u30f3\u30af--&gt; exe\n    exe[(\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb)]</code></pre> <p>\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> Main.i<pre><code>double divide(double a, double b)\n{\n    return a / b;\n}\n\n// \u4ee5\u4e0b\u7565\n</code></pre> F.i<pre><code>double divide(double a, double b)\n{\n    return a / b;\n}\n\n// \u4ee5\u4e0b\u7565\n</code></pre> <p>\u30b3\u30f3\u30d1\u30a4\u30eb\u5f8c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\u5b9f\u969b\u306f\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3067\u3059\u3002</p> Main.o<pre><code>divide(double, double):\n    ret a / b\n</code></pre> F.o<pre><code>divide(double, double):\n    ret a / b\n</code></pre> <p>\u30ea\u30f3\u30af\u306e\u969b\u3001\u540c\u3058\u540d\u524d\u306e\u95a2\u6570\u304c\u8907\u6570\u3042\u308b\u305f\u3081\u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002</p>"},{"location":"practice/file_splitting/#_8","title":"\u5bfe\u5fdc\u7b56 / \u30a4\u30f3\u30e9\u30a4\u30f3\u5316","text":"<p>\u30a4\u30f3\u30e9\u30a4\u30f3\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u3001\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3082\u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u305b\u3093\u3002</p> <p>\u30a4\u30f3\u30e9\u30a4\u30f3\u95a2\u6570\u306f\u8907\u6570\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3067\u767b\u5834\u3057\u3066\u3082\u95a2\u6570\u306e\u5b9f\u4f53\u306f\u4e00\u3064\u3068\u3067\u304d\u308b\u305f\u3081\u3067\u3059\u3002</p> Division.hpp<pre><code>#pragma once\n\ninline double divide(double a, double b)\n{\n    return a / b;\n}\n</code></pre>"},{"location":"practice/file_splitting/#_9","title":"\u5bfe\u5fdc\u7b56 / \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u5b9a\u7fa9","text":"<p>\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u6570\u306e\u5ba3\u8a00\u3060\u3051\u66f8\u3044\u3066\u304a\u304d\u3001\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u6570\u306e\u5b9a\u7fa9\u3092\u66f8\u304f\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002</p> <p>\u3053\u3061\u3089\u304c\u4e00\u822c\u7684\u3067\u3059\u304c\u3001\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u306e\u65b9\u304c\u697d\u3067\u3059\u3002C \u8a00\u8a9e\u306e\u5834\u5408\u306f\u5fc5\u305a\u3053\u306e\u65b9\u6cd5\u3092\u4f7f\u3044\u307e\u3059\u3002</p> Division.hpp<pre><code>#pragma once\n\ndouble divide(double a, double b);\n</code></pre> Division.cpp<pre><code>#include \"Division.hpp\"\n\ndouble divide(double a, double b)\n{\n    return a / b;\n}\n</code></pre>"},{"location":"practice/file_splitting/#_10","title":"\ud83c\udf1f \u30af\u30e9\u30b9\u306f\uff1f","text":"<p>\u30af\u30e9\u30b9\u306f\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u5b9a\u7fa9\u3057\u3066\u3082\u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u305b\u3093\u3002\u5b9f\u306f\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u6697\u9ed9\u306e\u5185\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002</p>"},{"location":"practice/file_splitting/#_11","title":"\ud83c\udf1f \u307e\u3068\u3081","text":"<ul> <li>\u30af\u30e9\u30b9\u306f\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u5206\u5272\u3059\u308b</li> <li>\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u3092\u4f7f\u3046</li> <li>\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u969b\u306f\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u3059\u308b</li> <li>\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u3055\u308c\u308b\u305f\u3081\u4f55\u3082\u3057\u306a\u304f\u3066 OK</li> </ul>"},{"location":"practice/git/","title":"Git / GitHub","text":""},{"location":"practice/git/#git","title":"Git \u306b\u3064\u3044\u3066","text":"<p>https://git-scm.com/</p> <p>\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30c4\u30fc\u30eb</p> <p>\u5909\u66f4\u5c65\u6b74\u3092\u7ba1\u7406\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u30df\u30b9\u3063\u305f\u969b\u306b\u623b\u3057\u305f\u308a\u3067\u304d\u307e\u3059 \ud83d\udc4d</p> <p>\u8907\u6570\u4eba\u3067\u958b\u767a\u3067\u304d\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u308b\u3002</p> <p>\u3042\u308a\u304c\u3061\u306a\u52d8\u9055\u3044</p> <p>\u2716 \u5909\u66f4\u3092\u76e3\u8996\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u304c\u5e38\u306b\u52d5\u3044\u3066\u3044\u3066\u3001\u5909\u66f4\u3092\u8a18\u9332\u3057\u3066\u3044\u308b</p> <p>\u3007 \u5909\u66f4\u3092\u767b\u9332\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u5909\u66f4\u304c\u8a18\u9332\u3055\u308c\u308b</p>"},{"location":"practice/git/#github","title":"GitHub \u306b\u3064\u3044\u3066","text":"<p>https://github.com</p> <p>Git + \u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9</p> <p>\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u306f\u5927\u4f53 GitHub \u3067\u516c\u958b\u3055\u308c\u3066\u307e\u3059\u3002</p> <p>\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306f\u5927\u62b5\u4f7f\u3063\u3066\u304a\u308a\u3001\u4f01\u696d\u3082\u4f7f\u3063\u3066\u307e\u3059\u3002\u4fbf\u5229\u904e\u304e\u3066\u304a\u91d1\u3092\u6255\u3044\u305f\u304f\u306a\u308b\u30ec\u30d9\u30eb\u3002</p>"},{"location":"practice/git/#_1","title":"\u30ec\u30dd\u30b8\u30c8\u30ea","text":"<p>\u5909\u66f4\u5c65\u6b74\u7b49\u3092\u683c\u7d0d\u3057\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9</p> <p>\u5b9f\u4f53\u306f\u5358\u306a\u308b\u30d5\u30a9\u30eb\u30c0 (<code>.git</code>\u30d5\u30a9\u30eb\u30c0\u3092\u542b\u3080)</p> <p>\u898f\u6a21\u611f</p> <p>1 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3064\u304d 1 \u30ec\u30dd\u30b8\u30c8\u30ea</p> <p>\u4f8b) Robocon2024-Bteam, Harurobo2024-Ateam, Homepage, ...</p>"},{"location":"practice/git/#_2","title":"\u3069\u3046\u3084\u3063\u3066\u4f7f\u3046\uff1f","text":"<p>\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u308a\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u308a\u3057\u307e\u3059\u3002</p> <p>VSCode \u306e\u62e1\u5f35\u6a5f\u80fd\u3092\u4f7f\u3046\u3068\u304b\u306a\u308a\u7c21\u5358\u306b\u6271\u3048\u307e\u3059\u304c\u3001Git \u306e\u5185\u90e8\u52d5\u4f5c\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3082\u307e\u305a\u306f\u30b3\u30de\u30f3\u30c9\u304b\u3089\u5165\u308a\u307e\u3059\u3002</p> <p>\u6700\u4f4e\u9650\u899a\u3048\u308b\u30b3\u30de\u30f3\u30c9</p> <ul> <li>git clone</li> <li>git add</li> <li>git commit</li> <li>git push</li> <li>git pull</li> </ul>"},{"location":"practice/git/#github_1","title":"\u65e9\u901f GitHub \u304b\u3089\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 (\u30af\u30ed\u30fc\u30f3)","text":"<p>URL \u3092\u57fa\u306b\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3059\u3002</p> <pre><code>git clone &lt;URL&gt;\n</code></pre> <p></p>"},{"location":"practice/git/#_3","title":"\u5909\u66f4\u3092\u767b\u9332 (\u30b3\u30df\u30c3\u30c8)","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5909\u66f4\u3084\u8ffd\u52a0\u304c\u7d42\u308f\u3063\u305f\u3089\u30b3\u30df\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30b3\u30df\u30c3\u30c8\u3068\u306f\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002</p> <p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7834\u58ca\u3057\u305f\u5834\u5408\u3067\u3082\u3001\u30b3\u30df\u30c3\u30c8\u304c\u3042\u308c\u3070\u305d\u306e\u6642\u306e\u72b6\u614b\u306b\u5fa9\u5143\u3067\u304d\u307e\u3059\u3002</p> <p>\u30b3\u30de\u30f3\u30c9\u306f\u30af\u30ed\u30fc\u30f3\u3057\u305f\u30ec\u30dd\u30b8\u30c8\u30ea\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>git add .\ngit commit -m \"&lt;\u30b3\u30df\u30c3\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8&gt;\"\n</code></pre> <p>git add \u3068\u306f</p> <p>\u5909\u66f4\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u3046\u3061\u3001\u3069\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30df\u30c3\u30c8\u3059\u308b\u304b\u9078\u629e\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002</p> <p><code>.</code> \u306f\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u8868\u3059\u306e\u3067\u3001<code>git add .</code> \u306f\u5168\u3066\u306e\u5909\u66f4\u3092\u30b3\u30df\u30c3\u30c8\u5bfe\u8c61\u306b\u3059\u308b\u3068\u3044\u3046\u610f\u5473\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u5927\u91cf\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u305f\u5834\u5408\u3001\u307e\u3068\u3081\u3066\u30b3\u30df\u30c3\u30c8\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u3069\u306e\u3088\u3046\u306a\u5909\u66f4\u3092\u3057\u305f\u306e\u304b\u5206\u304b\u308a\u306b\u304f\u304f\u306a\u308b\u306e\u3067\u3001\u5206\u3051\u3066\u30b3\u30df\u30c3\u30c8\u3057\u307e\u3059\u3002</p>"},{"location":"practice/git/#_4","title":"\u5909\u66f4\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9 (\u30d7\u30c3\u30b7\u30e5)","text":"<p>\u6b63\u5e38\u306b\u30d7\u30c3\u30b7\u30e5\u3067\u304d\u3066\u3044\u308b\u5834\u5408\u3001GitHub \u3092\u8997\u304f\u3068\u5909\u66f4\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p> <pre><code>git push\n</code></pre>"},{"location":"practice/git/#_5","title":"\u5909\u66f4\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 (\u30d7\u30eb)","text":"<p>\u4ed6\u306e\u4eba\u304c GitHub \u306b\u30d7\u30c3\u30b7\u30e5\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u5909\u66f4\u3092\u53d6\u308a\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>push \u3068\u306f\u5bfe\u306e\u95a2\u4fc2\u306b\u3042\u308a\u307e\u3059\u3002</p> <pre><code>git pull\n</code></pre> <p>\u30af\u30ed\u30fc\u30f3\u3068\u306e\u9055\u3044</p> <p>clone: \u7121\u306e\u72b6\u614b\u304b\u3089\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9</p> <p>pull: \u65e2\u306b\u3042\u308b\u30ec\u30dd\u30b8\u30c8\u30ea\u306b\u5909\u66f4\u3092\u53d6\u308a\u8fbc\u3080</p>"},{"location":"practice/git/#git_1","title":"\u5b9f\u969b\u306e Git \u306e\u4f7f\u308f\u308c\u65b9","text":"<ol> <li>\u30ec\u30dd\u30b8\u30c8\u30ea\u4f5c\u6210\u3001\u5236\u5fa1\u73ed\u5168\u54e1\u3067\u30af\u30ed\u30fc\u30f3</li> <li>\u90e8\u6d3b\u59cb\u307e\u308a\uff1a\u3068\u308a\u3042\u3048\u305a\u30d7\u30eb</li> <li>\u90e8\u6d3b\u4e2d\uff1a\u958b\u767a \u2192 \u30b3\u30df\u30c3\u30c8 \u2192 \u958b\u767a \u2192 \u30b3\u30df\u30c3\u30c8 \u2192 ...</li> <li>\u90e8\u6d3b\u7d42\u4e86\uff1a\u30d7\u30c3\u30b7\u30e5</li> </ol> <p>\u4ed6\u306e\u5236\u5fa1\u73ed\u306e\u958b\u767a\u3057\u305f\u30b3\u30fc\u30c9\u3092\u3059\u3050\u53cd\u6620\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u3082\u3089\u3046\u3002</p>"},{"location":"practice/git/#_6","title":"\u5909\u66f4\u304c\u885d\u7a81\u3057\u305f\u5834\u5408\u3069\u3046\u3059\u308b\u304b (\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u89e3\u6d88)","text":"<p>Git \u306f\u884c\u5358\u4f4d\u3067\u5909\u66f4\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u540c\u3058\u884c\u3092\u8907\u6570\u4eba\u304c\u7de8\u96c6\u3057\u306a\u3051\u308c\u3070\u4e0a\u624b\u304f\u5909\u66f4\u3092\u5408\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002</p> <p>\u3057\u304b\u3057\u540c\u3058\u884c\u3092\u7de8\u96c6\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u30d7\u30eb\u306e\u969b\u306b\u30b3\u30f3\u30d5\u30ea\u30af\u30c8(\u5909\u66f4\u306e\u885d\u7a81)\u304c\u767a\u751f\u3057\u307e\u3059\u3002</p> <pre><code>git pull\n\nAuto-merging main.cpp\nCONFLICT (content): Merge conflict in main.cpp\nAutomatic merge failed; fix conflicts and then commit the result.\n</code></pre> <p>\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u304c\u767a\u751f\u3057\u305f\u7b87\u6240\u306b\u885d\u7a81\u3092\u77e5\u3089\u305b\u308b\u6587\u5b57\u5217\u304c\u66f8\u304d\u8fbc\u307e\u308c\u307e\u3059\u3002</p> <pre><code>&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n#include &lt;iostream&gt; b\n=======\n#include &lt;iostream&gt;a\n&gt;&gt;&gt;&gt;&gt;&gt; 0ee56ac7244877a690d9df3b8ff51be7fecb6b94\n\nint main()\n{\n}\n</code></pre> <p>\u6b8b\u3057\u305f\u3044\u65b9\u3092\u6b8b\u3057\u3001\u624b\u52d5\u3067\u6587\u5b57\u5217\u3092\u524a\u9664\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt; b\n\nint main()\n{\n}\n</code></pre> <p>\u3082\u3046\u4e00\u5ea6\u30b3\u30df\u30c3\u30c8\u3057\u30d7\u30c3\u30b7\u30e5\u3059\u308c\u3070\u89e3\u6d88\u3067\u3059\u3002</p> <pre><code>git add .\ngit commit -m \"\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u89e3\u6d88\"\ngit push\n</code></pre>"},{"location":"practice/motor/","title":"\u30e2\u30fc\u30bf\u30fc\u56de\u3057\u307e\u3057\u3087","text":""},{"location":"practice/motor/#arduino-ide","title":"Arduino IDE \u306b\u3064\u3044\u3066","text":"<p>\u30de\u30a4\u30b3\u30f3\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u767a\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u3067\u3059\u3002https://www.arduino.cc/en/software</p> <p>\u4e3b\u306b Arduino \u30de\u30a4\u30b3\u30f3\u306e\u958b\u767a\u306b\u7528\u3044\u307e\u3059\u304c\u3001Arduino \u4ee5\u5916\u306e\u30de\u30a4\u30b3\u30f3\u3082\u3053\u306e\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u3067\u958b\u767a\u3067\u304d\u307e\u3059\u3002\u2193 Raspberry Pi Pico \u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u69d8\u5b50</p> <p></p>"},{"location":"practice/motor/#_2","title":"\ud83c\udf1f \u30d5\u30a1\u30a4\u30eb\u69cb\u9020","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30b9\u30b1\u30c3\u30c1\u3068\u547c\u3073\u3001<code>.ino</code> \u3068\u3044\u3046\u62e1\u5f35\u5b50\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002<code>.ino</code> \u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3068 Arduino IDE \u304c\u8d77\u52d5\u3057\u307e\u3059\u3002</p> <p>\u30b9\u30b1\u30c3\u30c1\u3068\u540c\u3058\u540d\u524d\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002</p> <pre><code>\u30b9\u30b1\u30c3\u30c1\u540d/\n    \u30b9\u30b1\u30c3\u30c1\u540d.ino\n</code></pre> <p>\u30b9\u30b1\u30c3\u30c1\u540d\u3068\u30d5\u30a9\u30eb\u30c0\u540d\u306f\u540c\u3058\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u30d5\u30a9\u30eb\u30c0\u306b\u5165\u3063\u3066\u3044\u306a\u3044\u3068\u958b\u3051\u307e\u305b\u3093\u3002</p>"},{"location":"practice/motor/#_3","title":"\ud83c\udf1f \u6700\u77ed\u30b3\u30fc\u30c9","text":"<p>Arduino \u3067\u6700\u77ed\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002C++ \u3067\u8a18\u8ff0\u3057\u3001setup \u95a2\u6570\u3068 loop \u95a2\u6570\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <pre><code>void setup()\n{\n}\n\nvoid loop()\n{\n}\n</code></pre> <p>setup \u95a2\u6570\uff1a\u30de\u30a4\u30b3\u30f3\u304c\u8d77\u52d5\u3057\u305f\u3068\u304d\u306b\u4e00\u5ea6\u3060\u3051\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u521d\u671f\u5316\u51e6\u7406\u306f\u3053\u3053\u306b\u66f8\u304d\u307e\u3059\u3002</p> <p>loop \u95a2\u6570\uff1a\u30de\u30a4\u30b3\u30f3\u304c\u8d77\u52d5\u3057\u3066\u304b\u3089\u7d42\u4e86\u3059\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3057\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u306f\u3053\u3053\u306b\u66f8\u304d\u307e\u3059\u3002</p> <p>\u203b\u30de\u30a4\u30b3\u30f3\u306f\u96fb\u6e90\u3092\u5165\u308c\u308b\u3068\u5373\u8d77\u52d5\u3057\u307e\u3059\u3002</p> <p>main \u95a2\u6570\u306f\uff1f</p> <p>C++ \u306f main \u95a2\u6570\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8d77\u70b9\u3067\u3059\u304c\u3001Arduino\u74b0\u5883 \u3067\u306f main \u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u305b\u3093\u3002main \u95a2\u6570\u306f Arduino \u306e\u5185\u90e8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> \u96a0\u853d\u3055\u308c\u305f main \u95a2\u6570<pre><code>int main()\n{\n    setup();\n\n    for (;;)\n    {\n        loop();\n    }\n}\n</code></pre> <p>\u5b9f\u88c5 : https://github.com/arduino/ArduinoCore-avr/blob/master/cores/arduino/main.cpp</p>"},{"location":"practice/motor/#_4","title":"\ud83c\udf1f \u95a2\u6570\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8abf\u3079\u5148","text":"<p>Arduino \u65e5\u672c\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 http://www.musashinodenpa.com/arduino/ref/</p> <p>Arduino Reference (\u516c\u5f0f) https://docs.arduino.cc/language-reference/</p> <p>garretlab (\u500b\u4eba\u30b5\u30a4\u30c8) https://garretlab.web.fc2.com/arduino.cc/www/reference/ja/language/</p>"},{"location":"practice/motor/#_5","title":"\u30d4\u30f3\u306e\u5236\u5fa1","text":"<p>\u30de\u30a4\u30b3\u30f3\u306e\u5404\u30d4\u30f3\u304b\u3089\u306f\u96fb\u5727\u3092\u51fa\u529b\u3057\u305f\u308a\u3001\u96fb\u5727\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"practice/motor/#_6","title":"\ud83c\udf1f \u30c7\u30b8\u30bf\u30eb\u51fa\u529b","text":"<p><code>digitalWrite</code> \u95a2\u6570\u3067 HIGH \u307e\u305f\u306f LOW \u3092\u3001\u6307\u5b9a\u3057\u305f\u30d4\u30f3\u306b\u51fa\u529b\u3067\u304d\u307e\u3059\u3002</p> <p>\u30de\u30a4\u30b3\u30f3\u306b\u3088\u308a\u307e\u3059\u304c\u3001HIGH \u306f 3.3V \u307e\u305f\u306f 5V\u3001LOW \u306f 0V \u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002</p> \u30d4\u30f3\u306b\u96fb\u5727\u3092HIGH\u306b<pre><code>digitalWrite(\u51fa\u529b\u3057\u305f\u3044\u30d4\u30f3, HIGH);\n</code></pre> \u30d4\u30f3\u306e\u96fb\u5727\u3092LOW\u306b<pre><code>digitalWrite(\u51fa\u529b\u3057\u305f\u3044\u30d4\u30f3, LOW);\n</code></pre> <p></p> <p>25 \u756a\u30d4\u30f3\u306f Raspberry Pi Pico \u306b\u8868\u9762\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b LED \u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u3053\u306e\u30d4\u30f3\u306e\u96fb\u5727\u3092\u5909\u5316\u3055\u305b\u3066 LED \u3092\u70b9\u706f\u3055\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <pre><code>void setup()\n{\n    pinMode(25, OUTPUT); // 25\u756a\u30d4\u30f3\u3092\u51fa\u529b\u306b\u8a2d\u5b9a\n}\n\nvoid loop()\n{\n    digitalWrite(25, HIGH); // 25\u756a\u30d4\u30f3\u306b\u96fb\u5727\u3092\u51fa\u529b\n    delay(1000);            // 1\u79d2\u5f85\u3064\n    digitalWrite(25, LOW);  // 25\u756a\u30d4\u30f3\u306e\u96fb\u5727\u3092\u5207\u308b\n    delay(1000);            // 1\u79d2\u5f85\u3064\n}\n</code></pre> <p>delay \u95a2\u6570\u306f\u6307\u5b9a\u3057\u305f\u6642\u9593\u3060\u3051\u51e6\u7406\u3092\u505c\u6b62\u3057\u307e\u3059\u3002\u5f15\u6570\u306f\u30df\u30ea\u79d2\u3067\u3059\u3002</p> <pre><code>delay(1000);  // 1\u79d2\u5f85\u3064\n</code></pre>"},{"location":"practice/motor/#_7","title":"\ud83c\udf1f \u30a2\u30ca\u30ed\u30b0\u51fa\u529b","text":"<p><code>analogWrite</code> \u95a2\u6570\u3067\u6307\u5b9a\u3057\u305f\u30d4\u30f3\u306b PWM \u4fe1\u53f7\u3092\u51fa\u529b\u3067\u304d\u307e\u3059\u3002</p> <p>PWM \u306f HIGH, LOW \u3092\u9ad8\u901f\u3067\u5207\u308a\u66ff\u3048\u308b\u4e8b\u3067\u64ec\u4f3c\u7684\u306b\u30a2\u30ca\u30ed\u30b0\u51fa\u529b (\u597d\u304d\u306a\u96fb\u5727) \u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002</p> <pre><code>analogWrite(\u51fa\u529b\u3057\u305f\u3044\u30d4\u30f3, \u51fa\u529b\u5024);\n</code></pre>"},{"location":"practice/motor/#_8","title":"\ud83c\udf1f \u30e2\u30fc\u30bf\u30fc\u3092\u56de\u3059\u56de\u8def\u306e\u69cb\u6210","text":"<p>\u30de\u30a4\u30b3\u30f3\u306e\u30d4\u30f3\u306f\u51fa\u529b\u96fb\u6d41\u3001\u96fb\u5727\u7684\u306b\u30e2\u30fc\u30bf\u30fc\u3092\u76f4\u63a5\u99c6\u52d5\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u3092\u4ecb\u3057\u3066\u30e2\u30fc\u30bf\u30fc\u3092\u99c6\u52d5\u3057\u307e\u3059\u3002</p> <p>\u2193 \u30e2\u30fc\u30bf\u30fc\u3092\u52d5\u304b\u3059\u969b\u306e\u69cb\u6210\u56f3</p> <p></p> <p></p>"},{"location":"practice/motor/#_9","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30e2\u30fc\u30bf\u30fc\u3092\u56de\u3059","text":""},{"location":"practice/motor/#_10","title":"\ud83c\udf1f \u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u3068\u30de\u30a4\u30b3\u30f3\u306e\u63a5\u7d9a","text":"<p>\u30e2\u30fc\u30bf\u30fc\u3092\u56de\u3059\u969b\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306f\u3001\u56de\u8ee2\u65b9\u5411\u3068\u51fa\u529b\u5024\u3067\u3059\u3002\u3053\u306e\u60c5\u5831\u3092\u30de\u30a4\u30b3\u30f3\u304b\u3089\u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u306b\u9001\u308a\u307e\u3059\u3002</p> <p>\u4e00\u822c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b A, B \u7dda\u306b\u30c7\u30a3\u30b8\u30bf\u30eb\u96fb\u5727\u3067\u65b9\u5411\u3092\u3001P \u7dda\u306b\u30a2\u30ca\u30ed\u30b0\u96fb\u5727\u3067\u51fa\u529b\u5024\u3092\u9001\u308a\u307e\u3059\u3002</p> <p></p> <p>A, B \u7dda\u306e\u96fb\u5727\u5024\u3068\u30e2\u30fc\u30bf\u30fc\u306e\u56de\u8ee2\u65b9\u5411\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002</p> A B \u56de\u8ee2\u65b9\u5411 HIGH LOW \u6b63\u8ee2 LOW HIGH \u9006\u8ee2 HIGH HIGH \u30d6\u30ec\u30fc\u30ad <p>\u4f8b\u3048\u3070\u9006\u8ee2\u3067 50% \u306e\u51fa\u529b\u5024\u3092\u9001\u308b\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\u30d4\u30f3\u756a\u53f7\u306f\u5b9a\u6570\u3067\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u5909\u66f4\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002</p> <pre><code>const int pinA = 0; // A \u7dda\u306e\u30d4\u30f3\u756a\u53f7\nconst int pinB = 2; // B \u7dda\u306e\u30d4\u30f3\u756a\u53f7\nconst int pinP = 1; // P \u7dda\u306e\u30d4\u30f3\u756a\u53f7\n\nvoid setup()\n{\n    pinMode(pinA, OUTPUT);\n    pinMode(pinB, OUTPUT);\n}\n\nvoid loop()\n{\n    digitalWrite(pinA, LOW);\n    digitalWrite(pinB, HIGH);\n    analogWrite(pinP, 128);\n}\n</code></pre>"},{"location":"practice/motor/#_11","title":"\ud83c\udf1f \u51fa\u529b\u5024\u306e\u6307\u5b9a\u3092\u81ea\u52d5\u5316\u3059\u308b","text":"<p>HIGH, LOW \u7b49\u3092\u76f4\u63a5\u8a18\u8ff0\u3059\u308b\u306e\u306f\u308f\u304b\u308a\u306b\u304f\u3044\u305f\u3081\u3001\u5909\u6570\u306e\u6b63\u8ca0\u304b\u3089 HIGH, LOW \u3092\u81ea\u52d5\u3067\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002</p> <pre><code>void loop()\n{\n    int power = -128; // \u51fa\u529b\u5024\n\n    if (power == 0)\n    {\n        digitalWrite(pinA, HIGH);\n        digitalWrite(pinB, HIGH);\n    }\n    else if (power &gt; 0)\n    {\n        digitalWrite(pinA, HIGH);\n        digitalWrite(pinB, LOW);\n    }\n    else\n    {\n        digitalWrite(pinA, LOW);\n        digitalWrite(pinB, HIGH);\n    }\n\n    analogWrite(pinP, abs(power));  // abs \u306f\u7d76\u5bfe\u5024\u3092\u8fd4\u3059\u95a2\u6570\n}\n</code></pre> <p>\u4e09\u9805\u6f14\u7b97\u5b50\u3092\u7528\u3044\u308b\u3068\u77ed\u304f\u66f8\u3051\u307e\u3059\u3002</p> <pre><code>void loop()\n{\n    int power = -128; // \u51fa\u529b\u5024\n\n    digitalWrite(pinA, (power &gt;= 0) ? HIGH : LOW);\n    digitalWrite(pinB, (power &lt;= 0) ? HIGH : LOW);\n    analogWrite(pinP, abs(power));  // abs \u306f\u7d76\u5bfe\u5024\u3092\u8fd4\u3059\u95a2\u6570\n}\n</code></pre> <p>\u4e09\u9805\u6f14\u7b97\u5b50</p> <p>\u4e09\u9805\u6f14\u7b97\u5b50\u306f if \u6587\u306e\u69d8\u306a\u6761\u4ef6\u5206\u5c90\u3092\u4e00\u884c\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>\u6761\u4ef6 ? \u771f\u306e\u5834\u5408\u306e\u5024 : \u507d\u306e\u5834\u5408\u306e\u5024\n</code></pre> <p>\u4f8b\u3048\u3070\u3001\u6700\u5927\u5024\u3092\u6c42\u3081\u305f\u3044\u5834\u5408\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int a = 1;\nint b = 2;\n\nint max = (a &gt; b) ? a : b;  // max \u306b\u306f 2 \u304c\u4ee3\u5165\u3055\u308c\u308b\n</code></pre>"},{"location":"practice/motor/#_12","title":"\ud83c\udf1f \u8907\u6570\u306e\u30e2\u30fc\u30bf\u30fc\u306b\u5bfe\u5fdc\u3055\u305b\u3088\u3046","text":"<p>\u8907\u6570\u306e\u30e2\u30fc\u30bf\u30fc\u3092\u5236\u5fa1\u3059\u308b\u5834\u5408\u540c\u3058\u3088\u3046\u306a\u51e6\u7406\u304c\u4f55\u5ea6\u3082\u767b\u5834\u3059\u308b\u305f\u3081\u3001\u95a2\u6570\u5316\u3057\u3066\u30b9\u30c3\u30ad\u30ea\u3055\u305b\u307e\u3057\u3087\u3046\u3002</p> \u95a2\u6570\u5316\u524d\u95a2\u6570\u5316\u5f8c <pre><code>const int motor1PinA = 0;\nconst int motor1PinB = 2;\nconst int motor1PinP = 1;\n\nconst int motor2PinA = 3;\nconst int motor2PinB = 5;\nconst int motor2PinP = 4;\n\nvoid setup()\n{\n    pinMode(motor1PinA, OUTPUT);\n    pinMode(motor1PinB, OUTPUT);\n\n    pinMode(motor2PinA, OUTPUT);\n    pinMode(motor2PinB, OUTPUT);\n}\n\nvoid loop()\n{\n    int power1 = -128;\n    int power2 = 128;\n\n    digitalWrite(motor1PinA, (power1 &gt;= 0) ? HIGH : LOW);\n    digitalWrite(motor1PinB, (power1 &lt;= 0) ? HIGH : LOW);\n    analogWrite(motor1PinP, abs(power1));\n\n    digitalWrite(motor2PinA, (power2 &gt;= 0) ? HIGH : LOW);\n    digitalWrite(motor2PinB, (power2 &lt;= 0) ? HIGH : LOW);\n    analogWrite(motor2PinP, abs(power2));\n}\n</code></pre> <pre><code>const int motor1PinA = 0;\nconst int motor1PinB = 2;\nconst int motor1PinP = 1;\n\nconst int motor2PinA = 3;\nconst int motor2PinB = 5;\nconst int motor2PinP = 4;\n\nvoid motorBegin(int pinA, int pinB)\n{\n    pinMode(pinA, OUTPUT);\n    pinMode(pinB, OUTPUT);\n}\n\nvoid motorMove(int pinA, int pinB, int pinP, int power)\n{\n    digitalWrite(pinA, (power &gt;= 0) ? HIGH : LOW);\n    digitalWrite(pinB, (power &lt;= 0) ? HIGH : LOW);\n    analogWrite(pinP, abs(power));\n}\n\nvoid setup()\n{\n    motorBegin(motor1PinA, motor1PinB);\n    motorBegin(motor2PinA, motor2PinB);\n}\n\nvoid loop()\n{\n    motorMove(motor1PinA, motor1PinB, motor1PinP, -128);\n    motorMove(motor2PinA, motor2PinB, motor2PinP, 128);\n}\n</code></pre>"},{"location":"practice/motor/#_13","title":"\ud83c\udf1f \u69cb\u9020\u4f53\u3092\u4f7f\u3063\u3066\u5909\u6570\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3055\u305b\u3088\u3046","text":"<p>\u30e2\u30fc\u30bf\u30fc\u3054\u3068\u306b\u5909\u6570\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3055\u305b\u308b\u3053\u3068\u3067\u5909\u6570\u306e\u7ba1\u7406\u304c\u697d\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u5909\u6570\u540d\u3082\u3059\u3063\u304d\u308a\u3057\u3066\u3068\u3066\u3082\u898b\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002</p> \u69cb\u9020\u4f53\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408<pre><code>const int motor1PinA = 0;\nconst int motor1PinB = 2;\nconst int motor1PinP = 1;\n\nconst int motor2PinA = 3;\nconst int motor2PinB = 5;\nconst int motor2PinP = 4;\n\nconst int motor3PinA = 6;\nconst int motor3PinB = 8;\nconst int motor3PinP = 7;\n</code></pre> \u69cb\u9020\u4f53\u3092\u4f7f\u3063\u305f\u5834\u5408<pre><code>struct Motor\n{\n    int pinA;\n    int pinB;\n    int pinP;\n};\n\nMotor motor1{ 0, 2, 1 };\nMotor motor2{ 3, 5, 4 };\nMotor motor3{ 6, 8, 7 };\n</code></pre> <p>\u69cb\u9020\u4f53\u3092\u95a2\u6570\u306b\u6e21\u305b\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002</p> <p>\u69cb\u9020\u4f53\u3092\u95a2\u6570\u306b\u6e21\u3059</p> <p>C++ \u3067\u306f\u5f15\u6570\u306b\u6e21\u3055\u308c\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3059\u3002\u7d44\u307f\u8fbc\u307f\u578b (int, float \u7b49) \u306f\u30b3\u30d4\u30fc\u3055\u308c\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u69cb\u9020\u4f53\u306f\u5927\u304d\u306a\u30c7\u30fc\u30bf\u3092\u6301\u3064\u3053\u3068\u304c\u3042\u308b\u305f\u3081\u51e6\u7406\u901f\u5ea6\u306b\u5f71\u97ff\u3057\u307e\u3059\u3002</p> <p>\u305d\u3053\u3067\u53c2\u7167\u6e21\u3057\u3092\u7528\u3044\u307e\u3059\u3002\u666e\u901a\u306e\u53c2\u7167\u3092\u4f7f\u3046\u3068\u547c\u3073\u51fa\u3057\u5143\u306e\u5909\u6570\u306e\u5024\u3092\u5909\u66f4\u3067\u304d\u3066\u3057\u307e\u3046\u305f\u3081\u3001 const \u3092\u4ed8\u3051\u3066\u5909\u66f4\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> \u30b3\u30d4\u30fc\u6e21\u3057<pre><code>void motorBegin(Motor motor)\n{\n    pinMode(motor.pinA, OUTPUT);\n    pinMode(motor.pinB, OUTPUT);\n}\n</code></pre> \u53c2\u7167\u6e21\u3057<pre><code>void motorBegin(const Motor&amp; motor)\n{\n    pinMode(motor.pinA, OUTPUT);\n    pinMode(motor.pinB, OUTPUT);\n}\n</code></pre> <pre><code>struct Motor\n{\n    int pinA;\n    int pinB;\n    int pinP;\n};\n\nvoid motorBegin(const Motor&amp; motor)\n{\n    pinMode(motor.pinA, OUTPUT);\n    pinMode(motor.pinB, OUTPUT);\n}\n\nvoid motorMove(const Motor&amp; motor, int power)\n{\n    digitalWrite(motor.pinA, (power &gt;= 0) ? HIGH : LOW);\n    digitalWrite(motor.pinB, (power &lt;= 0) ? HIGH : LOW);\n    analogWrite(motor.pinP, abs(power));\n}\n\nMotor motor1{ 0, 2, 1 };\nMotor motor2{ 3, 5, 4 };\n\nvoid setup()\n{\n    motorBegin(motor1);\n    motorBegin(motor2);\n}\n\nvoid loop()\n{\n    motorMove(motor1, -128);\n    motorMove(motor2, 128);\n}\n</code></pre>"},{"location":"practice/motor/#_14","title":"\ud83c\udf1f \u69cb\u9020\u4f53\u3068\u95a2\u6570\u304b\u3089\u30af\u30e9\u30b9\u3078","text":"<p>\u69cb\u9020\u4f53\u3068\u95a2\u6570\u3092\u5408\u4f53\u3055\u305b\u308b\u3068\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002</p> \u69cb\u9020\u4f53\u3068\u95a2\u6570<pre><code>struct Motor\n{\n    int pinA;\n    int pinB;\n    int pinP;\n};\n\nvoid motorBegin(const Motor&amp; motor)\n{\n    pinMode(motor.pinA, OUTPUT);\n    pinMode(motor.pinB, OUTPUT);\n}\n\nvoid motorMove(const Motor&amp; motor, int power)\n{\n    digitalWrite(motor.pinA, (power &gt;= 0) ? HIGH : LOW);\n    digitalWrite(motor.pinB, (power &lt;= 0) ? HIGH : LOW);\n    analogWrite(motor.pinP, abs(power));\n}\n\n\nMotor motor1{ 0, 2, 1 };\nMotor motor2{ 3, 5, 4 };\n\nvoid setup()\n{\n    motorBegin(motor1);\n    motorBegin(motor2);\n}\n\nvoid loop()\n{\n    motorMove(motor1, -128);\n    motorMove(motor2, 128);\n}\n</code></pre> \u30af\u30e9\u30b9<pre><code>class Motor\n{\npublic:\n    int pinA;\n    int pinB;\n    int pinP;\n\n    void begin()  // \u2190 \u30e1\u30f3\u30d0\u95a2\u6570\n    {\n        pinMode(pinA, OUTPUT);\n        pinMode(pinB, OUTPUT);\n    }\n\n    void move(int power)  // \u2190 \u30e1\u30f3\u30d0\u95a2\u6570\n    {\n        digitalWrite(pinA, (power &gt;= 0) ? HIGH : LOW);\n        digitalWrite(pinB, (power &lt;= 0) ? HIGH : LOW);\n        analogWrite(pinP, abs(power));\n    }\n};\n\nMotor motor1{ 0, 2, 1 };\nMotor motor2{ 3, 5, 4 };\n\nvoid setup()\n{\n    motor1.begin();\n    motor2.begin();\n}\n\nvoid loop()\n{\n    motor1.move(-128);\n    motor2.move(128);\n}\n</code></pre>"},{"location":"practice/motor/#public-private","title":"\ud83c\udf1f public private \u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50","text":"<p>\u30af\u30e9\u30b9\u306b\u306f public(\u516c\u958b), private(\u975e\u516c\u958b) \u3068\u3044\u3046\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u304c\u3042\u308a\u3001\u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30e1\u30f3\u30d0\u30fc\u3068\u3067\u304d\u306a\u3044\u30e1\u30f3\u30d0\u30fc\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <p>\u30d4\u30f3\u756a\u53f7\u306a\u3069\u306e\u5909\u6570\u306f\u5916\u90e8\u304b\u3089\u5909\u66f4\u3055\u308c\u308b\u3068\u56f0\u308b\u306e\u3067\u3001\u30af\u30e9\u30b9\u5185\u3067\u306e\u307f\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u30cf\u30a4\u30e9\u30a4\u30c8\u3055\u308c\u3066\u3044\u308b\u884c\u304c public \u306a\u7bc4\u56f2\u3067\u3059\u3002</p> <p>\u5b9f\u306f\u30af\u30e9\u30b9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 private \u3067\u3042\u308b\u305f\u3081\u30013 \u884c\u76ee\u306e private \u306f\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>class Motor\n{\nprivate:\n\n    int pinA;\n    int pinB;\n    int pinP;\n\npublic:\n\n    Motor(int pinA, int pinB, int pinP)\n        : pinA(pinA)\n        , pinB(pinB)\n        , pinP(pinP)\n    {\n    }\n\n    void begin()\n    {\n    }\n\n    // \u7701\u7565\n};\n</code></pre> <pre><code>Motor motor1{ 0, 2, 1 };\n\nvoid setup()\n{\n    motor1.pinA = 5;  // \u30a8\u30e9\u30fc\n\n    motor1.begin();   // OK\n}\n</code></pre>"},{"location":"practice/motor/#_15","title":"\ud83c\udf1f \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30c7\u30b9\u30c8\u30e9\u30af\u30bf","text":"<p>\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u306f\u3001\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306e\u969b\u306b\u81ea\u52d5\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u7279\u6b8a\u306a\u95a2\u6570\u3067\u3059\u3002\u30af\u30e9\u30b9\u540d\u3068\u540c\u3058\u540d\u524d\u3067\u3001\u623b\u308a\u5024\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u3082\u3046\u4e00\u3064\u5f79\u5272\u304c\u3042\u308a\u3001\u30e1\u30f3\u30d0\u5909\u6570\u306e\u521d\u671f\u5316\u3092\u884c\u3044\u307e\u3059\u3002\u521d\u671f\u5316\u5b50\u30ea\u30b9\u30c8\u3067\u521d\u671f\u5316\u3057\u307e\u3059\u3002\u5de6\u304c\u30e1\u30f3\u30d0\u5909\u6570\u3001\u53f3\u304c\u5f15\u6570\u3068\u6c7a\u307e\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u5909\u6570\u540d\u304c\u540c\u3058\u3067\u5927\u4e08\u592b\u3067\u3059\u3002</p> <pre><code>Motor(int pinA, int pinB, int pinP)\n    : \u30e1\u30f3\u30d0\u5909\u6570\u306epinA(\u5f15\u6570\u306epinA)\n    , \u30e1\u30f3\u30d0\u5909\u6570\u306epinB(\u5f15\u6570\u306epinB)\n    , \u30e1\u30f3\u30d0\u5909\u6570\u306epinP(\u5f15\u6570\u306epinP)\n{\n}\n</code></pre> <p>\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u306f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u7834\u68c4\u3055\u308c\u308b\u969b\u306b\u81ea\u52d5\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3067\u3059\u3002\u30af\u30e9\u30b9\u540d\u306e\u524d\u306b <code>~</code> \u3092\u4ed8\u3051\u307e\u3059\u3002</p> <pre><code>class Motor\n{\n    int pinA;\n    int pinB;\n    int pinP;\n\npublic:\n\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    Motor(int pinA, int pinB, int pinP)\n        : pinA(pinA)\n        , pinB(pinB)\n        , pinP(pinP)\n    {\n        std::cout &lt;&lt; \"Motor is created\" &lt;&lt; std::endl;\n    }\n\n    // \u30c7\u30b9\u30c8\u30e9\u30af\u30bf\n    ~Motor()\n    {\n        std::cout &lt;&lt; \"Motor is deleted\" &lt;&lt; std::endl;\n    }\n};\n</code></pre> <pre><code>int main()\n{\n\n    Motor motor{ 0, 2, 1 };  // \"Motor is created\" \u304c\u8868\u793a\u3055\u308c\u308b\n\n} // \u30b9\u30b3\u30fc\u30d7\u304b\u3089\u629c\u3051\u308b\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u7834\u68c4\u3055\u308c\u3001\"Motor is deleted\" \u304c\u8868\u793a\u3055\u308c\u308b\n</code></pre> <p>\u521d\u671f\u5316\u3068\u4ee3\u5165\u306e\u9055\u3044</p> <p>\u521d\u671f\u5316\u306f\u5909\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u308b\u3068\u540c\u6642\u306b\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u3059\u3002</p> <pre><code>int a = 1;  // \u521d\u671f\u5316\n</code></pre> <p>\u4ee3\u5165\u306f\u5909\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u305f\u5f8c\u306b\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u3059\u3002</p> <pre><code>int a;      // \u5b9a\u7fa9\na = 1;      // \u4ee3\u5165\n</code></pre> <p>\u203b\u521d\u671f\u5316\u304c\u63a8\u5968\u3067\u3059\u3002\u7d44\u307f\u8fbc\u307f\u578b\u306e\u5834\u5408\u51e6\u7406\u901f\u5ea6\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u304c\u3001<code>std::array</code> \u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u306e\u5834\u5408\u4ee3\u5165\u6642\u306b\u95a2\u6570\u547c\u3073\u51fa\u3057\u304c\u767a\u751f\u3059\u308b\u305f\u3081\u521d\u671f\u5316\u306e\u65b9\u304c\u901f\u3044\u3067\u3059\u3002</p> <pre><code>class Motor\n{\n    int pinA;\n    int pinB;\n    int pinP;\n\npublic:\n\n    Motor(int pinA, int pinB, int pinP)\n    {\n        this-&gt;pinA = pinA;  // \u4ee3\u5165\n        this-&gt;pinB = pinB;\n        this-&gt;pinP = pinP;\n    }\n\n    Motor(int pinA, int pinB, int pinP)\n        : pinA(pinA)  // \u521d\u671f\u5316\n        , pinB(pinB)\n        , pinP(pinP)\n    {\n    }\n};\n</code></pre> <p>RAII</p> <p>\u30ea\u30bd\u30fc\u30b9\u306e\u53d6\u5f97\u3068\u89e3\u653e\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u884c\u3046\u624b\u6cd5\u3067\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u306e\u89e3\u653e\u3092\u5fd8\u308c\u308b\u3053\u3068\u304c\u306a\u3044\u305f\u3081\u3001\u5b89\u5168\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3044\u305f\u3089\u5fc5\u305a\u9589\u3058\u308b\u3088\u3046\u306b\u3059\u308b\u306a\u3069\u3067\u3059\u3002</p> <pre><code>class File\n{\n    FILE* file;\n\npublic:\n\n    File(const char* filename)\n        : file(fopen(filename, \"r\"));\n    {\n\n    }\n\n    ~File()\n    {\n        fclose(file);\n    }\n\n    // \u7565\n};\n</code></pre> <pre><code>int main()\n{\n    File file(\"test.txt\");\n} // \u30b9\u30b3\u30fc\u30d7\u304b\u3089\u629c\u3051\u308b\u3068\u30d5\u30a1\u30a4\u30eb\u304c\u9589\u3058\u3089\u308c\u308b\n</code></pre>"},{"location":"practice/motor/#_16","title":"\ud83c\udf1f \u5b8c\u6210\u5f62","text":"<pre><code>class Motor\n{\n    int pinA;\n    int pinB;\n    int pinP;\n\npublic:\n\n    Motor(int pinA, int pinB, int pinP)\n        : pinA(pinA)\n        , pinB(pinB)\n        , pinP(pinP)\n    {\n    }\n\n    void begin()\n    {\n        pinMode(pinA, OUTPUT);\n        pinMode(pinB, OUTPUT);\n    }\n\n    void move(int power)\n    {\n        digitalWrite(pinA, (power &gt;= 0) ? HIGH : LOW);\n        digitalWrite(pinB, (power &lt;= 0) ? HIGH : LOW);\n        analogWrite(pinP, abs(power));\n    }\n};\n\nMotor motor1{ 0, 2, 1 };\nMotor motor2{ 3, 5, 4 };\n\nvoid setup()\n{\n    motor1.begin();\n    motor2.begin();\n}\n\nvoid loop()\n{\n    motor1.move(-128);\n    motor2.move(128);\n}\n</code></pre>"},{"location":"practice/omni/","title":"\u30aa\u30e0\u30cb\u3092\u52d5\u304b\u305d\u3046","text":""},{"location":"practice/omni/#_2","title":"\u30e2\u30fc\u30bf\u30fc\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u8eca\u8f2a\u3092\u52d5\u304b\u3059","text":"<p>\u52d5\u4f5c\u78ba\u8a8d\u3068\u3057\u3066\u5358\u306b\u30e2\u30fc\u30bf\u30fc\u3092\u52d5\u304b\u3059\u3060\u3051\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002</p> Main.inoMotor.hpp <pre><code>#include \"Motor.hpp\"\n\nstatic Motor motor0{ 19, 17, 18 };    // \u53f3\u524d\nstatic Motor motor1{ 16, 15, 14 };    // \u53f3\u5f8c\nstatic Motor motor2{ 28, 26, 27 };    // \u5de6\u5f8c\nstatic Motor motor3{ 22, 20, 21 };    // \u5de6\u524d\n\nvoid setup()\n{\n    motor0.begin();\n    motor1.begin();\n    motor2.begin();\n    motor3.begin();\n}\n\nvoid loop()\n{\n    motor0.move(100);\n    motor1.move(100);\n    motor2.move(100);\n    motor3.move(100);\n}\n</code></pre> <pre><code>#pragma once\n\nclass Motor\n{\n    int pinA;\n    int pinB;\n    int pinP;\n\npublic:\n\n    Motor(int pinA, int pinB, int pinP)\n        : pinA(pinA)\n        , pinB(pinB)\n        , pinP(pinP)\n    {\n    }\n\n    void begin()\n    {\n        pinMode(pinA, OUTPUT);\n        pinMode(pinB, OUTPUT);\n    }\n\n    void move(int power)\n    {\n        digitalWrite(pinA, (power &gt;= 0) ? HIGH : LOW);\n        digitalWrite(pinB, (power &lt;= 0) ? HIGH : LOW);\n        analogWrite(pinP, abs(power));\n    }\n};\n</code></pre>"},{"location":"practice/omni/#_3","title":"\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1","text":""},{"location":"practice/omni/#e220","title":"\ud83c\udf1f E220 \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<p>920MHz \u5e2f\u3067\u901a\u4fe1\u3059\u308b\u7121\u7dda\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002LoRa \u3068\u3044\u3046\u5909\u8abf\u65b9\u5f0f\u3092\u4f7f\u3063\u3066\u304a\u308a\u3001\u9577\u8ddd\u96e2\u901a\u4fe1\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <p></p> <p>1 \u5bfe 1 \u3067\u901a\u4fe1\u3057\u3001\u901a\u4fe1\u76f8\u624b\u306f\u30c1\u30e3\u30f3\u30cd\u30eb\u3067\u9078\u629e\u3057\u307e\u3059\u3002920MHz \u4ed8\u8fd1\u3067\u5fae\u5999\u306b\u5468\u6ce2\u6570\u3092\u5909\u3048\u308b\u3053\u3068\u3067\u3001\u6df7\u7dda\u305b\u305a\u901a\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002</p> \u30c1\u30e3\u30f3\u30cd\u30eb \u5468\u6ce2\u6570 (MHz) 0 920.6 1 920.8 2 921.0 3 921.2 4 921.4 : :"},{"location":"practice/omni/#_4","title":"\ud83c\udf1f \u30c7\u30d0\u30c3\u30b0\u65b9\u6cd5 (\u5024\u306e\u78ba\u8a8d)","text":"<p>\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u30fc\u3092\u4f7f\u3063\u3066\u5024\u3092 PC \u3067\u898b\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>void setup()\n{\n    Serial.begin(115200);\n}\n\nvoid loop()\n{\n    int value = 1234;\n    Serial.println(value);\n    delay(1000);\n}\n</code></pre> <p>Serial.println() \u95a2\u6570</p> <p><code>Serial.println()</code> \u95a2\u6570\u306f\u5f15\u6570\u306b\u6e21\u3057\u305f\u5024\u3092\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u30fc\u306b\u8868\u793a\u3057\u3001\u6539\u884c\u3057\u307e\u3059\u3002</p> <p><code>Serial.print()</code> \u95a2\u6570\u306f\u6539\u884c\u3057\u307e\u305b\u3093\u3002</p> <p>\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u30fc\u306e\u958b\u304d\u65b9</p> <ol> <li>\u53f3\u4e0a\u306b\u3042\u308b\u300c\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u30fc(\u866b\u773c\u93e1\u30a2\u30a4\u30b3\u30f3)\u300d\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002</li> <li>\u30dc\u30fc\u30ec\u30fc\u30c8\u3092 115200 \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002</li> </ol>"},{"location":"practice/omni/#udone220padps5","title":"\ud83c\udf1f Udon::E220PadPS5 \u30af\u30e9\u30b9","text":"<p>\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306b\u8f09\u3063\u3066\u3044\u308b E220 \u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <p>\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306b\u306f udonrobo/ControllerUnit \u30ec\u30dd\u30b8\u30c8\u30ea\u306e Firmware/Firmware.ino \u304c\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002</p> <p><code>Udon::E220PadPS5</code> \u30af\u30e9\u30b9\u306f E220 \u304b\u3089\u306e\u30c7\u30fc\u30bf\u53d7\u4fe1\u3092\u884c\u3044\u3001\u30dc\u30bf\u30f3\u3084\u30b9\u30c6\u30a3\u30c3\u30af\u306e\u72b6\u614b\u3092\u53d6\u5f97\u3067\u304d\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002</p> E220PadPS5\u30af\u30e9\u30b9\u6700\u5c0f\u69cb\u6210<pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::E220PadPS5 pad{{\n    .serial  = Serial1,\n    .m0      = 13,\n    .m1      = 12,\n    .aux     = 2,\n}};\n\nvoid setup()\n{\n    const int channel = 3;\n    pad.begin(channel);\n}\n\nvoid loop()\n{\n    pad.update();\n}\n</code></pre> <p>\u30dc\u30bf\u30f3\u306e\u5024\u306f <code>get\u30dc\u30bf\u30f3\u540d()</code> \u30e1\u30f3\u30d0\u95a2\u6570\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002<code>get\u30dc\u30bf\u30f3\u540d()</code> \u95a2\u6570\u306f <code>Udon::Input</code> \u69cb\u9020\u4f53\u3092\u8fd4\u3057\u3001\u6b21\u306e\u72b6\u614b\u3092\u6301\u3061\u307e\u3059\u3002</p> <pre><code>struct Input\n{\n    bool press;    // \u62bc\u3055\u308c\u3066\u3044\u308b\u304b\n    bool click;    // \u62bc\u3055\u308c\u305f\u77ac\u9593\u304b\n    bool release;  // \u96e2\u3055\u308c\u305f\u77ac\u9593\u304b\n    bool toggle;   // \u62bc\u3059\u3054\u3068\u306b\u5165\u308c\u66ff\u308f\u308b\n};\n</code></pre> \u30dc\u30bf\u30f3\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u4f8b<pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::E220PadPS5 pad{{\n    .serial  = Serial1,\n    .m0      = 13,\n    .m1      = 12,\n    .aux     = 2,\n}};\n\nvoid setup()\n{\n    const int channel = 3;\n    pad.begin(channel);\n    Serial.begin(115200);\n}\n\nvoid loop()\n{\n    pad.update();\n\n    // \u30d0\u30c4\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u77ac\u9593\n    if (pad.getCross().click)\n    {\n        Serial.println(\"Cross button is clicked.\");\n    }\n\n    // \u4e09\u89d2\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u9593\n    if (pad.getTriangle().press)\n    {\n        Serial.println(\"Triangle button is pressed.\");\n    }\n\n    delay(10);\n}\n</code></pre> <p>\u30b9\u30c6\u30a3\u30c3\u30af\u306e\u5024\u306f <code>getLeftStick()</code> \u3068 <code>getRightStick()</code> \u30e1\u30f3\u30d0\u95a2\u6570\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002<code>Udon::Vec2</code> \u69cb\u9020\u4f53\u3092\u8fd4\u3057\u307e\u3059\u3002</p> \u30b9\u30c6\u30a3\u30c3\u30af\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u4f8b<pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::E220PadPS5 pad{{\n    .serial  = Serial1,\n    .m0      = 13,\n    .m1      = 12,\n    .aux     = 2,\n}};\n\nvoid setup()\n{\n    const int channel = 3;\n    pad.begin(channel);\n    Serial.begin(115200);\n}\n\nvoid loop()\n{\n    pad.update();\n\n    Udon::Vec2 left  = pad.getLeftStick();\n    Serial.println(left.x);  // \u5de6\u30b9\u30c6\u30a3\u30c3\u30af\u306e x \u5ea7\u6a19 (-255~255)\n\n    delay(10);\n}\n</code></pre>"},{"location":"practice/omni/#_5","title":"\u30aa\u30e0\u30cb\u306e\u51fa\u529b\u5024\u7b97\u51fa","text":"<p>\u30b9\u30c6\u30a3\u30c3\u30af\u306e\u5024\u304b\u3089\u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\u3057\u307e\u3057\u3087\u3046\u3002</p> <p>\u5de6\u30b9\u30c6\u30a3\u30c3\u30af\u306e x, y \u8ef8\u3067\u5e73\u884c\u79fb\u52d5\u3057\u3001\u53f3\u30b9\u30c6\u30a3\u30c3\u30af\u306e x \u8ef8\u3067\u56de\u8ee2\u3055\u305b\u308b\u3068\u3057\u307e\u3059\u3002</p> <pre><code>const double x = pad.getLeftStick().x;\nconst double y = pad.getLeftStick().y;\nconst double turn = pad.getRightStick().x;\n</code></pre>"},{"location":"practice/omni/#_6","title":"\ud83c\udf1f \u8003\u3048\u65b9","text":"<p>\u4e00\u5ea6\u306b x, y, turn \u304b\u3089\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u3067\u3059\u3002</p> <p>\u305d\u3053\u3067\u3001x \u304b\u3089\u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\u3001y \u304b\u3089\u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\u3001turn \u304b\u3089\u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\u3057\u3001\u6700\u5f8c\u306b\u8db3\u3057\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u51fa\u529b\u5024\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002</p>"},{"location":"practice/omni/#x","title":"\ud83c\udf1f x \u6210\u5206\u3092\u8003\u3048\u308b","text":"<p>x \u306e\u6b63\u65b9\u5411\u3078\u52d5\u304f\u3068\u304d\u306e\u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u8003\u3048\u307e\u3059\u3002</p> <p></p> <p>\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u51fa\u529b\u5024\u304c\u7b97\u51fa\u3055\u308c\u307e\u3059\u3002</p> <pre><code>m0 = +x\nm1 = -x\nm2 = -x\nm3 = +x\n</code></pre>"},{"location":"practice/omni/#y","title":"\ud83c\udf1f y \u6210\u5206\u3092\u8003\u3048\u308b","text":"<p>y \u306e\u6b63\u65b9\u5411\u3078\u52d5\u304f\u3068\u304d\u306e\u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u8003\u3048\u307e\u3059\u3002</p> <p></p> <p>\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u51fa\u529b\u5024\u304c\u7b97\u51fa\u3055\u308c\u307e\u3059\u3002</p> <pre><code>m0 = -y\nm1 = -y\nm2 = +y\nm3 = +y\n</code></pre>"},{"location":"practice/omni/#_7","title":"\ud83c\udf1f \u65cb\u56de\u6210\u5206\u3092\u8003\u3048\u308b","text":"<p>\u65cb\u56de\u3059\u308b\u3068\u304d\u306e\u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u8003\u3048\u307e\u3059\u3002</p> <p></p> <p>\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u51fa\u529b\u5024\u304c\u7b97\u51fa\u3055\u308c\u307e\u3059\u3002</p> <pre><code>m0 = turn\nm1 = turn\nm2 = turn\nm3 = turn\n</code></pre>"},{"location":"practice/omni/#_8","title":"\ud83c\udf1f \u5408\u6210","text":"<p>\u305d\u308c\u305e\u308c\u306e\u51fa\u529b\u5024\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u6700\u7d42\u7684\u306a\u51fa\u529b\u5024\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002</p> <pre><code>m0 = +x - y + turn\nm1 = -x - y + turn\nm2 = -x + y + turn\nm3 = +x + y + turn\n</code></pre>"},{"location":"practice/omni/#_9","title":"\ud83c\udf1f \u5b9f\u88c5 (\u9014\u4e2d)","text":"<pre><code>void loop()\n{\n    pad.update();\n\n    const double x = pad.getLeftStick().x;\n    const double y = pad.getLeftStick().y;\n    const double turn = pad.getRightStick().x;\n\n    double m0 = +x - y + turn;\n    double m1 = -x - y + turn;\n    double m2 = -x + y + turn;\n    double m3 = +x + y + turn;\n\n    motor0.move(m0);\n    motor1.move(m1);\n    motor2.move(m2);\n    motor3.move(m3);\n\n    delay(10);\n}\n</code></pre>"},{"location":"practice/omni/#_10","title":"\ud83c\udf1f \u51fa\u529b\u5024\u306e\u5727\u7e2e","text":"<p>\u73fe\u5728\u306f x, y, turn \u306e\u5024\u3092\u8db3\u3057\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u7b97\u51fa\u5024\u304c\u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u306e\u52d5\u4f5c\u7bc4\u56f2 (-210 ~ 210) \u3092\u8d85\u3048\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u305d\u3053\u3067\u51fa\u529b\u5024\u304c -210 ~ 210 \u306e\u7bc4\u56f2\u306b\u53ce\u307e\u308b\u3088\u3046\u306b\u8abf\u6574\u3057\u307e\u3059\u3002</p> <p>\u203b \u00b1210 \u306f\u5b9f\u9a13\u6a5f\u3067\u306e\u52d5\u4f5c\u7bc4\u56f2\u3067\u3059\u3002\u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002</p> <pre><code>const double limitPower = 210;\n\nconst double maxPower = std::max({ abs(m0), abs(m1), abs(m2), abs(m3) });\n\nif (maxPower &gt; limitPower)\n{\n    const double ratio = limitPower / maxPower;\n    m0 *= ratio;\n    m1 *= ratio;\n    m2 *= ratio;\n    m3 *= ratio;\n}\n</code></pre>"},{"location":"practice/omni/#_11","title":"\ud83c\udf1f \u5b9f\u88c5 (\u6700\u7d42)","text":"<pre><code>#include &lt;Udon.hpp&gt;\n#include \"Motor.hpp\"\n\nstatic Udon::E220PadPS5 pad{{\n    .serial  = Serial1,\n    .m0      = 13,\n    .m1      = 12,\n    .aux     = 2,\n}};\n\nstatic Motor motor0{ 19, 17, 18 };    // \u53f3\u524d\nstatic Motor motor1{ 16, 15, 14 };    // \u53f3\u5f8c\nstatic Motor motor2{ 28, 26, 27 };    // \u5de6\u5f8c\nstatic Motor motor3{ 22, 20, 21 };    // \u5de6\u524d\n\nvoid setup()\n{\n    const int channel = 3;\n    pad.begin(channel);\n}\n\nvoid loop()\n{\n    pad.update();\n\n    // \u30b9\u30c6\u30a3\u30c3\u30af\u306e\u5024\u3092\u53d6\u5f97\n    const double x = pad.getLeftStick().x;\n    const double y = pad.getLeftStick().y;\n    const double turn = pad.getRightStick().x;\n\n    // \u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\n    double m0 = +x - y + turn;\n    double m1 = -x - y + turn;\n    double m2 = -x + y + turn;\n    double m3 = +x + y + turn;\n\n    // \u51fa\u529b\u5024\u3092\u5727\u7e2e\n    const double limitPower = 210;\n    const double maxPower = std::max({ abs(m0), abs(m1), abs(m2), abs(m3) });\n    if (maxPower &gt; limitPower)\n    {\n        const double ratio = limitPower / maxPower;\n        m0 *= ratio;\n        m1 *= ratio;\n        m2 *= ratio;\n        m3 *= ratio;\n    }\n\n    // \u30e2\u30fc\u30bf\u30fc\u3092\u52d5\u304b\u3059\n    motor0.move(m0);\n    motor1.move(m1);\n    motor2.move(m2);\n    motor3.move(m3);\n\n    delay(10);\n}\n</code></pre> <p>\u30ba\u30eb</p> <p>\u5b9f\u306f\u30aa\u30e0\u30cb\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\u3059\u308b\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>const auto powers = pad.getMoveInfo().toOmni&lt;4&gt;();\n\nmotor0.move(powers[0]);\nmotor1.move(powers[1]);\nmotor2.move(powers[2]);\nmotor3.move(powers[3]);\n</code></pre>"},{"location":"practice/omni/#_12","title":"\u65cb\u56de\u89d2\u88dc\u6b63","text":"<p>\u73fe\u5728\u306e\u5b9f\u88c5\u3067\u306f\u30e2\u30fc\u30bf\u30fc\u306e\u500b\u4f53\u5dee\u306b\u3088\u3063\u3066\u5e73\u884c\u79fb\u52d5\u4e2d\u3067\u3042\u3063\u3066\u3082\u5f90\u3005\u306b\u65cb\u56de\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <p>\u305d\u3053\u3067\u3001\u65cb\u56de\u89d2\u3092\u8a08\u6e2c\u3057\u3001\u5e73\u884c\u79fb\u52d5\u4e2d\u306f\u65cb\u56de\u89d2\u304c 0 \u306b\u306a\u308b\u3088\u3046\u306b\u88dc\u6b63\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"practice/omni/#_13","title":"\ud83c\udf1f \u65cb\u56de\u89d2\u3092\u30b8\u30e3\u30a4\u30ed\u30bb\u30f3\u30b5\u304b\u3089\u53d6\u5f97\u3059\u308b","text":"<p>\u30b8\u30e3\u30a4\u30ed\u30bb\u30f3\u30b5 (BNO055) \u304b\u3089\u65cb\u56de\u89d2\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::BNO055 gyro{ Wire };\n\nvoid setup()\n{\n    Serial.begin(115200);\n\n    gyro.begin();\n}\n\nvoid loop()\n{\n    gyro.update();\n\n    const double angle = gyro.getYaw();\n\n    Serial.println(angle);\n\n    delay(10);\n}\n</code></pre>"},{"location":"practice/omni/#_14","title":"\ud83c\udf1f \u65cb\u56de\u89d2\u3092\u88dc\u6b63\u3059\u308b (\u65cb\u56de\u79fb\u52d5\u306f\u3057\u306a\u3044\u3068\u4eee\u5b9a)","text":"<p>\u53d6\u5f97\u3057\u305f\u65cb\u56de\u89d2\u3092\u4f7f\u3063\u3066\u3001\u5e73\u884c\u79fb\u52d5\u4e2d\u306f\u65cb\u56de\u89d2\u304c 0 \u306b\u306a\u308b\u3088\u3046\u306b\u88dc\u6b63\u3057\u307e\u3059\u3002</p> <p>\u73fe\u5728\u306e\u5024\u3068\u76ee\u6a19\u306e\u5024\u3092\u6bd4\u8f03\u3057\u88dc\u6b63\u5024\u3092\u7b97\u51fa\u3059\u308b\u3068\u3044\u3046\u5236\u5fa1\u306f\u3001\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u5236\u5fa1\u3068\u547c\u3070\u308c\u307e\u3059\u3002\u4e2d\u3067\u3082 PID \u5236\u5fa1\u3068\u3044\u3046\u5236\u5fa1\u65b9\u6cd5\u306f\u8abf\u6574\u304c\u5bb9\u6613\u306a\u305f\u3081\u90e8\u3067\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u5236\u5fa1\u306f\u6b21\u306e\u3088\u3046\u306b\u884c\u3044\u307e\u3059\u3002P \u306f\u6bd4\u4f8b\u3001I \u306f\u7a4d\u5206\u3001D \u306f\u5fae\u5206\u3067\u3059\u3002</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::LoopCycleController loopCtrl{ 10000 };\nstatic Udon::PidController pid{ 150, 0, 50, loopCtrl.cycleUs() };\n//                                ^P ^I  ^D\n\nvoid setup()\n{\n}\n\nvoid loop()\n{\n    double \u88dc\u6b63\u5024 = pid(\u73fe\u5728\u306e\u5024, \u76ee\u6a19\u306e\u5024);\n    loopCtrl.update();\n}\n</code></pre> <p>\u65cb\u56de\u89d2\u3092 0 \u5ea6\u306b\u88dc\u6b63\u3059\u308b\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;Udon.hpp&gt;\n#include \"Motor.hpp\"\n\nstatic Udon::E220PadPS5 pad{{\n    .serial  = Serial1,\n    .m0      = 13,\n    .m1      = 12,\n    .aux     = 2,\n}};\n\nstatic Motor motor0{ 19, 17, 18 };    // \u53f3\u524d\nstatic Motor motor1{ 16, 15, 14 };    // \u53f3\u5f8c\nstatic Motor motor2{ 28, 26, 27 };    // \u5de6\u5f8c\nstatic Motor motor3{ 22, 20, 21 };    // \u5de6\u524d\n\nstatic Udon::BNO055 gyro{ Wire };\n\nstatic Udon::LoopCycleController loopCtrl{ 10000 };\n\nstatic Udon::PidController turnPid{ 150, 0, 50, loopCtrl.cycleUs() };\n\nvoid setup()\n{\n    const int channel = 3;\n    pad.begin(channel);\n    gyro.begin();\n}\n\nvoid loop()\n{\n    pad.update();\n    gyro.update();\n\n    // \u30b9\u30c6\u30a3\u30c3\u30af\u306e\u5024\u3092\u53d6\u5f97\n    const double x = pad.getLeftStick().x;\n    const double y = pad.getLeftStick().y;\n    const double turn = pad.getRightStick().x;\n\n    // \u30b8\u30e3\u30a4\u30ed\u30bb\u30f3\u30b5\u304b\u3089\u65cb\u56de\u89d2\u3092\u53d6\u5f97\n    const double yaw = gyro.getYaw();\n\n    // \u76ee\u6a19\u306e\u65cb\u56de\u89d2\u3092 0 \u306b\u8a2d\u5b9a\n    const double targetYaw = 0;\n\n    // PID \u5236\u5fa1\u3067\u88dc\u6b63\u5024\u3092\u7b97\u51fa\n    const double correctionTurn = turnPid(yaw, targetYaw);\n\n    // \u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\n    double m0 = +x - y + turn - correctionTurn;\n    double m1 = -x - y + turn - correctionTurn;\n    double m2 = -x + y + turn - correctionTurn;\n    double m3 = +x + y + turn - correctionTurn;\n\n    // \u51fa\u529b\u5024\u3092\u5727\u7e2e\n    const double limitPower = 210;\n    const double maxPower = std::max({ abs(m0), abs(m1), abs(m2), abs(m3) });\n    if (maxPower &gt; limitPower)\n    {\n        const double ratio = limitPower / maxPower;\n        m0 *= ratio;\n        m1 *= ratio;\n        m2 *= ratio;\n        m3 *= ratio;\n    }\n\n    // \u30e2\u30fc\u30bf\u30fc\u3092\u52d5\u304b\u3059\n    motor0.move(m0);\n    motor1.move(m1);\n    motor2.move(m2);\n    motor3.move(m3);\n\n    loopCtrl.update();\n}\n</code></pre>"},{"location":"practice/omni/#_15","title":"\ud83c\udf1f \u65cb\u56de\u89d2\u3092\u88dc\u6b63\u3059\u308b (\u65cb\u56de\u79fb\u52d5\u3092\u8003\u616e)","text":"<p>\u65cb\u56de\u79fb\u52d5\u3092\u8003\u616e\u3057\u3066\u65cb\u56de\u89d2\u3092\u88dc\u6b63\u3057\u307e\u3059\u3002\u65cb\u56de\u4e2d\u306f\u65cb\u56de\u88dc\u6b63\u3092\u7121\u52b9\u306b\u3057\u307e\u3059\u3002</p> <p>\u73fe\u5728\u306f\u76ee\u6a19\u89d2\u5ea6\u3092 0 \u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u65cb\u56de\u4e2d\u306f\u76ee\u6a19\u89d2\u5ea6\u3092\u73fe\u5728\u306e\u65cb\u56de\u89d2\u5ea6\u306b\u3059\u308b\u3053\u3068\u3067\u65cb\u56de\u88dc\u6b63\u3092\u7121\u52b9\u306b\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;Udon.hpp&gt;\n#include \"Motor.hpp\"\n\nstatic Udon::E220PadPS5 pad{{\n    .serial  = Serial1,\n    .m0      = 13,\n    .m1      = 12,\n    .aux     = 2,\n}};\n\nstatic Motor motor0{ 19, 17, 18 };    // \u53f3\u524d\nstatic Motor motor1{ 16, 15, 14 };    // \u53f3\u5f8c\nstatic Motor motor2{ 28, 26, 27 };    // \u5de6\u5f8c\nstatic Motor motor3{ 22, 20, 21 };    // \u5de6\u524d\n\nstatic Udon::BNO055 gyro{ Wire };\n\nstatic Udon::LoopCycleController loopCtrl{ 10000 };\n\nstatic Udon::PidController turnPid{ 150, 0, 50, loopCtrl.cycleUs() };\n\nvoid setup()\n{\n    const int channel = 3;\n    pad.begin(channel);\n    gyro.begin();\n}\n\n// \u76ee\u6a19\u306e\u65cb\u56de\u89d2\ndouble targetYaw;\n\nvoid loop()\n{\n    pad.update();\n    gyro.update();\n\n    // \u30b9\u30c6\u30a3\u30c3\u30af\u306e\u5024\u3092\u53d6\u5f97\n    const double x = pad.getLeftStick().x;\n    const double y = pad.getLeftStick().y;\n    const double turn = pad.getRightStick().x;\n\n    // \u30b8\u30e3\u30a4\u30ed\u30bb\u30f3\u30b5\u304b\u3089\u65cb\u56de\u89d2\u3092\u53d6\u5f97\n    const double yaw = gyro.getYaw();\n\n    if (turn)\n    {\n        // \u65cb\u56de\u4e2d\u306f\u65cb\u56de\u88dc\u6b63\u3092\u7121\u52b9\u306b\u3059\u308b\n        targetYaw = yaw;\n    }\n    else\n    {\n        // targetYaw \u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306a\u306e\u3067\u3001\u65cb\u56de\u5f8c\u306f\u65cb\u56de\u7d42\u4e86\u6642\u306e\u89d2\u5ea6\u304c\u7dad\u6301\u3055\u308c\u3001\u88dc\u6b63\u3055\u308c\u308b\n    }\n\n    // PID \u5236\u5fa1\u3067\u88dc\u6b63\u5024\u3092\u7b97\u51fa\n    const double correctionTurn = turnPid(yaw, targetYaw);\n\n    // \u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\n    double m0 = +x - y + turn - correctionTurn;\n    double m1 = -x - y + turn - correctionTurn;\n    double m2 = -x + y + turn - correctionTurn;\n    double m3 = +x + y + turn - correctionTurn;\n\n    // \u51fa\u529b\u5024\u3092\u5727\u7e2e\n    const double limitPower = 210;\n    const double maxPower = std::max({ abs(m0), abs(m1), abs(m2), abs(m3) });\n    if (maxPower &gt; limitPower)\n    {\n        const double ratio = limitPower / maxPower;\n        m0 *= ratio;\n        m1 *= ratio;\n        m2 *= ratio;\n        m3 *= ratio;\n    }\n\n    // \u30e2\u30fc\u30bf\u30fc\u3092\u52d5\u304b\u3059\n    motor0.move(m0);\n    motor1.move(m1);\n    motor2.move(m2);\n    motor3.move(m3);\n\n    loopCtrl.update();\n}\n</code></pre>"},{"location":"practice/omni/#_16","title":"\ud83c\udf1f \u65cb\u56de\u89d2\u3092\u88dc\u6b63\u3059\u308b (\u65cb\u56de\u5f8c\u306e\u6163\u6027\u3092\u8003\u616e)","text":"<p>\u524d\u56de\u306e\u5b9f\u88c5\u3067\u306f\u65cb\u56de\u7d42\u4e86\u5f8c\u3001\u3059\u3050\u306b\u65cb\u56de\u89d2\u306e\u88dc\u6b63\u3092\u6709\u52b9\u306b\u3057\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306f\u65cb\u56de\u7d42\u4e86\u5f8c\u3001\u6163\u6027\u306b\u3088\u3063\u3066\u5c11\u3057\u306e\u9593\u65cb\u56de\u3057\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u65cb\u56de\u7d42\u4e86\u5f8c\u306b\u5c11\u3057\u5f85\u3063\u3066\u304b\u3089\u88dc\u6b63\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002</p> <p>\u5177\u4f53\u7684\u306b\u306f\u3001\u65cb\u56de\u7d42\u4e86\u6642\u523b\u3092\u8a18\u9332\u3057\u3001\u305d\u306e\u6642\u523b\u304b\u3089\u4e00\u5b9a\u6642\u9593\u7d4c\u904e\u5f8c\u306b\u88dc\u6b63\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;Udon.hpp&gt;\n#include \"Motor.hpp\"\n\nstatic Udon::E220PadPS5 pad{{\n    .serial  = Serial1,\n    .m0      = 13,\n    .m1      = 12,\n    .aux     = 2,\n}};\n\nstatic Motor motor0{ 19, 17, 18 };    // \u53f3\u524d\nstatic Motor motor1{ 16, 15, 14 };    // \u53f3\u5f8c\nstatic Motor motor2{ 28, 26, 27 };    // \u5de6\u5f8c\nstatic Motor motor3{ 22, 20, 21 };    // \u5de6\u524d\n\nstatic Udon::BNO055 gyro{ Wire };\n\nstatic Udon::LoopCycleController loopCtrl{ 10000 };\n\nstatic Udon::PidController turnPid{ 150, 0, 50, loopCtrl.cycleUs() };\n\nvoid setup()\n{\n    const int channel = 3;\n    pad.begin(channel);\n    gyro.begin();\n}\n\n// \u76ee\u6a19\u306e\u65cb\u56de\u89d2\ndouble targetYaw;\n\n// \u65cb\u56de\u7d42\u4e86\u6642\u523b\nuint32_t lastTurnMs;\n\nvoid loop()\n{\n    pad.update();\n    gyro.update();\n\n    // \u30b9\u30c6\u30a3\u30c3\u30af\u306e\u5024\u3092\u53d6\u5f97\n    const double x = pad.getLeftStick().x;\n    const double y = pad.getLeftStick().y;\n    const double turn = pad.getRightStick().x;\n\n    // \u30b8\u30e3\u30a4\u30ed\u30bb\u30f3\u30b5\u304b\u3089\u65cb\u56de\u89d2\u3092\u53d6\u5f97\n    const double yaw = gyro.getYaw();\n\n    if (turn)\n    {\n        // \u65cb\u56de\u4e2d\u306f\u6642\u523b\u3092\u8a18\u9332\u3057\u7d9a\u3051\u308b\n        lastTurnMs = millis();\n    }\n\n    // \u73fe\u5728\u306e\u6642\u523b\u3068\u5dee\u3092\u3068\u308b\u3068\u3001\u65cb\u56de\u5f8c\u4f55ms\u7d4c\u904e\u3057\u305f\u304b\u3092\u6c42\u3081\u3089\u308c\u308b\n    const uint32_t elapsedMs = millis() - lastTurnMs;\n    if (elapsedMs &lt; 1000)\n    {\n        // \u65cb\u56de\u7d42\u4e86\u5f8c 1 \u79d2\u4ee5\u5185\u306f\u88dc\u6b63\u3092\u7121\u52b9\u306b\u3059\u308b\u3002\u65cb\u56de\u4e2d\u3082\u3053\u306e if \u306b\u5165\u308b\u305f\u3081\u3001\u7121\u52b9\u306b\u306a\u308b\n        targetYaw = yaw;\n    }\n\n    // PID \u5236\u5fa1\u3067\u88dc\u6b63\u5024\u3092\u7b97\u51fa\n    const double correctionTurn = turnPid(yaw, targetYaw);\n\n    // \u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\n    double m0 = +x - y + turn - correctionTurn;\n    double m1 = -x - y + turn - correctionTurn;\n    double m2 = -x + y + turn - correctionTurn;\n    double m3 = +x + y + turn - correctionTurn;\n\n    // \u51fa\u529b\u5024\u3092\u5727\u7e2e\n    const double limitPower = 210;\n    const double maxPower = std::max({ abs(m0), abs(m1), abs(m2), abs(m3) });\n    if (maxPower &gt; limitPower)\n    {\n        const double ratio = limitPower / maxPower;\n        m0 *= ratio;\n        m1 *= ratio;\n        m2 *= ratio;\n        m3 *= ratio;\n    }\n\n    // \u30e2\u30fc\u30bf\u30fc\u3092\u52d5\u304b\u3059\n    motor0.move(m0);\n    motor1.move(m1);\n    motor2.move(m2);\n    motor3.move(m3);\n\n    loopCtrl.update();\n}\n</code></pre>"},{"location":"practice/omni/#_17","title":"\u30dd\u30b8\u30c6\u30a3\u30d6\u5236\u5fa1","text":"<p>\u73fe\u5728\u306e\u5b9f\u88c5\u306f\u30ed\u30dc\u30c3\u30c8\u304b\u3089\u898b\u305f\u5ea7\u6a19\u7cfb\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u308c\u306f\u64cd\u7e26\u8005\u306b\u3068\u3063\u3066\u306f\u76f4\u611f\u7684\u3067\u306f\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u305d\u3053\u3067\u3001\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u64cd\u7e26\u8005\u304b\u3089\u898b\u305f\u5ea7\u6a19\u7cfb\u3067\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p></p> <p>\u56de\u8ee2\u884c\u5217\u3092\u4f7f\u3044\u3001\u30ed\u30dc\u30c3\u30c8\u304b\u3089\u898b\u305f\u5ea7\u6a19\u7cfb\u306e\u5024\u3092\u64cd\u7e26\u8005\u304b\u3089\u898b\u305f\u5ea7\u6a19\u7cfb\u306e\u5024\u306b\u5909\u63db\u3057\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070\u4e0b\u306e\u56f3\u3067\u306f y = 200 \u3092\u5165\u529b\u3057\u3001localVector \u306b { 0, 200 } \u304c\u5165\u3063\u3066\u3044\u308b\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30d9\u30af\u30c8\u30eb\u3092\u65cb\u56de\u89d2\u5206\u56de\u8ee2\u3055\u305b\u308b\u3068\u3001globalVector \u306f\u64cd\u7e26\u8005\u304b\u3089\u898b\u305f\u76f4\u9032\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code>#include &lt;Udon.hpp&gt;\n#include \"Motor.hpp\"\n\nstatic Udon::E220PadPS5 pad{{\n    .serial  = Serial1,\n    .m0      = 13,\n    .m1      = 12,\n    .aux     = 2,\n}};\n\nstatic Motor motor0{ 19, 17, 18 };    // \u53f3\u524d\nstatic Motor motor1{ 16, 15, 14 };    // \u53f3\u5f8c\nstatic Motor motor2{ 28, 26, 27 };    // \u5de6\u5f8c\nstatic Motor motor3{ 22, 20, 21 };    // \u5de6\u524d\n\nstatic Udon::BNO055 gyro{ Wire };\n\nstatic Udon::LoopCycleController loopCtrl{ 10000 };\n\nstatic Udon::PidController turnPid{ 150, 0, 50, loopCtrl.cycleUs() };\n\nvoid setup()\n{\n    const int channel = 3;\n    pad.begin(channel);\n    gyro.begin();\n}\n\n// \u76ee\u6a19\u306e\u65cb\u56de\u89d2\ndouble targetYaw;\n\n// \u65cb\u56de\u7d42\u4e86\u6642\u523b\nuint32_t lastTurnMs;\n\nvoid loop()\n{\n    pad.update();\n    gyro.update();\n\n    // \u30b8\u30e3\u30a4\u30ed\u30bb\u30f3\u30b5\u304b\u3089\u65cb\u56de\u89d2\u3092\u53d6\u5f97\n    const double yaw = gyro.getYaw();\n\n    // \u30b9\u30c6\u30a3\u30c3\u30af\u306e\u5024\u3092\u53d6\u5f97\n    const double turn = pad.getRightStick().x;\n\n    // \u30ed\u30dc\u30c3\u30c8\u304b\u3089\u898b\u305f\u5ea7\u6a19\u7cfb\n    const Udon::Vec2 localVector = pad.getLeftStick();\n\n    // \u64cd\u7e26\u8005\u304b\u3089\u898b\u305f\u5ea7\u6a19\u7cfb\u306b\u5909\u63db\n    const Udon::Vec2 globalVector = localVector.rotated(yaw);\n\n    // \u30bf\u30c3\u30c1\u30d1\u30c3\u30c9\u306e\u30af\u30ea\u30c3\u30af\u3067\u30dd\u30b8\u30c6\u30a3\u30d6\u5236\u5fa1\u306e\u30bc\u30ed\u89d2\u5ea6\u3092\u8a2d\u5b9a\n    if (pad.getTouch().click)\n    {\n        gyro.clear();\n        targetYaw = 0;\n    }\n\n    if (turn)\n    {\n        // \u65cb\u56de\u4e2d\u306f\u6642\u523b\u3092\u8a18\u9332\u3057\u7d9a\u3051\u308b\n        lastTurnMs = millis();\n    }\n\n    // \u73fe\u5728\u306e\u6642\u523b\u3068\u5dee\u3092\u3068\u308b\u3068\u3001\u65cb\u56de\u5f8c\u4f55ms\u7d4c\u904e\u3057\u305f\u304b\u3092\u6c42\u3081\u3089\u308c\u308b\n    const uint32_t elapsedMs = millis() - lastTurnMs;\n    if (elapsedMs &lt; 1000)\n    {\n        // \u65cb\u56de\u7d42\u4e86\u5f8c 1 \u79d2\u4ee5\u5185\u306f\u88dc\u6b63\u3092\u7121\u52b9\u306b\u3059\u308b\u3002\u65cb\u56de\u4e2d\u3082\u3053\u306e if \u306b\u5165\u308b\u305f\u3081\u3001\u7121\u52b9\u306b\u306a\u308b\n        targetYaw = yaw;\n    }\n\n    // PID \u5236\u5fa1\u3067\u88dc\u6b63\u5024\u3092\u7b97\u51fa\n    const double correctionTurn = turnPid(yaw, targetYaw);\n\n    // \u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\n    double m0 = +globalVector.x - globalVector.y + turn - correctionTurn;\n    double m1 = -globalVector.x - globalVector.y + turn - correctionTurn;\n    double m2 = -globalVector.x + globalVector.y + turn - correctionTurn;\n    double m3 = +globalVector.x + globalVector.y + turn - correctionTurn;\n\n    // \u51fa\u529b\u5024\u3092\u5727\u7e2e\n    const double limitPower = 210;\n    const double maxPower = std::max({ abs(m0), abs(m1), abs(m2), abs(m3) });\n    if (maxPower &gt; limitPower)\n    {\n        const double ratio = limitPower / maxPower;\n        m0 *= ratio;\n        m1 *= ratio;\n        m2 *= ratio;\n        m3 *= ratio;\n    }\n\n    // \u30e2\u30fc\u30bf\u30fc\u3092\u52d5\u304b\u3059\n    motor0.move(m0);\n    motor1.move(m1);\n    motor2.move(m2);\n    motor3.move(m3);\n\n    loopCtrl.update();\n}\n</code></pre>"},{"location":"practice/omni/#_18","title":"\u9060\u9694\u975e\u5e38\u505c\u6b62\u306e\u5b9f\u88c5","text":"<p>\u30ed\u30dc\u30b3\u30f3\u3067\u306f\u5b89\u5168\u4e0a\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304b\u3089\u30ed\u30dc\u30c3\u30c8\u3092\u505c\u6b62\u3055\u305b\u3089\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u90e8\u3067\u306f\u30d0\u30c4\u30dc\u30bf\u30f3\u306b\u3088\u3063\u3066\u975e\u5e38\u505c\u6b62\u3001\u52d5\u4f5c\u3092\u5207\u308a\u66ff\u3048\u307e\u3059\u3002toggle \u306f\u521d\u671f\u5024\u304c false \u306a\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u975e\u5e38\u505c\u6b62\u304c\u304b\u304b\u3063\u305f\u72b6\u614b\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002</p> <pre><code>if (pad.getCross().toggle)\n{\n    // \u52d5\u4f5c\u53ef\u80fd\n}\nelse\n{\n    // \u975e\u5e38\u505c\u6b62 (\u8d77\u52d5\u6642\u306f false \u306a\u306e\u3067\u3001\u3053\u3053\u306b\u5165\u308b)\n}\n</code></pre> <p>\u307e\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304c\u4f55\u3089\u304b\u306e\u539f\u56e0\u3067\u5207\u65ad\u3055\u308c\u305f\u5834\u5408\u3001\u30ed\u30dc\u30c3\u30c8\u3082\u505c\u6b62\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>if (pad)\n{\n    // \u52d5\u4f5c\u53ef\u80fd\n}\nelse\n{\n    // \u975e\u5e38\u505c\u6b62\n}\n</code></pre> <p>\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>if (pad &amp;&amp; pad.getCross().toggle)\n{\n    // \u52d5\u4f5c\u53ef\u80fd\n}\nelse\n{\n    // \u975e\u5e38\u505c\u6b62\n}\n</code></pre> <p>\u77ed\u304f\u66f8\u3051\u308b\u3088\u3046\u306b\u3001<code>pad.isOperable()</code> \u3068\u3044\u3046\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002\u51e6\u7406\u5185\u5bb9\u306f\u4e0a\u306e\u30b3\u30fc\u30c9\u3068\u540c\u3058\u3067\u3059\u3002</p> <pre><code>if (pad.isOperable())\n{\n    // \u52d5\u4f5c\u53ef\u80fd\n}\nelse\n{\n    // \u975e\u5e38\u505c\u6b62\n}\n</code></pre>"},{"location":"practice/omni/#_19","title":"\ud83c\udf1f \u5b8c\u6210\u5f62","text":"<pre><code>#include &lt;Udon.hpp&gt;\n#include \"Motor.hpp\"\n\nstatic Udon::E220PadPS5 pad{{\n    .serial  = Serial1,\n    .m0      = 13,\n    .m1      = 12,\n    .aux     = 2,\n}};\n\nstatic Motor motor0{ 19, 17, 18 };    // \u53f3\u524d\nstatic Motor motor1{ 16, 15, 14 };    // \u53f3\u5f8c\nstatic Motor motor2{ 28, 26, 27 };    // \u5de6\u5f8c\nstatic Motor motor3{ 22, 20, 21 };    // \u5de6\u524d\n\nstatic Udon::BNO055 gyro{ Wire };\n\nstatic Udon::LoopCycleController loopCtrl{ 10000 };\n\nstatic Udon::PidController turnPid{ 150, 0, 50, loopCtrl.cycleUs() };\n\nvoid setup()\n{\n    const int channel = 3;\n    pad.begin(channel);\n    gyro.begin();\n}\n\n// \u76ee\u6a19\u306e\u65cb\u56de\u89d2\ndouble targetYaw;\n\n// \u65cb\u56de\u7d42\u4e86\u6642\u523b\nuint32_t lastTurnMs;\n\nvoid loop()\n{\n    pad.update();\n    gyro.update();\n\n    if (pad.isOperable())\n    {\n        // \u30b8\u30e3\u30a4\u30ed\u30bb\u30f3\u30b5\u304b\u3089\u65cb\u56de\u89d2\u3092\u53d6\u5f97\n        const double yaw = gyro.getYaw();\n\n        // \u30b9\u30c6\u30a3\u30c3\u30af\u306e\u5024\u3092\u53d6\u5f97\n        const double turn = pad.getRightStick().x;\n\n        // \u30ed\u30dc\u30c3\u30c8\u304b\u3089\u898b\u305f\u5ea7\u6a19\u7cfb\n        const Udon::Vec2 localVector = pad.getLeftStick();\n\n        // \u64cd\u7e26\u8005\u304b\u3089\u898b\u305f\u5ea7\u6a19\u7cfb\u306b\u5909\u63db\n        const Udon::Vec2 globalVector = localVector.rotated(yaw);\n\n        // \u30bf\u30c3\u30c1\u30d1\u30c3\u30c9\u306e\u30af\u30ea\u30c3\u30af\u3067\u30dd\u30b8\u30c6\u30a3\u30d6\u5236\u5fa1\u306e\u30bc\u30ed\u89d2\u5ea6\u3092\u8a2d\u5b9a\n        if (pad.getTouch().click)\n        {\n            gyro.clear();\n            targetYaw = 0;\n        }\n\n        if (turn)\n        {\n            // \u65cb\u56de\u4e2d\u306f\u6642\u523b\u3092\u8a18\u9332\u3057\u7d9a\u3051\u308b\n            lastTurnMs = millis();\n        }\n\n        // \u73fe\u5728\u306e\u6642\u523b\u3068\u5dee\u3092\u3068\u308b\u3068\u3001\u65cb\u56de\u5f8c\u4f55ms\u7d4c\u904e\u3057\u305f\u304b\u3092\u6c42\u3081\u3089\u308c\u308b\n        const uint32_t elapsedMs = millis() - lastTurnMs;\n        if (elapsedMs &lt; 1000)\n        {\n            // \u65cb\u56de\u7d42\u4e86\u5f8c 1 \u79d2\u4ee5\u5185\u306f\u88dc\u6b63\u3092\u7121\u52b9\u306b\u3059\u308b\u3002\u65cb\u56de\u4e2d\u3082\u3053\u306e if \u306b\u5165\u308b\u305f\u3081\u3001\u7121\u52b9\u306b\u306a\u308b\n            targetYaw = yaw;\n        }\n\n        // PID \u5236\u5fa1\u3067\u88dc\u6b63\u5024\u3092\u7b97\u51fa\n        const double correctionTurn = turnPid(yaw, targetYaw);\n\n        // \u5404\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u7b97\u51fa\n        double m0 = +globalVector.x - globalVector.y + turn - correctionTurn;\n        double m1 = -globalVector.x - globalVector.y + turn - correctionTurn;\n        double m2 = -globalVector.x + globalVector.y + turn - correctionTurn;\n        double m3 = +globalVector.x + globalVector.y + turn - correctionTurn;\n\n        // \u51fa\u529b\u5024\u3092\u5727\u7e2e\n        const double limitPower = 210;\n        const double maxPower = std::max({ abs(m0), abs(m1), abs(m2), abs(m3) });\n        if (maxPower &gt; limitPower)\n        {\n            const double ratio = limitPower / maxPower;\n            m0 *= ratio;\n            m1 *= ratio;\n            m2 *= ratio;\n            m3 *= ratio;\n        }\n\n        // \u30e2\u30fc\u30bf\u30fc\u3092\u52d5\u304b\u3059\n        motor0.move(m0);\n        motor1.move(m1);\n        motor2.move(m2);\n        motor3.move(m3);\n    }\n    else\n    {\n        // \u975e\u5e38\u505c\u6b62\n        motor0.stop();\n        motor1.stop();\n        motor2.stop();\n        motor3.stop();\n    }\n\n    loopCtrl.update();\n}\n</code></pre>"},{"location":"practice/robomaster_motor/","title":"\u30ed\u30dc\u30de\u30b9\u30e2\u30fc\u30bf\u30fc\u3092\u56de\u305d\u3046","text":"<pre><code>#include &lt;Udon.hpp&gt;\n\nUdon::CanBusTeensy&lt;CAN2&gt; bus;\n\nUdon::RoboMasterC620 motor{ bus, 1 };  // \u30e2\u30fc\u30bf\u30fcID: 1\n\nvoid setup()\n{\n    bus.begin();\n}\n\nvoid loop()\n{\n    bus.update();\n\n    motor.setCurrent(1000);\n}\n</code></pre>"},{"location":"practice/udon_library/","title":"UdonLibrary \u306e\u4f7f\u3044\u65b9","text":"<p>UdonLibrary \u306f\u90e8\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002</p> <p>https://github.com/udonrobo/UdonLibrary</p> <p>\u30ed\u30dc\u30b3\u30f3\u306e\u5ea6\u306b\u6bce\u56de\u4e00\u304b\u3089\u66f8\u3044\u3066\u3044\u308b\u3068\u5927\u5909\u306a\u306e\u3067\u3001\u3088\u304f\u66f8\u304f\u30b3\u30fc\u30c9\u3092 UdonLibrary \u5185\u3067\u5b9f\u88c5\u3057\u3001\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u7c21\u5358\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"practice/udon_library/#_1","title":"\u958b\u767a\u7d4c\u7def\u30fb\u6b74\u53f2","text":"<p>\u8ffd\u3048\u308b\u7bc4\u56f2\u3060\u3068\u90e8\u306e\u30e9\u30a4\u30d6\u30e9\u30a4\u306f 2016 \u5e74\u304b\u3089\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\u5f53\u6642\u306f\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u304c\u96c6\u307e\u3063\u305f zip \u30d5\u30a1\u30a4\u30eb\u3092\u56de\u3059\u5f62\u3067\u5229\u7528\u3057\u3066\u3044\u307e\u3057\u305f\u3002</p> <p>CAN \u901a\u4fe1\u3078\u306e\u79fb\u884c\u306b\u4f34\u3063\u3066\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6574\u7406\u3057\u3001GitHub \u3067\u7ba1\u7406\u3059\u308b\u5f62\u306b\u306a\u308a\u307e\u3057\u305f\u3002UdonLibrary \u306f 2022/09 \u304b\u3089\u5b58\u5728\u3057\u307e\u3059\u3002</p>"},{"location":"practice/udon_library/#_2","title":"\u4e3b\u306a\u6a5f\u80fd","text":"<p>\u901a\u4fe1\u7cfb</p> <ul> <li>CAN</li> <li>I2C</li> <li>USB \u30b7\u30ea\u30a2\u30eb</li> <li>\u7121\u7dda</li> <li>PS5 \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc</li> </ul> <p>\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7cfb</p> <ul> <li>\u30eb\u30fc\u30d7\u5468\u671f\u5236\u5fa1</li> <li>\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u5236\u5fa1</li> <li>\u79fb\u52d5\u5e73\u5747</li> </ul> <p>\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0\u7cfb</p> <ul> <li>\u30e2\u30fc\u30bf\u30fc</li> <li>\u30ed\u30dc\u30de\u30b9\u30e2\u30fc\u30bf\u30fc</li> <li>\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u30fc</li> <li>\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc</li> <li>\u30b8\u30e3\u30a4\u30ed</li> <li>7 \u30bb\u30b0\u30e1\u30f3\u30c8 LED</li> </ul> <p>\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578b\u7cfb</p> <ul> <li>\u4e8c\u6b21\u5143\u30d9\u30af\u30c8\u30eb</li> <li>\u8272\u7a7a\u9593</li> <li>\u30aa\u30a4\u30e9\u30fc\u89d2</li> <li>\u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3</li> </ul>"},{"location":"practice/udon_library/#_3","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5","text":"<p>UdonLibrary \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3059\u3002Arduino \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30d5\u30a9\u30eb\u30c0\u306b\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3059\u3002</p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>https://github.com/udonrobo/UdonLibrary/blob/master/docs/Install/ArduinoIDE.md</p> <p></p>"},{"location":"practice/udon_library/#_4","title":"\u4f7f\u3044\u65b9","text":""},{"location":"practice/udon_library/#_5","title":"\ud83c\udf1f \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9","text":"<p><code>Udon.hpp</code> \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3068\u5168\u3066\u306e\u6a5f\u80fd\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nvoid setup()\n{\n}\n\nvoid loop()\n{\n}\n</code></pre>"},{"location":"practice/udon_library/#_6","title":"\ud83c\udf1f \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f","text":"<p>\u57fa\u672c\u7684\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3059\u308b\u3068\u4f7f\u3044\u65b9\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002</p> <p>\u30e2\u30fc\u30bf\u30fc\u306e\u5834\u5408)</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::Motor3 motor{ 0, 1, 2 };\n\nvoid setup()\n{\n\u00a0 \u00a0 motor.begin();\n}\n\nvoid loop()\n{\n\u00a0 \u00a0 motor.move(200);\n}\n</code></pre> <p>static \u306b\u3064\u3044\u3066</p> <p><code>static</code> (\u9759\u7684) \u306a\u5909\u6570\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u4ed6\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <p>static \u306a\u5909\u6570\u306f\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u306e\u307f\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u78ba\u7d04\u3055\u308c\u308b\u305f\u3081\u3001\u4ed6\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u5b89\u5fc3\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"practice/udon_library/#_7","title":"\ud83c\udf1f \u4e2d\u8eab\u306e\u898b\u65b9","text":"<p>\u5b9f\u88c5\u3092\u898b\u305f\u3044\u5834\u5408\u3001<code>src</code> \u30d5\u30a9\u30eb\u30c0\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\u3002GitHub \u3084 VSCode \u3067\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>VSCode \u3067\u958b\u304f\u5834\u5408)</p> <pre><code>code ~/Documents/Arduino/libraries/UdonLibrary\n</code></pre>"},{"location":"practice/udon_library/#_8","title":"\u30af\u30e9\u30b9\u306e\u7d39\u4ecb","text":""},{"location":"practice/udon_library/#udonmovingaverage","title":"\ud83c\udf1f <code>Udon::MovingAverage</code>","text":"<p>\u79fb\u52d5\u5e73\u5747\u30af\u30e9\u30b9\u3067\u3059\u3002\u7c21\u5358\u306b\u8a00\u3046\u3068\u5909\u5316\u3092\u6ed1\u3089\u304b\u306b\u3057\u3066\u304f\u308c\u308b\u30af\u30e9\u30b9\u3067\u3001\u30e2\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u5024\u3092\u6ed1\u3089\u304b\u306b\u3059\u308b\u306e\u306b\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u5185\u90e8\u306b\u306f\u914d\u5217\u304c\u3042\u308a\u3001\u305d\u306e\u30b5\u30a4\u30ba\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u914d\u5217\u306e\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3044\u307b\u3069\u6ed1\u3089\u304b\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u9045\u308c\u304c\u751f\u3058\u307e\u3059\u3002</p> <p>\u30e2\u30fc\u30bf\u30fc\u3092\u52d5\u304b\u3059\u30de\u30a4\u30b3\u30f3\u3067\u4f7f\u3044\u3001\u30e1\u30a4\u30f3\u30de\u30a4\u30b3\u30f3\u3067\u306f\u4f7f\u3044\u307e\u305b\u3093\u3002</p> <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::MovingAverage&lt;50&gt; ma;\n\nvoid setup()\n{\n}\n\nvoid loop()\n{\n    int power = 100;\n\n    int smooth_power = ma(power);  // \u3053\u308c\u3060\u3051\uff01\n\n    motor.move(smooth_power);\n\n    delay(10);\n}\n</code></pre> <p>\u79fb\u52d5\u5e73\u5747\u3092\u304b\u3051\u308b\u524d\u3068\u5f8c\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002</p> <p></p> <p>\u547c\u3073\u51fa\u3059\u5ea6\u306b\u56f3\u306e\u3088\u3046\u306b\u914d\u5217\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u304d\u3001\u5e73\u5747\u5024\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u914d\u5217\u306e\u500b\u6570\u56de\u547c\u3073\u51fa\u3059\u3068\u3001\u6307\u5b9a\u306e\u5024\u306b\u5230\u9054\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"practice/udon_library/#udonloopcyclecontroller","title":"\ud83c\udf1f <code>Udon::LoopCycleController</code>","text":"<p>https://github.com/udonrobo/UdonLibrary/blob/master/docs/Algorithm/LoopCycleController.md</p>"},{"location":"practice/udon_library/#udonbno055","title":"\ud83c\udf1f <code>Udon::BNO055</code>","text":"<p>https://github.com/udonrobo/UdonLibrary/blob/master/docs/Driver/BNO055.md</p>"},{"location":"practice/udon_library/#udonmotor3-motor2","title":"\ud83c\udf1f <code>Udon::Motor3, Motor2</code>","text":"<p><code>Udon::Motor3</code> \u30af\u30e9\u30b9\u306f\u3001\u524d\u56de\u4f5c\u3063\u305f\u30e2\u30fc\u30bf\u30fc\u30af\u30e9\u30b9\u3068\u79fb\u52d5\u5e73\u5747\u30af\u30e9\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30af\u30e9\u30b9\u3067\u3059\u3002</p> <p><code>Udon::Motor2</code> \u30af\u30e9\u30b9\u306f\u5236\u5fa1\u4fe1\u53f7\u7dda\u304c 2 \u672c\u306e\u30e2\u30fc\u30bf\u30fc\u30c9\u30e9\u30a4\u30d0\u3092\u5236\u5fa1\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002</p> <p></p>"},{"location":"practice/udon_library/#udonvec2","title":"\ud83c\udf1f <code>Udon::Vec2</code>","text":"<p>x, y \u3092\u6301\u3064\u69cb\u9020\u4f53 + \u4fbf\u5229\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u30e2\u30ea\u30e2\u30ea\u306a\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578b\u3067\u3059\u3002\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <pre><code>namespace Udon\n{\n    struct Vec2\n    {\n        double x;\n        double y;\n    };\n}\n</code></pre>"},{"location":"practice/udon_library/#_9","title":"\u30d9\u30af\u30c8\u30eb\u306e\u9577\u3055\u3092\u6c42\u3081\u308b","text":"length()<pre><code>Udon::Vec2 v{ 3, 4 };\ndouble length = v.length();  // 5\n</code></pre>"},{"location":"practice/udon_library/#_10","title":"\u30d9\u30af\u30c8\u30eb\u3092\u56de\u8ee2\u3055\u305b\u308b","text":"rotated()<pre><code>Udon::Vec2 vector{ 1, 2 };\nUdon::Vec2 rotated = vector.rotated(Udon::PI / 2);  // 90 \u5ea6\u6642\u8a08\u56de\u308a\u306b\u56de\u8ee2\n</code></pre>"},{"location":"practice/udon_library/#_11","title":"\u30d9\u30af\u30c8\u30eb\u540c\u58eb\u306e\u6f14\u7b97","text":"operator+()<pre><code>Udon::Vec2 vector0{ 1, 2 };\nUdon::Vec2 vector1{ 1, -1 };\n\nUdon::Vec2 sum = vector0 + vector1;  // (2, 1)\n</code></pre>"},{"location":"practice/udon_library/#_12","title":"\u89d2\u5ea6\u3092\u6c42\u3081\u308b","text":"angle()<pre><code>Udon::Vec2 vector{ 1, 2 };\ndouble angle = vector.angle();\n</code></pre>"},{"location":"practice/udon_library/#udonoptional","title":"\ud83c\udf1f <code>Udon::Optional</code>","text":"<p>\u6709\u52b9\u306a\u5024\u3092\u6301\u3064\u304b\u3001\u3082\u3057\u304f\u306f\u7121\u52b9\u304b\u3092\u8868\u3059\u578b\u3067\u3059\u3002\u901a\u4fe1\u306e\u53d7\u4fe1\u30a8\u30e9\u30fc\u306e\u5224\u5225\u306b\u4f7f\u3044\u307e\u3059\u3002</p> <p>https://github.com/udonrobo/UdonLibrary/blob/master/docs/Types/Optional.md</p>"},{"location":"sensor/bno055/","title":"BNO055","text":""},{"location":"sensor/bno055/#_1","title":"\ud83c\udf1f \u6982\u8981","text":"<p>BNO055 \u306f\u30019 \u8ef8\u306e\u30bb\u30f3\u30b5\u30fc\u3092\u642d\u8f09\u3057\u305f IMU\uff08\u6163\u6027\u8a08\u6e2c\u88c5\u7f6e\uff09\u3067\u3059\u3002</p> <p>\u4e3b\u306b\u30ed\u30dc\u30c3\u30c8\u306e\u65cb\u56de\u89d2\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"sensor/bno055/#_2","title":"\ud83c\udf1f \u914d\u7dda","text":"<p>\u30e1\u30a4\u30f3\u57fa\u677f\u4e0a\u306b BNO055 \u3092\u63a5\u7d9a\u3059\u308b\u7528\u306e\u7aef\u5b50\u304c\u3042\u308b\u305f\u3081\u3001\u305d\u3053\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"sensor/bno055/#_3","title":"\ud83c\udf1f \u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2","text":"<p><code>Udon::BNO055</code> \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u304c\u8f09\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>https://github.com/udonrobo/UdonLibrary/blob/master/docs/Driver/BNO055.md</p> Teensy4.0\u3067\u65cb\u56de\u89d2\u3092\u53d6\u5f97\u3059\u308b\u4f8b<pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::BNO055 gyro{ Wire };\n\nvoid setup()\n{\n    Serial.begin(115200);\n    gyro.begin();\n}\n\nvoid loop()\n{\n    gyro.update();\n\n    const double yaw = gyro.getYaw();\n\n    Serial.println(yaw);\n\n    delay(10);\n}\n</code></pre>"},{"location":"sensor/rotary_encoder/","title":"\u30ed\u30fc\u30bf\u30ea\u30fc\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc","text":""},{"location":"sensor/rotary_encoder/#_2","title":"\ud83c\udf1f \u6982\u8981","text":"<p>\u56de\u8ee2\u89d2\u5ea6\u3092\u6e2c\u5b9a\u3059\u308b\u30bb\u30f3\u30b5\u30fc\u3067\u3059\u3002</p>"},{"location":"sensor/rotary_encoder/#_3","title":"\ud83c\udf1f \u914d\u7dda","text":"\u5168\u4f53\u56f3\u4e2d\u7d99\u7528\u914d\u7dda"},{"location":"sensor/rotary_encoder/#_4","title":"\ud83c\udf1f \u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2","text":"<p>\u6e2c\u5b9a\u89d2\u5ea6\u306f\u30ab\u30a6\u30f3\u30c8\u5024\u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u4e00\u5468\u5206\u306e\u30ab\u30a6\u30f3\u30c8\u5024\u306f\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc\u306e\u5206\u89e3\u80fd\u306b\u3088\u3063\u3066\u6c7a\u307e\u308a\u307e\u3059\u3002</p> Raspberry Pi Pico \u3067\u5236\u5fa1Teensy \u3067\u5236\u5fa1 <pre><code>#include &lt;Udon.hpp&gt;\n\nstatic Udon::EncoderPico encoder{ 12, 13 };  // A, B \u30d4\u30f3\u756a\u53f7\n\nvoid setup()\n{\n    Serial.begin(115200);\n    encoder.begin();\n}\n\nvoid loop()\n{\n    const int32_t count = encoder.read();\n\n    Serial.println(count);\n\n    delay(10);\n}\n</code></pre> <p>Warning</p> <p>A, B \u30d4\u30f3\u306f\u96a3\u308a\u5408\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>Note</p> <p>PIO \u3092\u4f7f\u3063\u3066\u8a08\u6e2c\u3057\u307e\u3059\u3002\u3088\u3063\u3066\u6700\u5927 8 \u500b\u307e\u3067\u306e\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc\u3092\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;Encoder.h&gt;\n\nstatic Encoder encoder{ 0, 1 };  // A, B \u30d4\u30f3\u756a\u53f7\n\nvoid setup()\n{\n    Serial.begin(115200);\n    encoder.begin();\n}\n\nvoid loop()\n{\n    const int32_t count = encoder.read();\n\n    Serial.println(count);\n\n    delay(10);\n}\n</code></pre>"},{"location":"sensor/switch/","title":"\u30b9\u30a4\u30c3\u30c1","text":""},{"location":"sensor/switch/#_2","title":"\ud83c\udf1f \u6982\u8981","text":"<p>\u62bc\u3055\u308c\u305f\u304b\u62bc\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3092\u691c\u77e5\u3059\u308b\u30bb\u30f3\u30b5\u30fc\u3067\u3059\u3002</p>"},{"location":"sensor/switch/#_3","title":"\ud83c\udf1f \u914d\u7dda","text":"<p>\u57fa\u677f\u4e0a\u306e\u30b9\u30a4\u30c3\u30c1\u306e\u7aef\u5b50\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u6975\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p></p>"},{"location":"sensor/switch/#_4","title":"\ud83c\udf1f \u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2","text":"<p>digitalRead() \u95a2\u6570\u3092\u4f7f\u3063\u3066\u30b9\u30a4\u30c3\u30c1\u306e\u72b6\u614b\u3092\u8aad\u307f\u53d6\u308a\u307e\u3059\u3002\u62bc\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\u306b\u5165\u529b\u96fb\u5727\u304c\u4e0d\u5b89\u5b9a\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u30d7\u30eb\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002</p> <p>\u62bc\u3059\u3068\u30b0\u30e9\u30f3\u30c9\u306b\u63a5\u7d9a\u3055\u308c\u308b\u306e\u3067\u3001\u62bc\u3055\u308c\u305f\u3068\u304d\u306b LOW \u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>const int pin = 2;  // \u30b9\u30a4\u30c3\u30c1\u306e\u30d4\u30f3\u756a\u53f7\n\nvoid setup()\n{\n    Serial.begin(115200);\n    pinMode(pin, INPUT_PULLUP);\n}\n\nvoid loop()\n{\n    const bool isPressed = digitalRead(pin) == LOW;\n\n    Serial.println(isPressed);\n\n    delay(10);\n}\n</code></pre>"}]}